{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\solana-boilerplate\\\\src\\\\ColorModeSwitcher.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\nimport { mode } from '@chakra-ui/theme-tools';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColorModeSwitcher = props => {\n  _s();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  const styles = {\n    global: props => ({\n      body: {\n        // sets a custom bg color for dark mode only\n        bg: mode( // light mode value retrieved from theme\n        props.theme.semanticTokens.colors['chakra-body-bg']._light, // your custom value for dark mode\n        '#252C32')(props)\n      }\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    size: \"md\",\n    fontSize: \"lg\",\n    \"aria-label\": `Switch to ${text} mode`,\n    variant: \"ghost\",\n    color: \"current\",\n    marginLeft: \"2\",\n    onClick: toggleColorMode,\n    icon: /*#__PURE__*/_jsxDEV(SwitchIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this),\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ColorModeSwitcher, \"V165luumhZUVDl02bS0/lj2LpLw=\", false, function () {\n  return [useColorMode, useColorModeValue, useColorModeValue];\n});\n\n_c = ColorModeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorModeSwitcher\");","map":{"version":3,"sources":["C:/Users/Public/Web3/Github/solana-boilerplate/src/ColorModeSwitcher.js"],"names":["React","useColorMode","useColorModeValue","IconButton","FaMoon","FaSun","mode","ColorModeSwitcher","props","toggleColorMode","text","SwitchIcon","styles","global","body","bg","theme","semanticTokens","colors","_light"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,iBAAvB,EAA0CC,UAA1C,QAA4D,kBAA5D;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,gBAA9B;AAEA,SAASC,IAAT,QAAqB,wBAArB;;AAEA,OAAO,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAsBR,YAAY,EAAxC;AACA,QAAMS,IAAI,GAAGR,iBAAiB,CAAC,MAAD,EAAS,OAAT,CAA9B;AACA,QAAMS,UAAU,GAAGT,iBAAiB,CAACE,MAAD,EAASC,KAAT,CAApC;AAEF,QAAMO,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAGL,KAAD,KAAgC;AACtCM,MAAAA,IAAI,EAAE;AACJ;AACAC,QAAAA,EAAE,EAAET,IAAI,EACN;AACAE,QAAAA,KAAK,CAACQ,KAAN,CAAYC,cAAZ,CAA2BC,MAA3B,CAAkC,gBAAlC,EAAoDC,MAF9C,EAGN;AACA,iBAJM,CAAJ,CAKFX,KALE;AAFA;AADgC,KAAhC;AADK,GAAf;AAcE,sBACE,QAAC,UAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,QAAQ,EAAC,IAFX;AAGE,kBAAa,aAAYE,IAAK,OAHhC;AAIE,IAAA,OAAO,EAAC,OAJV;AAKE,IAAA,KAAK,EAAC,SALR;AAME,IAAA,UAAU,EAAC,GANb;AAOE,IAAA,OAAO,EAAED,eAPX;AAQE,IAAA,IAAI,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YARR;AAAA,OASMD;AATN;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhCM;;GAAMD,iB;UACiBN,Y,EACfC,iB,EACMA,iB;;;KAHRK,iB","sourcesContent":["import React from 'react';\r\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\r\nimport { FaMoon, FaSun } from 'react-icons/fa';\r\nimport type { StyleFunctionProps } from '@chakra-ui/styled-system';\r\nimport { mode } from '@chakra-ui/theme-tools';\r\n\r\nexport const ColorModeSwitcher = props => {\r\n  const { toggleColorMode } = useColorMode();\r\n  const text = useColorModeValue('dark', 'light');\r\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\r\n \r\nconst styles = {\r\n  global: (props: StyleFunctionProps) => ({\r\n    body: {\r\n      // sets a custom bg color for dark mode only\r\n      bg: mode(\r\n        // light mode value retrieved from theme\r\n        props.theme.semanticTokens.colors['chakra-body-bg']._light,\r\n        // your custom value for dark mode\r\n        '#252C32',\r\n      )(props),\r\n    },\r\n  }),\r\n};\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"md\"\r\n      fontSize=\"lg\"\r\n      aria-label={`Switch to ${text} mode`}\r\n      variant=\"ghost\"\r\n      color=\"current\"\r\n      marginLeft=\"2\"\r\n      onClick={toggleColorMode}\r\n      icon={<SwitchIcon />}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}