{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { analyzeBreakpoints } from \"@chakra-ui/utils\";\nimport { createThemeVars } from \"./create-theme-vars\";\nimport { extractTokens, omitVars } from \"./theme-tokens\";\nexport function toCSSVar(rawTheme) {\n  var _theme$config;\n\n  /**\n   * In the case the theme has already been converted to css-var (e.g extending the theme),\n   * we can omit the computed css vars and recompute it for the extended theme.\n   */\n  var theme = omitVars(rawTheme); // omit components and breakpoints from css variable map\n\n  var tokens = extractTokens(theme);\n  var cssVarPrefix = (_theme$config = theme.config) == null ? void 0 : _theme$config.cssVarPrefix;\n  var _createThemeVars = createThemeVars(tokens, {\n      cssVarPrefix: cssVarPrefix\n    }),\n    cssMap = _createThemeVars.cssMap,\n    cssVars = _createThemeVars.cssVars;\n  var defaultCssVars = {\n    \"--chakra-ring-inset\": \"var(--chakra-empty,/*!*/ /*!*/)\",\n    \"--chakra-ring-offset-width\": \"0px\",\n    \"--chakra-ring-offset-color\": \"#fff\",\n    \"--chakra-ring-color\": \"rgba(66, 153, 225, 0.6)\",\n    \"--chakra-ring-offset-shadow\": \"0 0 #0000\",\n    \"--chakra-ring-shadow\": \"0 0 #0000\",\n    \"--chakra-space-x-reverse\": \"0\",\n    \"--chakra-space-y-reverse\": \"0\"\n  };\n  Object.assign(theme, {\n    __cssVars: _extends({}, defaultCssVars, cssVars),\n    __cssMap: cssMap,\n    __breakpoints: analyzeBreakpoints(theme.breakpoints)\n  });\n  return theme;\n}","map":null,"metadata":{},"sourceType":"module"}