{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\SolPets\\\\src\\\\components\\\\LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { FormControl, FormLabel, SimpleGrid, VStack, Input, FormHelperText, Box, Heading, Text, Stack, HStack, RadioGroup, Radio, NumberInput, NumberInputField, Button, Flex, Link, ButtonGroup, IconButton, AddIcon, useDisclosure, Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, Lorem, ModalFooter, useToast } from '@chakra-ui/react';\nimport { ChangeEvent } from 'react';\nimport { useForm } from 'react-hook-form';\nimport AlertPop from './AlertPop';\nimport Stats from './Stats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  const toast = useToast();\n  const [data, setData] = useState();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    //console.log(data);\n    toast({\n      title: 'Submitted!',\n      status: 'success',\n      duration: 3000,\n      isClosable: true\n    });\n    setData(data);\n  };\n\n  console.log(data);\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(VStack, {\n      justifyContent: \"space-between\",\n      align: \"center\",\n      mt: 8,\n      spacing: \"3px\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        textAlign: \"center\",\n        mb: \"10\",\n        children: \"Create a new passport\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        maxWidth: \"750px\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          textAlign: \"center\",\n          children: \"Create a new profile for your pet. If you already have an account connect to your wallet to view your NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: 1,\n      spacing: 10,\n      m: \"120px\",\n      align: \"center\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 5,\n        borderRadius: 30,\n        borderWidth: 3,\n        p: 20,\n        bg: \"#F4F2F2\",\n        color: \"grey\",\n        textAlign: \"left\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          isRequired: true,\n          onSubmit: handleSubmit(onSubmit),\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              color: \"#6D5D5D\",\n              children: \"What's your pet's name?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              borderColor: \"#B8B5B5\",\n              color: \"black\",\n              placeholder: \"What's your pet's name?\",\n              ...register('petname', {\n                required: \"Please enter your pet's name\",\n                minLength: 2,\n                maxLength: 80\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), errors.petname && /*#__PURE__*/_jsxDEV(AlertPop, {\n              title: errors.petname.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              as: \"legend\",\n              children: \"What kind of pet do you have?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              isRequired: true,\n              ...register('animal'),\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                spacing: \"30px\",\n                children: [/*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Dog\",\n                  children: \"Dog\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Cat\",\n                  children: \"Cat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Reptile\",\n                  children: \"Reptile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), errors.animal && /*#__PURE__*/_jsxDEV(AlertPop, {\n              title: errors.animal.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              color: \"#6D5D5D\",\n              children: \"When is your pet's birthdate?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"date\",\n              borderColor: \"#B8B5B5\",\n              color: \"black\",\n              placeholder: \"When is your pet's birthdate?\",\n              ...register('birthdate', {\n                required: 'Please enter your pets birthday',\n                minLength: 3,\n                maxLength: 100\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), errors.birthdate && /*#__PURE__*/_jsxDEV(AlertPop, {\n              title: errors.birthdate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              color: \"#6D5D5D\",\n              children: \"What's your pet's breed?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              borderColor: \"#B8B5B5\",\n              color: \"black\",\n              placeholder: \"What's your pet's breed?\",\n              ...register('breed', {\n                required: \"Please enter your pet's breed\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), errors.breed && /*#__PURE__*/_jsxDEV(AlertPop, {\n              title: errors.breed.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                color: \"#6D5D5D\",\n                textAlign: \"center\",\n                children: \"Microchip No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                min: 10,\n                borderColor: \"#B8B5B5\",\n                color: \"black\",\n                ...register('microchip')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), errors.microchip && /*#__PURE__*/_jsxDEV(AlertPop, {\n                title: errors.microchip.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                color: \"#6D5D5D\",\n                textAlign: \"center\",\n                children: \"Rabies ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                min: 10,\n                borderColor: \"#B8B5B5\",\n                color: \"black\",\n                ...register('rabies')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), errors.rabies && /*#__PURE__*/_jsxDEV(AlertPop, {\n                title: errors.rabies.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(VStack, {\n              mt: \"10px\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                color: \"#6D5D5D\",\n                textAlign: \"center\",\n                children: \"Upload a photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                isRequired: true,\n                bg: \"grey.500\",\n                color: \"white\",\n                borderRadius: 10,\n                textAlign: \"center\",\n                type: \"file\" // {...register('picture', {\n                //   required: 'Please upload a photo',\n                // })}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                bg: \"#C92BF7\",\n                type: \"submit\",\n                color: \"white\",\n                width: \"200px\",\n                borderRadius: \"md\",\n                mt: 4,\n                variant: \"ghost\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              mt: 4,\n              children: \"Save Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), data && /*#__PURE__*/_jsxDEV(Stats, {\n        Petname: data.petname,\n        Animal: data.animal,\n        Birthdate: data.birthdate,\n        Breed: data.breed,\n        Microchip: data.microchip,\n        Rabies: data.rabies,\n        Picture: data.picture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Form, \"dwC/lVgKZ1ocWyWHxhe0F5ynpCo=\", false, function () {\n  return [useToast, useForm];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/Public/Web3/Github/SolPets/src/components/LoginForm.jsx"],"names":["React","useCallback","useEffect","useState","useMemo","FormControl","FormLabel","SimpleGrid","VStack","Input","FormHelperText","Box","Heading","Text","Stack","HStack","RadioGroup","Radio","NumberInput","NumberInputField","Button","Flex","Link","ButtonGroup","IconButton","AddIcon","useDisclosure","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","Lorem","ModalFooter","useToast","ChangeEvent","useForm","AlertPop","Stats","Form","toast","data","setData","register","handleSubmit","formState","errors","onSubmit","title","status","duration","isClosable","console","log","required","minLength","maxLength","petname","message","animal","birthdate","breed","microchip","rabies","picture"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState, useMemo } from 'react';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  SimpleGrid,\r\n  VStack,\r\n  Input,\r\n  FormHelperText,\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Stack,\r\n  HStack,\r\n  RadioGroup,\r\n  Radio,\r\n  NumberInput,\r\n  NumberInputField,\r\n  Button,\r\n  Flex,\r\n  Link,\r\n  ButtonGroup,\r\n  IconButton,\r\n  AddIcon,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  Lorem,\r\n  ModalFooter,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport { ChangeEvent } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport AlertPop from './AlertPop';\r\nimport Stats from './Stats';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Form() {\r\n  const toast = useToast();\r\n  const [data, setData] = useState();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = data => {\r\n    //console.log(data);\r\n    toast({\r\n      title: 'Submitted!',\r\n      status: 'success',\r\n      duration: 3000,\r\n      isClosable: true,\r\n    });\r\n\r\n    setData(data);\r\n  };\r\n  console.log(data);\r\n  console.log(errors);\r\n  return (\r\n    <>\r\n      <VStack\r\n        justifyContent=\"space-between\"\r\n        align=\"center\"\r\n        mt={8}\r\n        spacing=\"3px\"\r\n      >\r\n        <Heading textAlign=\"center\" mb=\"10\">\r\n          Create a new passport\r\n        </Heading>\r\n        <Box maxWidth=\"750px\" align=\"center\">\r\n          <Text textAlign=\"center\">\r\n            Create a new profile for your pet. If you already have an account\r\n            connect to your wallet to view your NFT\r\n          </Text>\r\n        </Box>\r\n      </VStack>\r\n      <SimpleGrid\r\n        columns={1}\r\n        spacing={10}\r\n        m=\"120px\"\r\n        align=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Stack\r\n          spacing={5}\r\n          borderRadius={30}\r\n          borderWidth={3}\r\n          p={20}\r\n          bg=\"#F4F2F2\"\r\n          color=\"grey\"\r\n          textAlign=\"left\"\r\n        >\r\n          <form isRequired onSubmit={handleSubmit(onSubmit)}>\r\n            <VStack>\r\n              <FormLabel color=\"#6D5D5D\">What's your pet's name?</FormLabel>\r\n              <Input\r\n                type=\"name\"\r\n                borderColor=\"#B8B5B5\"\r\n                color=\"black\"\r\n                placeholder=\"What's your pet's name?\"\r\n                {...register('petname', {\r\n                  required: \"Please enter your pet's name\",\r\n                  minLength: 2,\r\n                  maxLength: 80,\r\n                })}\r\n              />\r\n              {errors.petname && <AlertPop title={errors.petname.message} />}\r\n              <FormLabel as=\"legend\">What kind of pet do you have?</FormLabel>\r\n              <RadioGroup isRequired {...register('animal')}>\r\n                <HStack spacing=\"30px\">\r\n                  <Radio value=\"Dog\">Dog</Radio>\r\n                  <Radio value=\"Cat\">Cat</Radio>\r\n                  <Radio value=\"Reptile\">Reptile</Radio>\r\n                  <Radio value=\"Other\">Other</Radio>\r\n                </HStack>\r\n              </RadioGroup>\r\n              {errors.animal && <AlertPop title={errors.animal.message} />}\r\n              <FormLabel color=\"#6D5D5D\">\r\n                When is your pet's birthdate?\r\n              </FormLabel>\r\n              <Input\r\n                type=\"date\"\r\n                borderColor=\"#B8B5B5\"\r\n                color=\"black\"\r\n                placeholder=\"When is your pet's birthdate?\"\r\n                {...register('birthdate', {\r\n                  required: 'Please enter your pets birthday',\r\n                  minLength: 3,\r\n                  maxLength: 100,\r\n                })}\r\n              />\r\n              {errors.birthdate && (\r\n                <AlertPop title={errors.birthdate.message} />\r\n              )}\r\n              <FormLabel color=\"#6D5D5D\">What's your pet's breed?</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                borderColor=\"#B8B5B5\"\r\n                color=\"black\"\r\n                placeholder=\"What's your pet's breed?\"\r\n                {...register('breed', {\r\n                  required: \"Please enter your pet's breed\",\r\n                })}\r\n              />\r\n              {errors.breed && <AlertPop title={errors.breed.message} />}\r\n              <FormControl>\r\n                <FormLabel color=\"#6D5D5D\" textAlign=\"center\">\r\n                  Microchip No.\r\n                </FormLabel>\r\n                <Input\r\n                  type=\"number\"\r\n                  min={10}\r\n                  borderColor=\"#B8B5B5\"\r\n                  color=\"black\"\r\n                  {...register('microchip')}\r\n                />\r\n                {errors.microchip && (\r\n                  <AlertPop title={errors.microchip.message} />\r\n                )}\r\n                <FormLabel color=\"#6D5D5D\" textAlign=\"center\">\r\n                  Rabies ID\r\n                </FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  min={10}\r\n                  borderColor=\"#B8B5B5\"\r\n                  color=\"black\"\r\n                  {...register('rabies')}\r\n                />\r\n                {errors.rabies && <AlertPop title={errors.rabies.message} />}\r\n              </FormControl>\r\n              <VStack mt=\"10px\">\r\n                <FormLabel color=\"#6D5D5D\" textAlign=\"center\">\r\n                  Upload a photo\r\n                </FormLabel>\r\n                <Input\r\n                  isRequired\r\n                  bg=\"grey.500\"\r\n                  color=\"white\"\r\n                  borderRadius={10}\r\n                  textAlign=\"center\"\r\n                  type=\"file\"\r\n                  // {...register('picture', {\r\n                  //   required: 'Please upload a photo',\r\n                  // })}\r\n                />\r\n\r\n                <Button\r\n                  bg=\"#C92BF7\"\r\n                  type=\"submit\"\r\n                  color=\"white\"\r\n                  width=\"200px\"\r\n                  borderRadius=\"md\"\r\n                  mt={4}\r\n                  variant=\"ghost\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </VStack>\r\n              <Link mt={4}>Save Profile</Link>\r\n            </VStack>\r\n          </form>\r\n        </Stack>\r\n        {data && (\r\n          <Stats\r\n            Petname={data.petname}\r\n            Animal={data.animal}\r\n            Birthdate={data.birthdate}\r\n            Breed={data.breed}\r\n            Microchip={data.microchip}\r\n            Rabies={data.rabies}\r\n            Picture={data.picture}\r\n          />\r\n        )}\r\n      </SimpleGrid>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}