{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\SolPets\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { mergeWith, objectKeys } from \"@chakra-ui/utils\";\nimport { background, border, color, effect, filter, flexbox, grid, interactivity, layout, list, others, position, ring, space, textDecoration, transform, transition, typography } from \"./config\";\nimport { pseudoPropNames, pseudoSelectors } from \"./pseudos\";\nexport var systemProps = mergeWith({}, background, border, color, flexbox, layout, filter, ring, interactivity, grid, others, position, effect, space, typography, textDecoration, transform, list, transition);\nvar layoutSystem = Object.assign({}, space, layout, flexbox, grid, position);\nexport var layoutPropNames = objectKeys(layoutSystem);\nexport var propNames = [].concat(_toConsumableArray(objectKeys(systemProps)), _toConsumableArray(pseudoPropNames));\nvar styleProps = _extends({}, systemProps, pseudoSelectors);\nexport var isStyleProp = function isStyleProp(prop) {\n  return prop in styleProps;\n};","map":null,"metadata":{},"sourceType":"module"}