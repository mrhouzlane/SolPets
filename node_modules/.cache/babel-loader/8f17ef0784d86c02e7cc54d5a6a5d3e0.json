{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\SolPets\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toArray from \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\SolPets\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\SolPets\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { walkObject } from \"@chakra-ui/utils\";\nimport { calc } from \"./calc\";\nimport { cssVar } from \"./css-var\";\nexport function createThemeVars(target, options) {\n  var context = {\n    cssMap: {},\n    cssVars: {}\n  };\n  walkObject(target, function (value, path) {\n    var _tokenHandlerMap$firs;\n\n    // firstKey will be e.g. \"space\"\n    var _path = _slicedToArray(path, 1),\n      firstKey = _path[0];\n    var handler = (_tokenHandlerMap$firs = tokenHandlerMap[firstKey]) != null ? _tokenHandlerMap$firs : tokenHandlerMap.defaultHandler;\n    var _handler = handler(path, value, options),\n      cssVars = _handler.cssVars,\n      cssMap = _handler.cssMap;\n    Object.assign(context.cssVars, cssVars);\n    Object.assign(context.cssMap, cssMap);\n  });\n  return context;\n}\n\n/**\n * Define transformation handlers for ThemeScale\n */\nvar tokenHandlerMap = {\n  space: function space(keys, value, options) {\n    var properties = tokenHandlerMap.defaultHandler(keys, value, options);\n    var _keys = _toArray(keys),\n      firstKey = _keys[0],\n      referenceKeys = _keys.slice(1);\n    var negativeLookupKey = firstKey + \".-\" + referenceKeys.join(\".\");\n    var negativeVarKey = keys.join(\"-\");\n    var _cssVar = cssVar(negativeVarKey, undefined, options.cssVarPrefix),\n      variable = _cssVar.variable,\n      reference = _cssVar.reference;\n    var negativeValue = calc.negate(value);\n    var varRef = calc.negate(reference);\n    return {\n      cssVars: properties.cssVars,\n      cssMap: _extends({}, properties.cssMap, _defineProperty({}, negativeLookupKey, {\n        value: \"\" + negativeValue,\n        var: \"\" + variable,\n        varRef: varRef\n      }))\n    };\n  },\n  defaultHandler: function defaultHandler(keys, value, options) {\n    var lookupKey = keys.join(\".\");\n    var varKey = keys.join(\"-\");\n    var _cssVar2 = cssVar(varKey, undefined, options.cssVarPrefix),\n      variable = _cssVar2.variable,\n      reference = _cssVar2.reference;\n    return {\n      cssVars: _defineProperty({}, variable, value),\n      cssMap: _defineProperty({}, lookupKey, {\n        value: value,\n        var: variable,\n        varRef: reference\n      })\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}