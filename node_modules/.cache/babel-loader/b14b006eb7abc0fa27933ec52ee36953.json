{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\SolPets\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { ChakraProvider, theme as baseTheme, extendTheme } from '@chakra-ui/react';\nimport * as web3 from '@solana/web3.js';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { getPhantomWallet, getSolflareWallet, getSolletWallet, getSolletExtensionWallet, getLedgerWallet } from '@solana/wallet-adapter-wallets';\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\nimport Home from './components/home';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\nfunction App() {\n  _s();\n\n  const network = 'devnet';\n  const endpoint = web3.clusterApiUrl(network);\n  const wallets = useMemo(() => [getPhantomWallet(), getSolflareWallet(), getSolletWallet({\n    network\n  }), getSolletExtensionWallet({\n    network\n  }), getLedgerWallet()], [network]);\n  const theme = extendTheme({\n    fonts: {\n      heading: 'Montserrat',\n      Body: 'Inter'\n    },\n    colors: {\n      brand: {\n        100: 'linear-gradient(144deg, #242038 20%, #522DA9 80%, #432C87)',\n        // ...\n        900: '#1a202c'\n      }\n    }\n  });\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = async data => {\n    const formData = new FormData();\n    formData.append('file', data.file[0]);\n    const res = await fetch('http://localhost:5000/upload-file', {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json());\n    alert(JSON.stringify(`${res.message}, status: ${res.status}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n        endpoint: endpoint,\n        children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n          wallets: wallets,\n          autoConnect: true,\n          children: /*#__PURE__*/_jsxDEV(WalletModalProvider, {\n            children: /*#__PURE__*/_jsxDEV(Home, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit(onSubmit),\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    ...register('file')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"7xHgIN4hYyB28klABkLDaKAyb1o=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Public/Web3/Github/SolPets/src/App.js"],"names":["React","useCallback","useEffect","useState","useMemo","ChakraProvider","theme","baseTheme","extendTheme","web3","ConnectionProvider","WalletProvider","getPhantomWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","getLedgerWallet","WalletModalProvider","Home","useForm","require","App","network","endpoint","clusterApiUrl","wallets","fonts","heading","Body","colors","brand","register","handleSubmit","onSubmit","data","formData","FormData","append","file","res","fetch","method","body","then","json","alert","JSON","stringify","message","status"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState, useMemo } from 'react';\r\nimport {\r\n  ChakraProvider,\r\n  theme as baseTheme,\r\n  extendTheme,\r\n} from '@chakra-ui/react';\r\nimport * as web3 from '@solana/web3.js';\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\nimport {\r\n  getPhantomWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n  getLedgerWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\r\nimport Home from './components/home';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nrequire('@solana/wallet-adapter-react-ui/styles.css');\r\n\r\nfunction App() {\r\n  const network = 'devnet';\r\n  const endpoint = web3.clusterApiUrl(network);\r\n  const wallets = useMemo(\r\n    () => [\r\n      getPhantomWallet(),\r\n      getSolflareWallet(),\r\n      getSolletWallet({ network }),\r\n      getSolletExtensionWallet({ network }),\r\n      getLedgerWallet(),\r\n    ],\r\n    [network]\r\n  );\r\n\r\n  const theme = extendTheme({\r\n    fonts: {\r\n      heading: 'Montserrat',\r\n      Body: 'Inter',\r\n    },\r\n    colors: {\r\n      brand: {\r\n        100: 'linear-gradient(144deg, #242038 20%, #522DA9 80%, #432C87)',\r\n        // ...\r\n        900: '#1a202c',\r\n      },\r\n    },\r\n  });\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = async data => {\r\n    const formData = new FormData();\r\n    formData.append('file', data.file[0]);\r\n\r\n    const res = await fetch('http://localhost:5000/upload-file', {\r\n      method: 'POST',\r\n      body: formData,\r\n    }).then(res => res.json());\r\n    alert(JSON.stringify(`${res.message}, status: ${res.status}`));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ChakraProvider theme={theme}>\r\n        <ConnectionProvider endpoint={endpoint}>\r\n          <WalletProvider wallets={wallets} autoConnect>\r\n            <WalletModalProvider>\r\n              <Home>\r\n                <div className=\"App\">\r\n                  <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <input type=\"file\" {...register('file')} />\r\n\r\n                    <input type=\"submit\" />\r\n                  </form>\r\n                </div>\r\n              </Home>\r\n            </WalletModalProvider>\r\n          </WalletProvider>\r\n        </ConnectionProvider>\r\n      </ChakraProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}