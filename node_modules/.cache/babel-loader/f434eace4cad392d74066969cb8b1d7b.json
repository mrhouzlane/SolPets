{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\SolPets\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\SolPets\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\SolPets\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\SolPets\\\\src\\\\Greet.jsx\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { VStack, HStack, Button, Input } from '@chakra-ui/react';\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport { FormControl, FormLabel } from '@chakra-ui/react';\nimport * as borsh from 'borsh';\nimport { PublicKey, Transaction, SystemProgram, TransactionInstruction } from '@solana/web3.js';\nvar programId = new PublicKey('FGbjtxeYmT5jUP7aNavo9k9mQ3rGQ815WdvwWndR7FF9');\nvar GREETING_SEED = 'hello';\nvar GreetingAccount = function GreetingAccount(fields) {\n  _classCallCheck(this, GreetingAccount);\n  this.counter = 0;\n  if (fields) {\n    this.counter = fields.counter;\n  }\n};\nvar GreetingSchema = new Map([[GreetingAccount, {\n  kind: 'struct',\n  fields: [['counter', 'u32']]\n}]]);\nvar GREETING_SIZE = borsh.serialize(GreetingSchema, new GreetingAccount()).length;\nfunction counterFromAccountInfo(accountInfo) {\n  var data = borsh.deserialize(GreetingSchema, GreetingAccount, accountInfo.data);\n  return data.counter;\n}\nexport function Greet() {\n  var wallet = useWallet();\n  var _useConnection = useConnection(),\n    connection = _useConnection.connection;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    counter = _useState2[0],\n    setCounter = _useState2[1];\n  var greet = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(publicKey) {\n      var recipient, greetedPubkey, greetedAccount, lamports, transaction, _signature, instruction, signature;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            recipient = new PublicKey(publicKey);\n            _context.next = 3;\n            return PublicKey.createWithSeed(recipient, GREETING_SEED, programId);\n          case 3:\n            greetedPubkey = _context.sent;\n            _context.next = 6;\n            return connection.getAccountInfo(greetedPubkey);\n          case 6:\n            greetedAccount = _context.sent;\n            if (!(greetedAccount === null)) {\n              _context.next = 17;\n              break;\n            }\n            _context.next = 10;\n            return connection.getMinimumBalanceForRentExemption(GREETING_SIZE);\n          case 10:\n            lamports = _context.sent;\n            transaction = new Transaction().add(SystemProgram.createAccountWithSeed({\n              fromPubkey: recipient,\n              basePubkey: recipient,\n              seed: GREETING_SEED,\n              newAccountPubkey: greetedPubkey,\n              lamports: lamports,\n              space: GREETING_SIZE,\n              programId: programId\n            }));\n            _context.next = 14;\n            return wallet.sendTransaction(transaction, connection);\n          case 14:\n            _signature = _context.sent;\n            _context.next = 17;\n            return connection.confirmTransaction(_signature, 'processed');\n          case 17:\n            instruction = new TransactionInstruction({\n              keys: [{\n                pubkey: greetedPubkey,\n                isSigner: false,\n                isWritable: true\n              }],\n              programId: programId,\n              data: Buffer.alloc(0)\n            });\n            _context.next = 20;\n            return wallet.sendTransaction(new Transaction().add(instruction), connection);\n          case 20:\n            signature = _context.sent;\n            _context.next = 23;\n            return connection.confirmTransaction(signature, 'processed');\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [connection, wallet]);\n  var greetYourself = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return greet(wallet.publicKey.toBase58());\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  })), [greet, wallet.publicKey]);\n  useEffect(function () {\n    function addListener() {\n      return _addListener.apply(this, arguments);\n    }\n    function _addListener() {\n      _addListener = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var greetedPubkey, currentAccountInfo;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!wallet.publicKey) {\n                _context3.next = 9;\n                break;\n              }\n              _context3.next = 3;\n              return PublicKey.createWithSeed(wallet.publicKey, GREETING_SEED, programId);\n            case 3:\n              greetedPubkey = _context3.sent;\n              _context3.next = 6;\n              return connection.getAccountInfo(greetedPubkey, 'confirmed');\n            case 6:\n              currentAccountInfo = _context3.sent;\n              if (currentAccountInfo === null) {\n                setCounter(0);\n              } else {\n                setCounter(counterFromAccountInfo(currentAccountInfo));\n              }\n              connection.onAccountChange(greetedPubkey, function (accountInfo, _) {\n                setCounter(counterFromAccountInfo(accountInfo));\n              }, 'confirmed');\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return _addListener.apply(this, arguments);\n    }\n    addListener();\n  }, [connection, wallet.publicKey]);\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    recipient = _useState4[0],\n    setRecipient = _useState4[1];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(VStack, {\n    width: \"full\",\n    spacing: 8,\n    borderRadius: 10,\n    borderWidth: 2,\n    p: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    id: \"greetings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"No. of greetings recieved\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: counter === null ? 'Loading..' : counter,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(HStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: greetYourself,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Greet Yourself\"))), /*#__PURE__*/React.createElement(VStack, {\n    width: \"full\",\n    spacing: 8,\n    borderRadius: 10,\n    borderWidth: 2,\n    p: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    id: \"send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Send greeting to public key\"), /*#__PURE__*/React.createElement(Input, {\n    value: recipient,\n    onChange: function onChange(e) {\n      return setRecipient(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      greet(recipient);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"Greet\")));\n}","map":{"version":3,"names":["React","useCallback","useEffect","useState","VStack","HStack","Button","Input","useConnection","useWallet","FormControl","FormLabel","borsh","PublicKey","Transaction","SystemProgram","TransactionInstruction","programId","GREETING_SEED","GreetingAccount","fields","counter","GreetingSchema","Map","kind","GREETING_SIZE","serialize","length","counterFromAccountInfo","accountInfo","data","deserialize","Greet","wallet","connection","setCounter","greet","publicKey","recipient","createWithSeed","greetedPubkey","getAccountInfo","greetedAccount","getMinimumBalanceForRentExemption","lamports","transaction","add","createAccountWithSeed","fromPubkey","basePubkey","seed","newAccountPubkey","space","sendTransaction","signature","confirmTransaction","instruction","keys","pubkey","isSigner","isWritable","Buffer","alloc","greetYourself","toBase58","addListener","currentAccountInfo","onAccountChange","_","setRecipient","e","target","value"],"sources":["C:/Users/Public/Web3/Github/SolPets/src/Greet.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { VStack, HStack, Button, Input } from '@chakra-ui/react';\r\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\r\nimport { FormControl, FormLabel } from '@chakra-ui/react';\r\nimport * as borsh from 'borsh';\r\nimport {\r\n  PublicKey,\r\n  Transaction,\r\n  SystemProgram,\r\n  TransactionInstruction,\r\n} from '@solana/web3.js';\r\n\r\nconst programId = new PublicKey('FGbjtxeYmT5jUP7aNavo9k9mQ3rGQ815WdvwWndR7FF9');\r\nconst GREETING_SEED = 'hello';\r\n\r\nclass GreetingAccount {\r\n  counter = 0;\r\n  constructor(fields) {\r\n    if (fields) {\r\n      this.counter = fields.counter;\r\n    }\r\n  }\r\n}\r\n\r\nconst GreetingSchema = new Map([\r\n  [GreetingAccount, { kind: 'struct', fields: [['counter', 'u32']] }],\r\n]);\r\n\r\nconst GREETING_SIZE = borsh.serialize(\r\n  GreetingSchema,\r\n  new GreetingAccount()\r\n).length;\r\n\r\nfunction counterFromAccountInfo(accountInfo) {\r\n  const data = borsh.deserialize(\r\n    GreetingSchema,\r\n    GreetingAccount,\r\n    accountInfo.data\r\n  );\r\n  return data.counter;\r\n}\r\n\r\nexport function Greet() {\r\n  const wallet = useWallet();\r\n  const { connection } = useConnection();\r\n  const [counter, setCounter] = useState(null);\r\n\r\n  const greet = useCallback(\r\n    async publicKey => {\r\n      const recipient = new PublicKey(publicKey);\r\n      const greetedPubkey = await PublicKey.createWithSeed(\r\n        recipient,\r\n        GREETING_SEED,\r\n        programId\r\n      );\r\n\r\n      const greetedAccount = await connection.getAccountInfo(greetedPubkey);\r\n      if (greetedAccount === null) {\r\n        const lamports = await connection.getMinimumBalanceForRentExemption(\r\n          GREETING_SIZE\r\n        );\r\n\r\n        const transaction = new Transaction().add(\r\n          SystemProgram.createAccountWithSeed({\r\n            fromPubkey: recipient,\r\n            basePubkey: recipient,\r\n            seed: GREETING_SEED,\r\n            newAccountPubkey: greetedPubkey,\r\n            lamports,\r\n            space: GREETING_SIZE,\r\n            programId,\r\n          })\r\n        );\r\n\r\n        const signature = await wallet.sendTransaction(transaction, connection);\r\n        await connection.confirmTransaction(signature, 'processed');\r\n      }\r\n\r\n      const instruction = new TransactionInstruction({\r\n        keys: [{ pubkey: greetedPubkey, isSigner: false, isWritable: true }],\r\n        programId,\r\n        data: Buffer.alloc(0),\r\n      });\r\n\r\n      const signature = await wallet.sendTransaction(\r\n        new Transaction().add(instruction),\r\n        connection\r\n      );\r\n\r\n      await connection.confirmTransaction(signature, 'processed');\r\n    },\r\n    [connection, wallet]\r\n  );\r\n\r\n  const greetYourself = useCallback(async () => {\r\n    await greet(wallet.publicKey.toBase58());\r\n  }, [greet, wallet.publicKey]);\r\n\r\n  useEffect(() => {\r\n    async function addListener() {\r\n      if (wallet.publicKey) {\r\n        const greetedPubkey = await PublicKey.createWithSeed(\r\n          wallet.publicKey,\r\n          GREETING_SEED,\r\n          programId\r\n        );\r\n        const currentAccountInfo = await connection.getAccountInfo(\r\n          greetedPubkey,\r\n          'confirmed'\r\n        );\r\n        if (currentAccountInfo === null) {\r\n          setCounter(0);\r\n        } else {\r\n          setCounter(counterFromAccountInfo(currentAccountInfo));\r\n        }\r\n        connection.onAccountChange(\r\n          greetedPubkey,\r\n          (accountInfo, _) => {\r\n            setCounter(counterFromAccountInfo(accountInfo));\r\n          },\r\n          'confirmed'\r\n        );\r\n      }\r\n    }\r\n    addListener();\r\n  }, [connection, wallet.publicKey]);\r\n\r\n  const [recipient, setRecipient] = useState('');\r\n  return (\r\n    <>\r\n      <VStack width=\"full\" spacing={8} borderRadius={10} borderWidth={2} p={10}>\r\n        <FormControl id=\"greetings\">\r\n          <FormLabel>No. of greetings recieved</FormLabel>\r\n          <Input\r\n            type=\"text\"\r\n            value={counter === null ? 'Loading..' : counter}\r\n            readOnly\r\n          />\r\n        </FormControl>\r\n        <HStack>\r\n          <Button onClick={greetYourself}>Greet Yourself</Button>\r\n        </HStack>\r\n      </VStack>\r\n      <VStack width=\"full\" spacing={8} borderRadius={10} borderWidth={2} p={10}>\r\n        <FormControl id=\"send\">\r\n          <FormLabel>Send greeting to public key</FormLabel>\r\n          <Input\r\n            value={recipient}\r\n            onChange={e => setRecipient(e.target.value)}\r\n          ></Input>\r\n        </FormControl>\r\n        <Button\r\n          onClick={() => {\r\n            greet(recipient);\r\n          }}\r\n        >\r\n          Greet\r\n        </Button>\r\n      </VStack>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}