{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\solana-boilerplate\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { ChakraProvider, Box, Flex, Text, VStack, Grid, Button, useToast, Code, HStack, Heading, theme as baseTheme, Input, SimpleGrid, Img, Container, Stack, extendTheme } from '@chakra-ui/react';\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react';\nimport { FormControl, FormLabel } from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport * as web3 from '@solana/web3.js';\nimport { ConnectionProvider, WalletProvider, useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport { getPhantomWallet, getSolflareWallet, getSolletWallet, getSolletExtensionWallet, getLedgerWallet } from '@solana/wallet-adapter-wallets';\nimport { WalletModalProvider, WalletMultiButton, WalletDisconnectButton } from '@solana/wallet-adapter-react-ui';\nimport { Greet } from './Greet';\nimport logo from \"./logo.svg\";\nimport phoneUI from \"./components/phoneUI.svg\";\nimport solanaShape from './components/solanaShape.png';\nimport dog from \"./components/dogAndHuman.svg\";\nimport solanaVerticalLogo from \"./components/solanaVerticalLogo.svg\";\nimport dogProfile from \"./components/dogProfile.svg\";\nimport solanaShapeBottom from \"./components/solanaShapeBottom.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\nfunction WalletNotConnected() {\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    height: \"70vh\",\n    justify: \"space-around\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"2xl\",\n        children: [' ', \"Looks like your wallet is not connnected. Connect a wallet to get started!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_c = WalletNotConnected;\n\nfunction useSolanaAccount() {\n  _s();\n\n  const [account, setAccount] = useState(null);\n  const [transactions, setTransactions] = useState(null);\n  const {\n    connection\n  } = useConnection();\n  const {\n    publicKey\n  } = useWallet();\n  const init = useCallback(async () => {\n    if (publicKey) {\n      let acc = await connection.getAccountInfo(publicKey);\n      setAccount(acc);\n      let transactions = await connection.getConfirmedSignaturesForAddress2(publicKey, {\n        limit: 10\n      });\n      setTransactions(transactions);\n    }\n  }, [publicKey, connection]);\n  useEffect(() => {\n    if (publicKey) {\n      setInterval(init, 1000);\n    }\n  }, [init, publicKey]);\n  return {\n    account,\n    transactions\n  };\n}\n\n_s(useSolanaAccount, \"r+B1Pwggmfntyo9rZAQ4cKQtsVo=\", false, function () {\n  return [useConnection, useWallet];\n});\n\nfunction Home() {\n  _s2();\n\n  const {\n    connection\n  } = useConnection();\n  const {\n    publicKey\n  } = useWallet();\n  const {\n    account,\n    transactions\n  } = useSolanaAccount();\n  const toast = useToast();\n  const [airdropProcessing, setAirdropProcessing] = useState(false);\n  const getAirdrop = useCallback(async () => {\n    setAirdropProcessing(true);\n\n    try {\n      var airdropSignature = await connection.requestAirdrop(publicKey, web3.LAMPORTS_PER_SOL);\n      await connection.confirmTransaction(airdropSignature);\n    } catch (error) {\n      console.log(error);\n      toast({\n        title: 'Airdrop failed',\n        description: 'unknown error'\n      });\n    }\n\n    setAirdropProcessing(false);\n  }, [toast, publicKey, connection]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    textAlign: \"left\",\n    fontSize: \"xl\",\n    bg: \"brand.100\",\n    children: /*#__PURE__*/_jsxDEV(Tabs, {\n      variant: \"soft-rounded\",\n      colorScheme: \"pink\",\n      children: [/*#__PURE__*/_jsxDEV(TabList, {\n        width: \"full\",\n        children: /*#__PURE__*/_jsxDEV(HStack, {\n          justify: \"space-between\",\n          width: \"full\",\n          m: \"50px\",\n          children: [/*#__PURE__*/_jsxDEV(HStack, {\n            children: [/*#__PURE__*/_jsxDEV(Img, {\n              src: logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              children: \"Transaction History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            children: [/*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), publicKey && /*#__PURE__*/_jsxDEV(WalletDisconnectButton, {\n              bg: \"pink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(ColorModeSwitcher, {\n              justifySelf: \"flex-end\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n        children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            as: \"section\",\n            className: \"header\",\n            mt: \"170\",\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                width: \"700px\",\n                children: /*#__PURE__*/_jsxDEV(Img, {\n                  src: phoneUI\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                children: /*#__PURE__*/_jsxDEV(VStack, {\n                  justifyContent: \"space-evenly\",\n                  align: \"left\",\n                  children: [/*#__PURE__*/_jsxDEV(Heading, {\n                    as: \"h1\",\n                    size: \"lg\",\n                    fontSize: \"60px\",\n                    fontWeight: \"600\",\n                    mb: \"10\",\n                    children: \"A Passport NFT for your pet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    maxWidth: \"750px\",\n                    pb: \"10\",\n                    align: \"left\",\n                    children: /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: \"24px\",\n                      fontWeight: \"400\",\n                      children: \"Create a profile for your pet and we'll convert your pets information into a personalized NFT you can use to show proof-of-ownership and proof-of-records.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    w: \"120px\",\n                    children: \"Get Started\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                flex: \"1\",\n                align: \"right\",\n                width: \"500px\",\n                flexDirection: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Img, {\n                  src: solanaShape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            as: \"section\",\n            className: \"main\",\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              justifyContent: \"center\",\n              position: \"relative\",\n              align: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Img, {\n                src: dog,\n                boxSize: \"500px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Img, {\n                src: dogProfile,\n                boxSize: \"800px\",\n                position: \"absolute\",\n                right: \"200px\",\n                bottom: \"200px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              align: \"end\",\n              justifyContent: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Img, {\n                src: solanaShapeBottom,\n                position: \"relative\",\n                left: \"300px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Img, {\n                src: solanaVerticalLogo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: [publicKey && /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 8,\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              children: \"Transaction History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this), transactions && /*#__PURE__*/_jsxDEV(VStack, {\n              children: transactions.map((v, i, arr) => /*#__PURE__*/_jsxDEV(HStack, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  children: \"Signature: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Code, {\n                  children: v.signature\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 27\n                }, this)]\n              }, 'transaction-' + i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), !publicKey && /*#__PURE__*/_jsxDEV(WalletNotConnected, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Home, \"rqJJcg2D9cDE0yFFe/aWjYKSaz0=\", false, function () {\n  return [useConnection, useWallet, useSolanaAccount, useToast];\n});\n\n_c2 = Home;\n\nfunction App() {\n  _s3();\n\n  const network = 'devnet';\n  const endpoint = web3.clusterApiUrl(network);\n  const wallets = useMemo(() => [getPhantomWallet(), getSolflareWallet(), getSolletWallet({\n    network\n  }), getSolletExtensionWallet({\n    network\n  }), getLedgerWallet()], [network]);\n  const theme = extendTheme({\n    fonts: {\n      heading: 'Montserrat',\n      Body: 'Inter'\n    },\n    colors: {\n      brand: {\n        100: \"linear-gradient(144deg, #242038 20%, #522DA9 80%, #432C87)\",\n        // ...\n        900: \"#1a202c\"\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n        endpoint: endpoint,\n        children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n          wallets: wallets,\n          autoConnect: true,\n          children: /*#__PURE__*/_jsxDEV(WalletModalProvider, {\n            children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s3(App, \"W9IgGN+f7P4ScyFu7AdMyjvnXHI=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"WalletNotConnected\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/Public/Web3/Github/solana-boilerplate/src/App.js"],"names":["React","useCallback","useEffect","useState","useMemo","ChakraProvider","Box","Flex","Text","VStack","Grid","Button","useToast","Code","HStack","Heading","theme","baseTheme","Input","SimpleGrid","Img","Container","Stack","extendTheme","Tabs","TabList","TabPanels","Tab","TabPanel","FormControl","FormLabel","ColorModeSwitcher","web3","ConnectionProvider","WalletProvider","useConnection","useWallet","getPhantomWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","getLedgerWallet","WalletModalProvider","WalletMultiButton","WalletDisconnectButton","Greet","solanaShape","require","WalletNotConnected","useSolanaAccount","account","setAccount","transactions","setTransactions","connection","publicKey","init","acc","getAccountInfo","getConfirmedSignaturesForAddress2","limit","setInterval","Home","toast","airdropProcessing","setAirdropProcessing","getAirdrop","airdropSignature","requestAirdrop","LAMPORTS_PER_SOL","confirmTransaction","error","console","log","title","description","logo","phoneUI","dog","dogProfile","solanaShapeBottom","solanaVerticalLogo","map","v","i","arr","signature","App","network","endpoint","clusterApiUrl","wallets","fonts","heading","Body","colors","brand"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState, useMemo } from 'react';\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  VStack,\r\n  Grid,\r\n  Button,\r\n  useToast,\r\n  Code,\r\n  HStack,\r\n  Heading,\r\n  theme as baseTheme,\r\n  Input,\r\n  SimpleGrid,\r\n  Img,\r\n  Container,\r\n  Stack,\r\n  extendTheme,\r\n} from '@chakra-ui/react';\r\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react';\r\nimport { FormControl, FormLabel } from '@chakra-ui/react';\r\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\r\n\r\nimport * as web3 from '@solana/web3.js';\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n  useConnection,\r\n  useWallet,\r\n} from '@solana/wallet-adapter-react';\r\nimport {\r\n  getPhantomWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n  getLedgerWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\nimport {\r\n  WalletModalProvider,\r\n  WalletMultiButton,\r\n  WalletDisconnectButton,\r\n} from '@solana/wallet-adapter-react-ui';\r\nimport { Greet } from './Greet';\r\nimport logo from './logo.svg';\r\nimport phoneUI from './components/phoneUI.svg';\r\nimport solanaShape from './components/solanaShape.png'\r\nimport dog from './components/dogAndHuman.svg'\r\nimport solanaVerticalLogo from './components/solanaVerticalLogo.svg';\r\nimport dogProfile from './components/dogProfile.svg'\r\nimport solanaShapeBottom from './components/solanaShapeBottom.svg'\r\n\r\nrequire('@solana/wallet-adapter-react-ui/styles.css');\r\n\r\nfunction WalletNotConnected() {\r\n  return (\r\n    <VStack height=\"70vh\" justify=\"space-around\">\r\n      <VStack>\r\n        <Text fontSize=\"2xl\">\r\n          {' '}\r\n          Looks like your wallet is not connnected. Connect a wallet to get\r\n          started!\r\n        </Text>\r\n        <WalletMultiButton />\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nfunction useSolanaAccount() {\r\n  const [account, setAccount] = useState(null);\r\n  const [transactions, setTransactions] = useState(null);\r\n  const { connection } = useConnection();\r\n  const { publicKey } = useWallet();\r\n\r\n  const init = useCallback(async () => {\r\n    if (publicKey) {\r\n      let acc = await connection.getAccountInfo(publicKey);\r\n      setAccount(acc);\r\n      let transactions = await connection.getConfirmedSignaturesForAddress2(\r\n        publicKey,\r\n        {\r\n          limit: 10,\r\n        }\r\n      );\r\n      setTransactions(transactions);\r\n    }\r\n  }, [publicKey, connection]);\r\n\r\n  useEffect(() => {\r\n    if (publicKey) {\r\n      setInterval(init, 1000);\r\n    }\r\n  }, [init, publicKey]);\r\n\r\n  return { account, transactions };\r\n}\r\n\r\nfunction Home() {\r\n  const { connection } = useConnection();\r\n  const { publicKey } = useWallet();\r\n  const { account, transactions } = useSolanaAccount();\r\n  const toast = useToast();\r\n  const [airdropProcessing, setAirdropProcessing] = useState(false);\r\n\r\n  const getAirdrop = useCallback(async () => {\r\n    setAirdropProcessing(true);\r\n    try {\r\n      var airdropSignature = await connection.requestAirdrop(\r\n        publicKey,\r\n        web3.LAMPORTS_PER_SOL\r\n      );\r\n      await connection.confirmTransaction(airdropSignature);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({ title: 'Airdrop failed', description: 'unknown error' });\r\n    }\r\n    setAirdropProcessing(false);\r\n  }, [toast, publicKey, connection]);\r\n\r\n  return (\r\n    <Box textAlign=\"left\" fontSize=\"xl\" bg=\"brand.100\" >\r\n     \r\n        <Tabs variant=\"soft-rounded\" colorScheme=\"pink\" >\r\n          <TabList width=\"full\">\r\n            <HStack justify=\"space-between\" width=\"full\" m=\"50px\" >\r\n              <HStack>\r\n                <Img src={logo} />\r\n                <Tab>Home</Tab>\r\n                <Tab>Transaction History</Tab>\r\n              </HStack>\r\n              <HStack>\r\n                <WalletMultiButton />\r\n                {publicKey && <WalletDisconnectButton bg=\"pink\" />}\r\n                <ColorModeSwitcher justifySelf=\"flex-end\" />\r\n              </HStack>\r\n            </HStack>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              {/* {publicKey && (\r\n                <SimpleGrid columns={2} spacing={10}>\r\n                  <VStack spacing={8} borderRadius={10} borderWidth={2} p={10}>\r\n                    <FormControl id=\"pubkey\">\r\n                      <FormLabel>Wallet Public Key</FormLabel>\r\n                      <Input\r\n                        type=\"text\"\r\n                        value={publicKey.toBase58()}\r\n                        readOnly\r\n                      />\r\n                      <div className='getting-started'>\r\n                        <Box as=\"button\" bg=\"green\" w=\"120px\" h=\"150px\">This is a button</Box>\r\n                     </div>\r\n                    </FormControl>\r\n                    <FormControl id=\"balance\">\r\n                      <FormLabel>Balance</FormLabel>\r\n                      <Input\r\n                        type=\"text\"\r\n                        value={\r\n                          account\r\n                            ? account.lamports / web3.LAMPORTS_PER_SOL + ' SOL'\r\n                            : 'Loading..'\r\n                        }\r\n                        readOnly\r\n                      />\r\n                    </FormControl>\r\n                    <Button onClick={getAirdrop} isLoading={airdropProcessing}>\r\n                      Get Airdrop of 1 SOL\r\n                    </Button>\r\n                  </VStack>\r\n                  <VStack>\r\n                    <Greet />\r\n                  </VStack>\r\n                </SimpleGrid>\r\n              )} */}\r\n              <Box as=\"section\" className='header' mt=\"170\" >\r\n                <Flex>\r\n                  <Box width=\"700px\"  >\r\n                    <Img src={phoneUI} />\r\n                  </Box>\r\n                  <Stack>\r\n                    <VStack justifyContent=\"space-evenly\" align=\"left\" >\r\n                      <Heading as=\"h1\" size=\"lg\" fontSize='60px' fontWeight=\"600\" mb=\"10\" >A Passport NFT for your pet</Heading>\r\n                      <Box maxWidth=\"750px\" pb=\"10\" align=\"left\" >\r\n                        <Text fontSize=\"24px\" fontWeight=\"400\" >Create a profile for your pet and we'll convert your pets information into a personalized NFT you can use to show proof-of-ownership and proof-of-records.</Text>\r\n                      </Box>\r\n                      <Button w=\"120px\">Get Started</Button>\r\n                    </VStack>\r\n                  </Stack>\r\n                  <Box flex=\"1\" align=\"right\" width=\"500px\" flexDirection=\"right\"  >\r\n                  <Img src={solanaShape} />\r\n                  </Box>\r\n                </Flex>\r\n              </Box>\r\n              <Box as=\"section\" className='main'>\r\n                <Flex  justifyContent=\"center\" position=\"relative\" align=\"center\">\r\n                  <Img src={dog} boxSize=\"500px\" />\r\n                  <Img src={dogProfile} boxSize=\"800px\" position=\"absolute\" right=\"200px\" bottom=\"200px\" />\r\n                </Flex>\r\n              </Box>\r\n              <Box align=\"center\">\r\n                <Flex align=\"end\" justifyContent=\"center\">\r\n                <Img src={solanaShapeBottom} position=\"relative\" left=\"300px\"/>\r\n                <Img src={solanaVerticalLogo}  />\r\n                </Flex>\r\n              </Box>\r\n              \r\n              \r\n            </TabPanel>\r\n            <TabPanel>\r\n              {publicKey && (\r\n                <VStack spacing={8}>\r\n                  <Heading>Transaction History</Heading>\r\n                  {transactions && (\r\n                    <VStack>\r\n                      {transactions.map((v, i, arr) => (\r\n                        <HStack key={'transaction-' + i}>\r\n                          <Text>Signature: </Text>\r\n                          <Code>{v.signature}</Code>\r\n                        </HStack>\r\n                      ))}\r\n                    </VStack>\r\n                  )}\r\n                </VStack>\r\n              )}\r\n              {!publicKey && <WalletNotConnected />}\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n    </Box>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const network = 'devnet';\r\n  const endpoint = web3.clusterApiUrl(network);\r\n  const wallets = useMemo(\r\n    () => [\r\n      getPhantomWallet(),\r\n      getSolflareWallet(),\r\n      getSolletWallet({ network }),\r\n      getSolletExtensionWallet({ network }),\r\n      getLedgerWallet(),\r\n    ],\r\n    [network]\r\n  );\r\n  \r\n  const theme = extendTheme({\r\n    fonts: {\r\n      heading:'Montserrat',\r\n      Body: 'Inter',\r\n    },\r\n    colors: {\r\n      brand: {\r\n        100: \"linear-gradient(144deg, #242038 20%, #522DA9 80%, #432C87)\",\r\n        // ...\r\n        900: \"#1a202c\",\r\n      },\r\n    },\r\n  })\r\n\r\n  return (\r\n    <>\r\n\r\n    <ChakraProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletModalProvider>\r\n            <Home></Home>\r\n          </WalletModalProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ChakraProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}