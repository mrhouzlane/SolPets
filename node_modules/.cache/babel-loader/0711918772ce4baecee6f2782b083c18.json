{"ast":null,"code":"import { useEffect, useLayoutEffect } from \"react\";\n/**\n * Sort an array of DOM nodes according to the HTML tree order\n * @see http://www.w3.org/TR/html5/infrastructure.html#tree-order\n */\n\nexport function sortNodes(nodes) {\n  return nodes.sort(function (a, b) {\n    var compare = a.compareDocumentPosition(b);\n    if (compare & Node.DOCUMENT_POSITION_FOLLOWING || compare & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n      // a < b\n      return -1;\n    }\n    if (compare & Node.DOCUMENT_POSITION_PRECEDING || compare & Node.DOCUMENT_POSITION_CONTAINS) {\n      // a > b\n      return 1;\n    }\n    if (compare & Node.DOCUMENT_POSITION_DISCONNECTED || compare & Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC) {\n      throw Error(\"Cannot sort the given nodes.\");\n    } else {\n      return 0;\n    }\n  });\n}\nexport var isElement = function isElement(el) {\n  return typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n};\nexport function getNextIndex(current, max, loop) {\n  var next = current + 1;\n  if (loop && next >= max) next = 0;\n  return next;\n}\nexport function getPrevIndex(current, max, loop) {\n  var next = current - 1;\n  if (loop && next < 0) next = max;\n  return next;\n}\nexport var useSafeLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\nexport var cast = function cast(value) {\n  return value;\n};","map":null,"metadata":{},"sourceType":"module"}