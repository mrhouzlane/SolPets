{"ast":null,"code":"module.exports = /******/function (modules) {\n  // webpackBootstrap\n  /******/ // The module cache\n  /******/\n  var installedModules = {};\n  /******/\n  /******/ // The require function\n  /******/\n  function __webpack_require__(moduleId) {\n    /******/\n    /******/ // Check if module is in cache\n    /******/if (installedModules[moduleId]) {\n      /******/return installedModules[moduleId].exports;\n      /******/\n    }\n    /******/ // Create a new module (and put it into the cache)\n    /******/\n    var module = installedModules[moduleId] = {\n      /******/i: moduleId,\n      /******/l: false,\n      /******/exports: {}\n      /******/\n    };\n    /******/\n    /******/ // Execute the module function\n    /******/\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/ // Flag the module as loaded\n    /******/\n    module.l = true;\n    /******/\n    /******/ // Return the exports of the module\n    /******/\n    return module.exports;\n    /******/\n  }\n  /******/\n  /******/\n  /******/ // expose the modules object (__webpack_modules__)\n  /******/\n  __webpack_require__.m = modules;\n  /******/\n  /******/ // expose the module cache\n  /******/\n  __webpack_require__.c = installedModules;\n  /******/\n  /******/ // define getter function for harmony exports\n  /******/\n  __webpack_require__.d = function (exports, name, getter) {\n    /******/if (!__webpack_require__.o(exports, name)) {\n      /******/Object.defineProperty(exports, name, {\n        enumerable: true,\n        get: getter\n      });\n      /******/\n    }\n    /******/\n  };\n  /******/\n  /******/ // define __esModule on exports\n  /******/\n  __webpack_require__.r = function (exports) {\n    /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n      /******/Object.defineProperty(exports, Symbol.toStringTag, {\n        value: 'Module'\n      });\n      /******/\n    }\n    /******/\n    Object.defineProperty(exports, '__esModule', {\n      value: true\n    });\n    /******/\n  };\n  /******/\n  /******/ // create a fake namespace object\n  /******/ // mode & 1: value is a module id, require it\n  /******/ // mode & 2: merge all properties of value into the ns\n  /******/ // mode & 4: return value when already ns object\n  /******/ // mode & 8|1: behave like require\n  /******/\n  __webpack_require__.t = function (value, mode) {\n    /******/if (mode & 1) value = __webpack_require__(value);\n    /******/\n    if (mode & 8) return value;\n    /******/\n    if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n    /******/\n    var ns = Object.create(null);\n    /******/\n    __webpack_require__.r(ns);\n    /******/\n    Object.defineProperty(ns, 'default', {\n      enumerable: true,\n      value: value\n    });\n    /******/\n    if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n      return value[key];\n    }.bind(null, key));\n    /******/\n    return ns;\n    /******/\n  };\n  /******/\n  /******/ // getDefaultExport function for compatibility with non-harmony modules\n  /******/\n  __webpack_require__.n = function (module) {\n    /******/var getter = module && module.__esModule ? /******/function getDefault() {\n      return module['default'];\n    } : /******/function getModuleExports() {\n      return module;\n    };\n    /******/\n    __webpack_require__.d(getter, 'a', getter);\n    /******/\n    return getter;\n    /******/\n  };\n  /******/\n  /******/ // Object.prototype.hasOwnProperty.call\n  /******/\n  __webpack_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  /******/\n  /******/ // __webpack_public_path__\n  /******/\n  __webpack_require__.p = \"\";\n  /******/\n  /******/\n  /******/ // Load entry module and return exports\n  /******/\n  return __webpack_require__(__webpack_require__.s = 43);\n  /******/\n}\n/************************************************************************/\n/******/([/* 0 */\n/***/function (module, exports) {\n  module.exports = require(\"@babel/runtime/helpers/defineProperty\");\n\n  /***/\n}, /* 1 */\n/***/function (module, exports) {\n  module.exports = require(\"@babel/runtime/regenerator\");\n\n  /***/\n}, /* 2 */\n/***/function (module, exports) {\n  module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\n  /***/\n}, /* 3 */\n/***/function (module, exports) {\n  module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\n  /***/\n}, /* 4 */\n/***/function (module, exports) {\n  module.exports = require(\"@babel/runtime/helpers/classCallCheck\");\n\n  /***/\n}, /* 5 */\n/***/function (module, exports) {\n  module.exports = require(\"@babel/runtime/helpers/createClass\");\n\n  /***/\n}, /* 6 */\n/***/function (module, exports) {\n  module.exports = require(\"@babel/runtime/helpers/inherits\");\n\n  /***/\n}, /* 7 */\n/***/function (module, exports) {\n  module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  /***/\n}, /* 8 */\n/***/function (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"a\", function () {\n    return SerializableError;\n  });\n  /* harmony import */\n  var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n  /* harmony import */\n  var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n  /* harmony import */\n  var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);\n  /* harmony import */\n  var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n  /* harmony import */\n  var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);\n  /* harmony import */\n  var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__);\n  /* harmony import */\n  var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);\n  /* harmony import */\n  var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);\n  /* harmony import */\n  var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7);\n  /* harmony import */\n  var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);\n  /* harmony import */\n  var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(3);\n  /* harmony import */\n  var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);\n  /* harmony import */\n  var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(39);\n  /* harmony import */\n  var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_6__);\n  /* harmony import */\n  var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(0);\n  /* harmony import */\n  var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__);\n  /* harmony import */\n  var fast_safe_stringify__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(40);\n  /* harmony import */\n  var fast_safe_stringify__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(fast_safe_stringify__WEBPACK_IMPORTED_MODULE_8__);\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Derived),\n        result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  var SerializableError = /*#__PURE__*/function (_Error) {\n    _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(SerializableError, _Error);\n    var _super = _createSuper(SerializableError);\n    function SerializableError(_ref) {\n      var _this;\n      var code = _ref.code,\n        message = _ref.message,\n        data = _ref.data;\n      _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, SerializableError);\n      if (!Number.isInteger(code)) {\n        throw new Error(\"code must be an integer\");\n      }\n      if (!message || typeof message !== \"string\") {\n        throw new Error(\"message must be string\");\n      }\n      _this = _super.call(this, message);\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(_this), \"code\", void 0);\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(_this), \"data\", void 0);\n      _this.code = code;\n      if (data !== undefined) {\n        _this.data = data;\n      }\n      return _this;\n    }\n    _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(SerializableError, [{\n      key: \"toString\",\n      value: function toString() {\n        return fast_safe_stringify__WEBPACK_IMPORTED_MODULE_8___default()({\n          code: this.code,\n          message: this.message,\n          data: this.data,\n          stack: this.stack\n        });\n      }\n    }]);\n    return SerializableError;\n  }( /*#__PURE__*/_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_6___default()(Error));\n\n  /***/\n}, /* 9 */\n/***/function (module, exports) {\n  module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\n  /***/\n}, /* 10 */\n/***/function (module, exports, __webpack_require__) {\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  module.exports = Stream;\n  var EE = __webpack_require__(17).EventEmitter;\n  var inherits = __webpack_require__(12);\n  inherits(Stream, EE);\n  Stream.Readable = __webpack_require__(23);\n  Stream.Writable = __webpack_require__(54);\n  Stream.Duplex = __webpack_require__(55);\n  Stream.Transform = __webpack_require__(56);\n  Stream.PassThrough = __webpack_require__(57);\n\n  // Backwards-compat with node 0.4.x\n  Stream.Stream = Stream;\n\n  // old-style streams.  Note that the pipe method (the only relevant\n  // part of this class) is overridden in the Readable class.\n\n  function Stream() {\n    EE.call(this);\n  }\n  Stream.prototype.pipe = function (dest, options) {\n    var source = this;\n    function ondata(chunk) {\n      if (dest.writable) {\n        if (false === dest.write(chunk) && source.pause) {\n          source.pause();\n        }\n      }\n    }\n    source.on('data', ondata);\n    function ondrain() {\n      if (source.readable && source.resume) {\n        source.resume();\n      }\n    }\n    dest.on('drain', ondrain);\n\n    // If the 'end' option is not supplied, dest.end() will be called when\n    // source gets the 'end' or 'close' events.  Only dest.end() once.\n    if (!dest._isStdio && (!options || options.end !== false)) {\n      source.on('end', onend);\n      source.on('close', onclose);\n    }\n    var didOnEnd = false;\n    function onend() {\n      if (didOnEnd) return;\n      didOnEnd = true;\n      dest.end();\n    }\n    function onclose() {\n      if (didOnEnd) return;\n      didOnEnd = true;\n      if (typeof dest.destroy === 'function') dest.destroy();\n    }\n\n    // don't leave dangling pipes when there are errors.\n    function onerror(er) {\n      cleanup();\n      if (EE.listenerCount(this, 'error') === 0) {\n        throw er; // Unhandled stream error in pipe.\n      }\n    }\n\n    source.on('error', onerror);\n    dest.on('error', onerror);\n\n    // remove all the event listeners that were added.\n    function cleanup() {\n      source.removeListener('data', ondata);\n      dest.removeListener('drain', ondrain);\n      source.removeListener('end', onend);\n      source.removeListener('close', onclose);\n      source.removeListener('error', onerror);\n      dest.removeListener('error', onerror);\n      source.removeListener('end', cleanup);\n      source.removeListener('close', cleanup);\n      dest.removeListener('close', cleanup);\n    }\n    source.on('end', cleanup);\n    source.on('close', cleanup);\n    dest.on('close', cleanup);\n    dest.emit('pipe', source);\n\n    // Allow for unix-like usage: A.pipe(B).pipe(C)\n    return dest;\n  };\n\n  /***/\n}, /* 11 */\n/***/function (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  // a duplex stream is just a stream that is both readable and writable.\n  // Since JS doesn't have multiple prototypal inheritance, this class\n  // prototypally inherits from Readable, and then parasitically from\n  // Writable.\n\n  /*<replacement>*/\n  var pna = __webpack_require__(20);\n  /*</replacement>*/\n\n  /*<replacement>*/\n  var objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) {\n      keys.push(key);\n    }\n    return keys;\n  };\n  /*</replacement>*/\n\n  module.exports = Duplex;\n\n  /*<replacement>*/\n  var util = Object.create(__webpack_require__(16));\n  util.inherits = __webpack_require__(12);\n  /*</replacement>*/\n\n  var Readable = __webpack_require__(27);\n  var Writable = __webpack_require__(25);\n  util.inherits(Duplex, Readable);\n  {\n    // avoid scope creep, the keys array can then be collected\n    var keys = objectKeys(Writable.prototype);\n    for (var v = 0; v < keys.length; v++) {\n      var method = keys[v];\n      if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n    }\n  }\n  function Duplex(options) {\n    if (!(this instanceof Duplex)) return new Duplex(options);\n    Readable.call(this, options);\n    Writable.call(this, options);\n    if (options && options.readable === false) this.readable = false;\n    if (options && options.writable === false) this.writable = false;\n    this.allowHalfOpen = true;\n    if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n    this.once('end', onend);\n  }\n  Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: false,\n    get: function get() {\n      return this._writableState.highWaterMark;\n    }\n  });\n\n  // the no-half-open enforcer\n  function onend() {\n    // if we allow half-open state, or if the writable side ended,\n    // then we're ok.\n    if (this.allowHalfOpen || this._writableState.ended) return;\n\n    // no more data can be written.\n    // But allow more writes to happen in this tick.\n    pna.nextTick(onEndNT, this);\n  }\n  function onEndNT(self) {\n    self.end();\n  }\n  Object.defineProperty(Duplex.prototype, 'destroyed', {\n    get: function get() {\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return false;\n      }\n      return this._readableState.destroyed && this._writableState.destroyed;\n    },\n    set: function set(value) {\n      // we ignore the value if the stream\n      // has not been initialized yet\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return;\n      }\n\n      // backward compatibility, the user is explicitly\n      // managing destroyed\n      this._readableState.destroyed = value;\n      this._writableState.destroyed = value;\n    }\n  });\n  Duplex.prototype._destroy = function (err, cb) {\n    this.push(null);\n    this.end();\n    pna.nextTick(cb, err);\n  };\n\n  /***/\n}, /* 12 */\n/***/function (module, exports) {\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n          constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        var TempCtor = function TempCtor() {};\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n      }\n    };\n  }\n\n  /***/\n}, /* 13 */\n/***/function (module, exports) {\n  var g;\n\n  // This works in non-strict mode\n  g = function () {\n    return this;\n  }();\n  try {\n    // This works if eval is allowed (see CSP)\n    g = g || new Function(\"return this\")();\n  } catch (e) {\n    // This works if the window reference is available\n    if (typeof window === \"object\") g = window;\n  }\n\n  // g can still be undefined, but nothing to do about it...\n  // We return undefined, instead of nothing here, so it's\n  // easier to handle this case. if(!global) { ...}\n\n  module.exports = g;\n\n  /***/\n}, /* 14 */\n/***/function (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"a\", function () {\n    return SafeEventEmitter;\n  });\n  /* harmony import */\n  var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n  /* harmony import */\n  var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n  /* harmony import */\n  var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);\n  /* harmony import */\n  var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n  /* harmony import */\n  var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);\n  /* harmony import */\n  var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);\n  /* harmony import */\n  var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7);\n  /* harmony import */\n  var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);\n  /* harmony import */\n  var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(3);\n  /* harmony import */\n  var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);\n  /* harmony import */\n  var events__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(17);\n  /* harmony import */\n  var events__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_5__);\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived),\n        result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  function safeApply(handler, context, args) {\n    try {\n      Reflect.apply(handler, context, args);\n    } catch (err) {\n      // Throw error after timeout so as not to interrupt the stack\n      setTimeout(function () {\n        throw err;\n      });\n    }\n  }\n  function arrayClone(arr) {\n    var n = arr.length;\n    var copy = new Array(n);\n    for (var i = 0; i < n; i += 1) {\n      copy[i] = arr[i];\n    }\n    return copy;\n  }\n  var SafeEventEmitter = /*#__PURE__*/function (_EventEmitter) {\n    _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(SafeEventEmitter, _EventEmitter);\n    var _super = _createSuper(SafeEventEmitter);\n    function SafeEventEmitter() {\n      _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, SafeEventEmitter);\n      return _super.apply(this, arguments);\n    }\n    _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(SafeEventEmitter, [{\n      key: \"emit\",\n      value: function emit(type) {\n        var doError = type === \"error\";\n        var events = this._events;\n        if (events !== undefined) {\n          doError = doError && events.error === undefined;\n        } else if (!doError) {\n          return false;\n        } // If there is no 'error' event listener then throw.\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        if (doError) {\n          var er;\n          if (args.length > 0) {\n            er = args[0];\n          }\n          if (er instanceof Error) {\n            // Note: The comments on the `throw` lines are intentional, they show\n            // up in Node's output if this results in an unhandled exception.\n            throw er; // Unhandled 'error' event\n          } // At least give some kind of context to the user\n\n          var err = new Error(\"Unhandled error.\".concat(er ? \" (\".concat(er.message, \")\") : \"\"));\n          err.context = er;\n          throw err; // Unhandled 'error' event\n        }\n\n        var handler = events[type];\n        if (handler === undefined) {\n          return false;\n        }\n        if (typeof handler === \"function\") {\n          safeApply(handler, this, args);\n        } else {\n          var len = handler.length;\n          var listeners = arrayClone(handler);\n          for (var i = 0; i < len; i += 1) {\n            safeApply(listeners[i], this, args);\n          }\n        }\n        return true;\n      }\n    }]);\n    return SafeEventEmitter;\n  }(events__WEBPACK_IMPORTED_MODULE_5__[\"EventEmitter\"]);\n\n  /***/\n}, /* 15 */\n/***/function (module, exports) {\n  module.exports = require(\"@babel/runtime/helpers/typeof\");\n\n  /***/\n}, /* 16 */\n/***/function (module, exports) {\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  // NOTE: These type checking functions intentionally don't use `instanceof`\n  // because it is fragile and can be easily faked with `Object.create()`.\n\n  function isArray(arg) {\n    if (Array.isArray) {\n      return Array.isArray(arg);\n    }\n    return objectToString(arg) === '[object Array]';\n  }\n  exports.isArray = isArray;\n  function isBoolean(arg) {\n    return typeof arg === 'boolean';\n  }\n  exports.isBoolean = isBoolean;\n  function isNull(arg) {\n    return arg === null;\n  }\n  exports.isNull = isNull;\n  function isNullOrUndefined(arg) {\n    return arg == null;\n  }\n  exports.isNullOrUndefined = isNullOrUndefined;\n  function isNumber(arg) {\n    return typeof arg === 'number';\n  }\n  exports.isNumber = isNumber;\n  function isString(arg) {\n    return typeof arg === 'string';\n  }\n  exports.isString = isString;\n  function isSymbol(arg) {\n    return typeof arg === 'symbol';\n  }\n  exports.isSymbol = isSymbol;\n  function isUndefined(arg) {\n    return arg === void 0;\n  }\n  exports.isUndefined = isUndefined;\n  function isRegExp(re) {\n    return objectToString(re) === '[object RegExp]';\n  }\n  exports.isRegExp = isRegExp;\n  function isObject(arg) {\n    return typeof arg === 'object' && arg !== null;\n  }\n  exports.isObject = isObject;\n  function isDate(d) {\n    return objectToString(d) === '[object Date]';\n  }\n  exports.isDate = isDate;\n  function isError(e) {\n    return objectToString(e) === '[object Error]' || e instanceof Error;\n  }\n  exports.isError = isError;\n  function isFunction(arg) {\n    return typeof arg === 'function';\n  }\n  exports.isFunction = isFunction;\n  function isPrimitive(arg) {\n    return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' ||\n    // ES6 symbol\n    typeof arg === 'undefined';\n  }\n  exports.isPrimitive = isPrimitive;\n  exports.isBuffer = Buffer.isBuffer;\n  function objectToString(o) {\n    return Object.prototype.toString.call(o);\n  }\n\n  /***/\n}, /* 17 */\n/***/function (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n  var R = typeof Reflect === 'object' ? Reflect : null;\n  var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  };\n  var ReflectOwnKeys;\n  if (R && typeof R.ownKeys === 'function') {\n    ReflectOwnKeys = R.ownKeys;\n  } else if (Object.getOwnPropertySymbols) {\n    ReflectOwnKeys = function ReflectOwnKeys(target) {\n      return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n    };\n  } else {\n    ReflectOwnKeys = function ReflectOwnKeys(target) {\n      return Object.getOwnPropertyNames(target);\n    };\n  }\n  function ProcessEmitWarning(warning) {\n    if (console && console.warn) console.warn(warning);\n  }\n  var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n    return value !== value;\n  };\n  function EventEmitter() {\n    EventEmitter.init.call(this);\n  }\n  module.exports = EventEmitter;\n  module.exports.once = once;\n\n  // Backwards-compat with node 0.10.x\n  EventEmitter.EventEmitter = EventEmitter;\n  EventEmitter.prototype._events = undefined;\n  EventEmitter.prototype._eventsCount = 0;\n  EventEmitter.prototype._maxListeners = undefined;\n\n  // By default EventEmitters will print a warning if more than 10 listeners are\n  // added to it. This is a useful default which helps finding memory leaks.\n  var defaultMaxListeners = 10;\n  function checkListener(listener) {\n    if (typeof listener !== 'function') {\n      throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n    }\n  }\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function get() {\n      return defaultMaxListeners;\n    },\n    set: function set(arg) {\n      if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n        throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n      }\n      defaultMaxListeners = arg;\n    }\n  });\n  EventEmitter.init = function () {\n    if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    }\n    this._maxListeners = this._maxListeners || undefined;\n  };\n\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n  EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n      throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n    }\n    this._maxListeners = n;\n    return this;\n  };\n  function _getMaxListeners(that) {\n    if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n    return that._maxListeners;\n  }\n  EventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n    return _getMaxListeners(this);\n  };\n  EventEmitter.prototype.emit = function emit(type) {\n    var args = [];\n    for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n    var doError = type === 'error';\n    var events = this._events;\n    if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false;\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      var er;\n      if (args.length > 0) er = args[0];\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n      err.context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    var handler = events[type];\n    if (handler === undefined) return false;\n    if (typeof handler === 'function') {\n      ReflectApply(handler, this, args);\n    } else {\n      var len = handler.length;\n      var listeners = arrayClone(handler, len);\n      for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);\n    }\n    return true;\n  };\n  function _addListener(target, type, listener, prepend) {\n    var m;\n    var events;\n    var existing;\n    checkListener(listener);\n    events = target._events;\n    if (events === undefined) {\n      events = target._events = Object.create(null);\n      target._eventsCount = 0;\n    } else {\n      // To avoid recursion in the case that type === \"newListener\"! Before\n      // adding it to the listeners, first emit \"newListener\".\n      if (events.newListener !== undefined) {\n        target.emit('newListener', type, listener.listener ? listener.listener : listener);\n\n        // Re-assign `events` because a newListener handler could have caused the\n        // this._events to be assigned to a new object\n        events = target._events;\n      }\n      existing = events[type];\n    }\n    if (existing === undefined) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      existing = events[type] = listener;\n      ++target._eventsCount;\n    } else {\n      if (typeof existing === 'function') {\n        // Adding the second element, need to change to array.\n        existing = events[type] = prepend ? [listener, existing] : [existing, listener];\n        // If we've already got an array, just append.\n      } else if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n\n      // Check for listener leak\n      m = _getMaxListeners(target);\n      if (m > 0 && existing.length > m && !existing.warned) {\n        existing.warned = true;\n        // No error code for this since it is a Warning\n        // eslint-disable-next-line no-restricted-syntax\n        var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        ProcessEmitWarning(w);\n      }\n    }\n    return target;\n  }\n  EventEmitter.prototype.addListener = function addListener(type, listener) {\n    return _addListener(this, type, listener, false);\n  };\n  EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n  EventEmitter.prototype.prependListener = function prependListener(type, listener) {\n    return _addListener(this, type, listener, true);\n  };\n  function onceWrapper() {\n    if (!this.fired) {\n      this.target.removeListener(this.type, this.wrapFn);\n      this.fired = true;\n      if (arguments.length === 0) return this.listener.call(this.target);\n      return this.listener.apply(this.target, arguments);\n    }\n  }\n  function _onceWrap(target, type, listener) {\n    var state = {\n      fired: false,\n      wrapFn: undefined,\n      target: target,\n      type: type,\n      listener: listener\n    };\n    var wrapped = onceWrapper.bind(state);\n    wrapped.listener = listener;\n    state.wrapFn = wrapped;\n    return wrapped;\n  }\n  EventEmitter.prototype.once = function once(type, listener) {\n    checkListener(listener);\n    this.on(type, _onceWrap(this, type, listener));\n    return this;\n  };\n  EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n    checkListener(listener);\n    this.prependListener(type, _onceWrap(this, type, listener));\n    return this;\n  };\n\n  // Emits a 'removeListener' event if and only if the listener was removed.\n  EventEmitter.prototype.removeListener = function removeListener(type, listener) {\n    var list, events, position, i, originalListener;\n    checkListener(listener);\n    events = this._events;\n    if (events === undefined) return this;\n    list = events[type];\n    if (list === undefined) return this;\n    if (list === listener || list.listener === listener) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else {\n        delete events[type];\n        if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n      }\n    } else if (typeof list !== 'function') {\n      position = -1;\n      for (i = list.length - 1; i >= 0; i--) {\n        if (list[i] === listener || list[i].listener === listener) {\n          originalListener = list[i].listener;\n          position = i;\n          break;\n        }\n      }\n      if (position < 0) return this;\n      if (position === 0) list.shift();else {\n        spliceOne(list, position);\n      }\n      if (list.length === 1) events[type] = list[0];\n      if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n    }\n    return this;\n  };\n  EventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n  EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n    var listeners, events, i;\n    events = this._events;\n    if (events === undefined) return this;\n\n    // not listening for removeListener, no need to emit\n    if (events.removeListener === undefined) {\n      if (arguments.length === 0) {\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n      } else if (events[type] !== undefined) {\n        if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n      }\n      return this;\n    }\n\n    // emit removeListener for all listeners on all events\n    if (arguments.length === 0) {\n      var keys = Object.keys(events);\n      var key;\n      for (i = 0; i < keys.length; ++i) {\n        key = keys[i];\n        if (key === 'removeListener') continue;\n        this.removeAllListeners(key);\n      }\n      this.removeAllListeners('removeListener');\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n      return this;\n    }\n    listeners = events[type];\n    if (typeof listeners === 'function') {\n      this.removeListener(type, listeners);\n    } else if (listeners !== undefined) {\n      // LIFO order\n      for (i = listeners.length - 1; i >= 0; i--) {\n        this.removeListener(type, listeners[i]);\n      }\n    }\n    return this;\n  };\n  function _listeners(target, type, unwrap) {\n    var events = target._events;\n    if (events === undefined) return [];\n    var evlistener = events[type];\n    if (evlistener === undefined) return [];\n    if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n    return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n  }\n  EventEmitter.prototype.listeners = function listeners(type) {\n    return _listeners(this, type, true);\n  };\n  EventEmitter.prototype.rawListeners = function rawListeners(type) {\n    return _listeners(this, type, false);\n  };\n  EventEmitter.listenerCount = function (emitter, type) {\n    if (typeof emitter.listenerCount === 'function') {\n      return emitter.listenerCount(type);\n    } else {\n      return listenerCount.call(emitter, type);\n    }\n  };\n  EventEmitter.prototype.listenerCount = listenerCount;\n  function listenerCount(type) {\n    var events = this._events;\n    if (events !== undefined) {\n      var evlistener = events[type];\n      if (typeof evlistener === 'function') {\n        return 1;\n      } else if (evlistener !== undefined) {\n        return evlistener.length;\n      }\n    }\n    return 0;\n  }\n  EventEmitter.prototype.eventNames = function eventNames() {\n    return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n  };\n  function arrayClone(arr, n) {\n    var copy = new Array(n);\n    for (var i = 0; i < n; ++i) copy[i] = arr[i];\n    return copy;\n  }\n  function spliceOne(list, index) {\n    for (; index + 1 < list.length; index++) list[index] = list[index + 1];\n    list.pop();\n  }\n  function unwrapListeners(arr) {\n    var ret = new Array(arr.length);\n    for (var i = 0; i < ret.length; ++i) {\n      ret[i] = arr[i].listener || arr[i];\n    }\n    return ret;\n  }\n  function once(emitter, name) {\n    return new Promise(function (resolve, reject) {\n      function errorListener(err) {\n        emitter.removeListener(name, resolver);\n        reject(err);\n      }\n      function resolver() {\n        if (typeof emitter.removeListener === 'function') {\n          emitter.removeListener('error', errorListener);\n        }\n        resolve([].slice.call(arguments));\n      }\n      ;\n      eventTargetAgnosticAddListener(emitter, name, resolver, {\n        once: true\n      });\n      if (name !== 'error') {\n        addErrorHandlerIfEventEmitter(emitter, errorListener, {\n          once: true\n        });\n      }\n    });\n  }\n  function addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n    if (typeof emitter.on === 'function') {\n      eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n    }\n  }\n  function eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n    if (typeof emitter.on === 'function') {\n      if (flags.once) {\n        emitter.once(name, listener);\n      } else {\n        emitter.on(name, listener);\n      }\n    } else if (typeof emitter.addEventListener === 'function') {\n      // EventTarget does not have `error` event semantics like Node\n      // EventEmitters, we do not listen for `error` events here.\n      emitter.addEventListener(name, function wrapListener(arg) {\n        // IE does not have builtin `{ once: true }` support so we\n        // have to do it manually.\n        if (flags.once) {\n          emitter.removeEventListener(name, wrapListener);\n        }\n        listener(arg);\n      });\n    } else {\n      throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n    }\n  }\n\n  /***/\n}, /* 18 */\n/***/function (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"h\", function () {\n    return serializeError;\n  });\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"g\", function () {\n    return getRpcPromiseCallback;\n  });\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"b\", function () {\n    return createErrorMiddleware;\n  });\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"f\", function () {\n    return createStreamMiddleware;\n  });\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"e\", function () {\n    return createScaffoldMiddleware;\n  });\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"c\", function () {\n    return createIdRemapMiddleware;\n  });\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"d\", function () {\n    return createLoggerMiddleware;\n  });\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"a\", function () {\n    return createAsyncMiddleware;\n  });\n  /* harmony import */\n  var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9);\n  /* harmony import */\n  var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__);\n  /* harmony import */\n  var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);\n  /* harmony import */\n  var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);\n  /* harmony import */\n  var _toruslabs_openlogin_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(38);\n  /* harmony import */\n  var _toruslabs_openlogin_utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_toruslabs_openlogin_utils__WEBPACK_IMPORTED_MODULE_2__);\n  /* harmony import */\n  var stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(10);\n  /* harmony import */\n  var stream__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_3__);\n  /* harmony import */\n  var _safeEventEmitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(14);\n  /* harmony import */\n  var _serializableError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8);\n  function serializeError(error) {\n    return error.toString();\n  }\n  var getRpcPromiseCallback = function getRpcPromiseCallback(resolve, reject) {\n    var unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    return function (error, response) {\n      if (error || response.error) {\n        reject(error || response.error);\n      } else if (!unwrapResult || Array.isArray(response)) {\n        resolve(response);\n      } else {\n        resolve(response.result);\n      }\n    };\n  };\n  function createErrorMiddleware(log) {\n    return function (req, res, next, end) {\n      try {\n        // json-rpc-engine will terminate the request when it notices this error\n        if (typeof req.method !== \"string\" || !req.method) {\n          res.error = new _serializableError__WEBPACK_IMPORTED_MODULE_5__[/* default */\"a\"]({\n            code: -32603,\n            message: \"invalid method\"\n          });\n          end();\n          return;\n        }\n        next(function (done) {\n          var error = res.error;\n          if (!error) {\n            return done();\n          }\n          log.error(\"OpenLogin - RPC Error: \".concat(error.message), error);\n          return done();\n        });\n      } catch (error) {\n        log.error(\"OpenLogin - RPC Error thrown: \".concat(error.message), error);\n        res.error = new _serializableError__WEBPACK_IMPORTED_MODULE_5__[/* default */\"a\"]({\n          code: -32603,\n          message: error.message\n        });\n        end();\n      }\n    };\n  }\n  function createStreamMiddleware() {\n    var idMap = {};\n    function readNoop() {\n      return false;\n    }\n    var events = new _safeEventEmitter__WEBPACK_IMPORTED_MODULE_4__[/* default */\"a\"]();\n    function processResponse(res) {\n      var context = idMap[res.id];\n      if (!context) {\n        throw new Error(\"StreamMiddleware - Unknown response id \\\"\".concat(res.id, \"\\\"\"));\n      }\n      delete idMap[res.id]; // copy whole res onto original res\n\n      Object.assign(context.res, res); // run callback on empty stack,\n      // prevent internal stream-handler from catching errors\n\n      setTimeout(context.end);\n    }\n    function processNotification(res) {\n      events.emit(\"notification\", res);\n    }\n    function processMessage(res, _encoding, cb) {\n      var err;\n      try {\n        var isNotification = !res.id;\n        if (isNotification) {\n          processNotification(res);\n        } else {\n          processResponse(res);\n        }\n      } catch (_err) {\n        err = _err;\n      } // continue processing stream\n\n      cb(err);\n    }\n    var stream = new stream__WEBPACK_IMPORTED_MODULE_3__[\"Duplex\"]({\n      objectMode: true,\n      read: readNoop,\n      write: processMessage\n    });\n    var middleware = function middleware(req, res, next, end) {\n      // write req to stream\n      stream.push(req); // register request on id map\n\n      idMap[req.id] = {\n        req: req,\n        res: res,\n        next: next,\n        end: end\n      };\n    };\n    return {\n      events: events,\n      middleware: middleware,\n      stream: stream\n    };\n  }\n  function createScaffoldMiddleware(handlers) {\n    return function (req, res, next, end) {\n      var handler = handlers[req.method]; // if no handler, return\n\n      if (handler === undefined) {\n        return next();\n      } // if handler is fn, call as middleware\n\n      if (typeof handler === \"function\") {\n        return handler(req, res, next, end);\n      } // if handler is some other value, use as result\n\n      res.result = handler;\n      return end();\n    };\n  }\n  function createIdRemapMiddleware() {\n    return function (req, res, next, _end) {\n      var originalId = req.id;\n      var newId = Object(_toruslabs_openlogin_utils__WEBPACK_IMPORTED_MODULE_2__[\"randomId\"])();\n      req.id = newId;\n      res.id = newId;\n      next(function (done) {\n        req.id = originalId;\n        res.id = originalId;\n        done();\n      });\n    };\n  }\n  function createLoggerMiddleware(logger) {\n    return function (req, res, next, _) {\n      logger.debug(\"REQ\", req, \"RES\", res);\n      next();\n    };\n  }\n  function createAsyncMiddleware(asyncMiddleware) {\n    return /*#__PURE__*/function () {\n      var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee2(req, res, next, end) {\n        var resolveNextPromise, nextPromise, returnHandlerCallback, nextWasCalled, asyncNext;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // nextPromise is the key to the implementation\n                // it is resolved by the return handler passed to the\n                // \"next\" function\n                nextPromise = new Promise(function (resolve) {\n                  resolveNextPromise = resolve;\n                });\n                returnHandlerCallback = null;\n                nextWasCalled = false; // This will be called by the consumer's async middleware.\n\n                asyncNext = /*#__PURE__*/function () {\n                  var _ref2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee() {\n                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            nextWasCalled = true; // We pass a return handler to next(). When it is called by the engine,\n                            // the consumer's async middleware will resume executing.\n                            // eslint-disable-next-line node/callback-return\n\n                            next(function (runReturnHandlersCallback) {\n                              // This callback comes from JRPCEngine._runReturnHandlers\n                              returnHandlerCallback = runReturnHandlersCallback;\n                              resolveNextPromise();\n                            });\n                            _context.next = 4;\n                            return nextPromise;\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n                  return function asyncNext() {\n                    return _ref2.apply(this, arguments);\n                  };\n                }();\n                _context2.prev = 4;\n                _context2.next = 7;\n                return asyncMiddleware(req, res, asyncNext);\n              case 7:\n                if (!nextWasCalled) {\n                  _context2.next = 13;\n                  break;\n                }\n                _context2.next = 10;\n                return nextPromise;\n              case 10:\n                // we must wait until the return handler is called\n                returnHandlerCallback(null);\n                _context2.next = 14;\n                break;\n              case 13:\n                end(null);\n              case 14:\n                _context2.next = 19;\n                break;\n              case 16:\n                _context2.prev = 16;\n                _context2.t0 = _context2[\"catch\"](4);\n                if (returnHandlerCallback) {\n                  returnHandlerCallback(_context2.t0);\n                } else {\n                  end(_context2.t0);\n                }\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 16]]);\n      }));\n      return function (_x, _x2, _x3, _x4) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n\n  /***/\n}, /* 19 */\n/***/function (module, exports) {\n  // shim for using process in browser\n  var process = module.exports = {};\n\n  // cached from whatever global is present so that test runners that stub it\n  // don't break things.  But we need to wrap it in a try catch in case it is\n  // wrapped in strict mode code which doesn't define any globals.  It's inside a\n  // function because try/catches deoptimize in certain engines.\n\n  var cachedSetTimeout;\n  var cachedClearTimeout;\n  function defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n  }\n  function defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n  }\n  (function () {\n    try {\n      if (typeof setTimeout === 'function') {\n        cachedSetTimeout = setTimeout;\n      } else {\n        cachedSetTimeout = defaultSetTimout;\n      }\n    } catch (e) {\n      cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n      if (typeof clearTimeout === 'function') {\n        cachedClearTimeout = clearTimeout;\n      } else {\n        cachedClearTimeout = defaultClearTimeout;\n      }\n    } catch (e) {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  })();\n  function runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n      //normal enviroments in sane situations\n      return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n      cachedSetTimeout = setTimeout;\n      return setTimeout(fun, 0);\n    }\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedSetTimeout(fun, 0);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n        return cachedSetTimeout.call(null, fun, 0);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n        return cachedSetTimeout.call(this, fun, 0);\n      }\n    }\n  }\n  function runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n      //normal enviroments in sane situations\n      return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n      cachedClearTimeout = clearTimeout;\n      return clearTimeout(marker);\n    }\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedClearTimeout(marker);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n        return cachedClearTimeout.call(null, marker);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n        // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n        return cachedClearTimeout.call(this, marker);\n      }\n    }\n  }\n  var queue = [];\n  var draining = false;\n  var currentQueue;\n  var queueIndex = -1;\n  function cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n      return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n      queue = currentQueue.concat(queue);\n    } else {\n      queueIndex = -1;\n    }\n    if (queue.length) {\n      drainQueue();\n    }\n  }\n  function drainQueue() {\n    if (draining) {\n      return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n    while (len) {\n      currentQueue = queue;\n      queue = [];\n      while (++queueIndex < len) {\n        if (currentQueue) {\n          currentQueue[queueIndex].run();\n        }\n      }\n      queueIndex = -1;\n      len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n  }\n  process.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n      for (var i = 1; i < arguments.length; i++) {\n        args[i - 1] = arguments[i];\n      }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n      runTimeout(drainQueue);\n    }\n  };\n\n  // v8 likes predictible objects\n  function Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n  }\n  Item.prototype.run = function () {\n    this.fun.apply(null, this.array);\n  };\n  process.title = 'browser';\n  process.browser = true;\n  process.env = {};\n  process.argv = [];\n  process.version = ''; // empty string to avoid regexp issues\n  process.versions = {};\n  function noop() {}\n  process.on = noop;\n  process.addListener = noop;\n  process.once = noop;\n  process.off = noop;\n  process.removeListener = noop;\n  process.removeAllListeners = noop;\n  process.emit = noop;\n  process.prependListener = noop;\n  process.prependOnceListener = noop;\n  process.listeners = function (name) {\n    return [];\n  };\n  process.binding = function (name) {\n    throw new Error('process.binding is not supported');\n  };\n  process.cwd = function () {\n    return '/';\n  };\n  process.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n  };\n  process.umask = function () {\n    return 0;\n  };\n\n  /***/\n}, /* 20 */\n/***/function (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  /* WEBPACK VAR INJECTION */\n  (function (process) {\n    if (typeof process === 'undefined' || !process.version || process.version.indexOf('v0.') === 0 || process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n      module.exports = {\n        nextTick: nextTick\n      };\n    } else {\n      module.exports = process;\n    }\n    function nextTick(fn, arg1, arg2, arg3) {\n      if (typeof fn !== 'function') {\n        throw new TypeError('\"callback\" argument must be a function');\n      }\n      var len = arguments.length;\n      var args, i;\n      switch (len) {\n        case 0:\n        case 1:\n          return process.nextTick(fn);\n        case 2:\n          return process.nextTick(function afterTickOne() {\n            fn.call(null, arg1);\n          });\n        case 3:\n          return process.nextTick(function afterTickTwo() {\n            fn.call(null, arg1, arg2);\n          });\n        case 4:\n          return process.nextTick(function afterTickThree() {\n            fn.call(null, arg1, arg2, arg3);\n          });\n        default:\n          args = new Array(len - 1);\n          i = 0;\n          while (i < args.length) {\n            args[i++] = arguments[i];\n          }\n          return process.nextTick(function afterTick() {\n            fn.apply(null, args);\n          });\n      }\n    }\n\n    /* WEBPACK VAR INJECTION */\n  }).call(this, __webpack_require__(19));\n\n  /***/\n}, /* 21 */\n/***/function (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"a\", function () {\n    return Substream;\n  });\n  /* harmony import */\n  var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n  /* harmony import */\n  var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n  /* harmony import */\n  var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);\n  /* harmony import */\n  var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n  /* harmony import */\n  var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);\n  /* harmony import */\n  var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__);\n  /* harmony import */\n  var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);\n  /* harmony import */\n  var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);\n  /* harmony import */\n  var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7);\n  /* harmony import */\n  var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);\n  /* harmony import */\n  var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(3);\n  /* harmony import */\n  var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);\n  /* harmony import */\n  var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(0);\n  /* harmony import */\n  var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__);\n  /* harmony import */\n  var stream__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(10);\n  /* harmony import */\n  var stream__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_7__);\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Derived),\n        result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  var Substream = /*#__PURE__*/function (_Duplex) {\n    _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(Substream, _Duplex);\n    var _super = _createSuper(Substream);\n    function Substream(_ref) {\n      var _this;\n      var parent = _ref.parent,\n        name = _ref.name;\n      _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Substream);\n      _this = _super.call(this, {\n        objectMode: true\n      });\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(_this), \"_parent\", void 0);\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(_this), \"_name\", void 0);\n      _this._parent = parent;\n      _this._name = name;\n      return _this;\n    }\n    /**\n     * Explicitly sets read operations to a no-op.\n     */\n    // eslint-disable-next-line class-methods-use-this\n\n    _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Substream, [{\n      key: \"_read\",\n      value: function _read() {\n        return undefined;\n      }\n      /**\n       * Called when data should be written to this writable stream.\n       *\n       * @param chunk - Arbitrary object to write\n       * @param encoding - Encoding to use when writing payload\n       * @param callback - Called when writing is complete or an error occurs\n       */\n    }, {\n      key: \"_write\",\n      value: function _write(chunk, _encoding, callback) {\n        this._parent.push({\n          name: this._name,\n          data: chunk\n        });\n        callback();\n      }\n    }]);\n    return Substream;\n  }(stream__WEBPACK_IMPORTED_MODULE_7__[\"Duplex\"]);\n\n  /***/\n}, /* 22 */\n/***/function (module, exports) {\n  module.exports = require(\"@babel/runtime/helpers/slicedToArray\");\n\n  /***/\n}, /* 23 */\n/***/function (module, exports, __webpack_require__) {\n  exports = module.exports = __webpack_require__(27);\n  exports.Stream = exports;\n  exports.Readable = exports;\n  exports.Writable = __webpack_require__(25);\n  exports.Duplex = __webpack_require__(11);\n  exports.Transform = __webpack_require__(33);\n  exports.PassThrough = __webpack_require__(53);\n\n  /***/\n}, /* 24 */\n/***/function (module, exports, __webpack_require__) {\n  /* eslint-disable node/no-deprecated-api */\n  var buffer = __webpack_require__(30);\n  var Buffer = buffer.Buffer;\n\n  // alternative to using Object.keys for old browsers\n  function copyProps(src, dst) {\n    for (var key in src) {\n      dst[key] = src[key];\n    }\n  }\n  if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n    module.exports = buffer;\n  } else {\n    // Copy properties from require('buffer')\n    copyProps(buffer, exports);\n    exports.Buffer = SafeBuffer;\n  }\n  function SafeBuffer(arg, encodingOrOffset, length) {\n    return Buffer(arg, encodingOrOffset, length);\n  }\n\n  // Copy static methods from Buffer\n  copyProps(Buffer, SafeBuffer);\n  SafeBuffer.from = function (arg, encodingOrOffset, length) {\n    if (typeof arg === 'number') {\n      throw new TypeError('Argument must not be a number');\n    }\n    return Buffer(arg, encodingOrOffset, length);\n  };\n  SafeBuffer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    var buf = Buffer(size);\n    if (fill !== undefined) {\n      if (typeof encoding === 'string') {\n        buf.fill(fill, encoding);\n      } else {\n        buf.fill(fill);\n      }\n    } else {\n      buf.fill(0);\n    }\n    return buf;\n  };\n  SafeBuffer.allocUnsafe = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    return Buffer(size);\n  };\n  SafeBuffer.allocUnsafeSlow = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    return buffer.SlowBuffer(size);\n  };\n\n  /***/\n}, /* 25 */\n/***/function (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  /* WEBPACK VAR INJECTION */\n  (function (process, setImmediate, global) {\n    // Copyright Joyent, Inc. and other Node contributors.\n    //\n    // Permission is hereby granted, free of charge, to any person obtaining a\n    // copy of this software and associated documentation files (the\n    // \"Software\"), to deal in the Software without restriction, including\n    // without limitation the rights to use, copy, modify, merge, publish,\n    // distribute, sublicense, and/or sell copies of the Software, and to permit\n    // persons to whom the Software is furnished to do so, subject to the\n    // following conditions:\n    //\n    // The above copyright notice and this permission notice shall be included\n    // in all copies or substantial portions of the Software.\n    //\n    // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n    // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n    // A bit simpler than readable streams.\n    // Implement an async ._write(chunk, encoding, cb), and it'll handle all\n    // the drain event emission and buffering.\n\n    /*<replacement>*/\n\n    var pna = __webpack_require__(20);\n    /*</replacement>*/\n\n    module.exports = Writable;\n\n    /* <replacement> */\n    function WriteReq(chunk, encoding, cb) {\n      this.chunk = chunk;\n      this.encoding = encoding;\n      this.callback = cb;\n      this.next = null;\n    }\n\n    // It seems a linked list but it is not\n    // there will be only 2 of these for each stream\n    function CorkedRequest(state) {\n      var _this = this;\n      this.next = null;\n      this.entry = null;\n      this.finish = function () {\n        onCorkedFinish(_this, state);\n      };\n    }\n    /* </replacement> */\n\n    /*<replacement>*/\n    var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var Duplex;\n    /*</replacement>*/\n\n    Writable.WritableState = WritableState;\n\n    /*<replacement>*/\n    var util = Object.create(__webpack_require__(16));\n    util.inherits = __webpack_require__(12);\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var internalUtil = {\n      deprecate: __webpack_require__(51)\n    };\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var Stream = __webpack_require__(29);\n    /*</replacement>*/\n\n    /*<replacement>*/\n\n    var Buffer = __webpack_require__(24).Buffer;\n    var OurUint8Array = global.Uint8Array || function () {};\n    function _uint8ArrayToBuffer(chunk) {\n      return Buffer.from(chunk);\n    }\n    function _isUint8Array(obj) {\n      return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n    }\n\n    /*</replacement>*/\n\n    var destroyImpl = __webpack_require__(31);\n    util.inherits(Writable, Stream);\n    function nop() {}\n    function WritableState(options, stream) {\n      Duplex = Duplex || __webpack_require__(11);\n      options = options || {};\n\n      // Duplex streams are both readable and writable, but share\n      // the same options object.\n      // However, some cases require setting options to different\n      // values for the readable and the writable sides of the duplex stream.\n      // These options can be provided separately as readableXXX and writableXXX.\n      var isDuplex = stream instanceof Duplex;\n\n      // object stream flag to indicate whether or not this stream\n      // contains buffers or objects.\n      this.objectMode = !!options.objectMode;\n      if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n      // the point at which write() starts returning false\n      // Note: 0 is a valid value, means that we always return false if\n      // the entire buffer is not flushed immediately on write()\n      var hwm = options.highWaterMark;\n      var writableHwm = options.writableHighWaterMark;\n      var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n      if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n      // cast to ints.\n      this.highWaterMark = Math.floor(this.highWaterMark);\n\n      // if _final has been called\n      this.finalCalled = false;\n\n      // drain event flag.\n      this.needDrain = false;\n      // at the start of calling end()\n      this.ending = false;\n      // when end() has been called, and returned\n      this.ended = false;\n      // when 'finish' is emitted\n      this.finished = false;\n\n      // has it been destroyed\n      this.destroyed = false;\n\n      // should we decode strings into buffers before passing to _write?\n      // this is here so that some node-core streams can optimize string\n      // handling at a lower level.\n      var noDecode = options.decodeStrings === false;\n      this.decodeStrings = !noDecode;\n\n      // Crypto is kind of old and crusty.  Historically, its default string\n      // encoding is 'binary' so we have to make this configurable.\n      // Everything else in the universe uses 'utf8', though.\n      this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n      // not an actual buffer we keep track of, but a measurement\n      // of how much we're waiting to get pushed to some underlying\n      // socket or file.\n      this.length = 0;\n\n      // a flag to see when we're in the middle of a write.\n      this.writing = false;\n\n      // when true all writes will be buffered until .uncork() call\n      this.corked = 0;\n\n      // a flag to be able to tell if the onwrite cb is called immediately,\n      // or on a later tick.  We set this to true at first, because any\n      // actions that shouldn't happen until \"later\" should generally also\n      // not happen before the first write call.\n      this.sync = true;\n\n      // a flag to know if we're processing previously buffered items, which\n      // may call the _write() callback in the same tick, so that we don't\n      // end up in an overlapped onwrite situation.\n      this.bufferProcessing = false;\n\n      // the callback that's passed to _write(chunk,cb)\n      this.onwrite = function (er) {\n        onwrite(stream, er);\n      };\n\n      // the callback that the user supplies to write(chunk,encoding,cb)\n      this.writecb = null;\n\n      // the amount that is being written when _write is called.\n      this.writelen = 0;\n      this.bufferedRequest = null;\n      this.lastBufferedRequest = null;\n\n      // number of pending user-supplied write callbacks\n      // this must be 0 before 'finish' can be emitted\n      this.pendingcb = 0;\n\n      // emit prefinish if the only thing we're waiting for is _write cbs\n      // This is relevant for synchronous Transform streams\n      this.prefinished = false;\n\n      // True if the error was already emitted and should not be thrown again\n      this.errorEmitted = false;\n\n      // count buffered requests\n      this.bufferedRequestCount = 0;\n\n      // allocate the first CorkedRequest, there is always\n      // one allocated and free to use, and we maintain at most two\n      this.corkedRequestsFree = new CorkedRequest(this);\n    }\n    WritableState.prototype.getBuffer = function getBuffer() {\n      var current = this.bufferedRequest;\n      var out = [];\n      while (current) {\n        out.push(current);\n        current = current.next;\n      }\n      return out;\n    };\n    (function () {\n      try {\n        Object.defineProperty(WritableState.prototype, 'buffer', {\n          get: internalUtil.deprecate(function () {\n            return this.getBuffer();\n          }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n        });\n      } catch (_) {}\n    })();\n\n    // Test _writableState for inheritance to account for Duplex streams,\n    // whose prototype chain only points to Readable.\n    var realHasInstance;\n    if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n      realHasInstance = Function.prototype[Symbol.hasInstance];\n      Object.defineProperty(Writable, Symbol.hasInstance, {\n        value: function value(object) {\n          if (realHasInstance.call(this, object)) return true;\n          if (this !== Writable) return false;\n          return object && object._writableState instanceof WritableState;\n        }\n      });\n    } else {\n      realHasInstance = function realHasInstance(object) {\n        return object instanceof this;\n      };\n    }\n    function Writable(options) {\n      Duplex = Duplex || __webpack_require__(11);\n\n      // Writable ctor is applied to Duplexes, too.\n      // `realHasInstance` is necessary because using plain `instanceof`\n      // would return false, as no `_writableState` property is attached.\n\n      // Trying to use the custom `instanceof` for Writable here will also break the\n      // Node.js LazyTransform implementation, which has a non-trivial getter for\n      // `_writableState` that would lead to infinite recursion.\n      if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n        return new Writable(options);\n      }\n      this._writableState = new WritableState(options, this);\n\n      // legacy.\n      this.writable = true;\n      if (options) {\n        if (typeof options.write === 'function') this._write = options.write;\n        if (typeof options.writev === 'function') this._writev = options.writev;\n        if (typeof options.destroy === 'function') this._destroy = options.destroy;\n        if (typeof options.final === 'function') this._final = options.final;\n      }\n      Stream.call(this);\n    }\n\n    // Otherwise people can pipe Writable streams, which is just wrong.\n    Writable.prototype.pipe = function () {\n      this.emit('error', new Error('Cannot pipe, not readable'));\n    };\n    function writeAfterEnd(stream, cb) {\n      var er = new Error('write after end');\n      // TODO: defer error events consistently everywhere, not just the cb\n      stream.emit('error', er);\n      pna.nextTick(cb, er);\n    }\n\n    // Checks that a user-supplied chunk is valid, especially for the particular\n    // mode the stream is in. Currently this means that `null` is never accepted\n    // and undefined/non-string values are only allowed in object mode.\n    function validChunk(stream, state, chunk, cb) {\n      var valid = true;\n      var er = false;\n      if (chunk === null) {\n        er = new TypeError('May not write null values to stream');\n      } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n        er = new TypeError('Invalid non-string/buffer chunk');\n      }\n      if (er) {\n        stream.emit('error', er);\n        pna.nextTick(cb, er);\n        valid = false;\n      }\n      return valid;\n    }\n    Writable.prototype.write = function (chunk, encoding, cb) {\n      var state = this._writableState;\n      var ret = false;\n      var isBuf = !state.objectMode && _isUint8Array(chunk);\n      if (isBuf && !Buffer.isBuffer(chunk)) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (typeof encoding === 'function') {\n        cb = encoding;\n        encoding = null;\n      }\n      if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n      if (typeof cb !== 'function') cb = nop;\n      if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n        state.pendingcb++;\n        ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n      }\n      return ret;\n    };\n    Writable.prototype.cork = function () {\n      var state = this._writableState;\n      state.corked++;\n    };\n    Writable.prototype.uncork = function () {\n      var state = this._writableState;\n      if (state.corked) {\n        state.corked--;\n        if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n      }\n    };\n    Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n      // node::ParseEncoding() requires lower case.\n      if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n      if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n      this._writableState.defaultEncoding = encoding;\n      return this;\n    };\n    function decodeChunk(state, chunk, encoding) {\n      if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n        chunk = Buffer.from(chunk, encoding);\n      }\n      return chunk;\n    }\n    Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n      // making it explicit this property is not enumerable\n      // because otherwise some prototype manipulation in\n      // userland will fail\n      enumerable: false,\n      get: function get() {\n        return this._writableState.highWaterMark;\n      }\n    });\n\n    // if we're already writing something, then just put this\n    // in the queue, and wait our turn.  Otherwise, call _write\n    // If we return false, then we need a drain event, so set that flag.\n    function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n      if (!isBuf) {\n        var newChunk = decodeChunk(state, chunk, encoding);\n        if (chunk !== newChunk) {\n          isBuf = true;\n          encoding = 'buffer';\n          chunk = newChunk;\n        }\n      }\n      var len = state.objectMode ? 1 : chunk.length;\n      state.length += len;\n      var ret = state.length < state.highWaterMark;\n      // we must ensure that previous needDrain will not be reset to false.\n      if (!ret) state.needDrain = true;\n      if (state.writing || state.corked) {\n        var last = state.lastBufferedRequest;\n        state.lastBufferedRequest = {\n          chunk: chunk,\n          encoding: encoding,\n          isBuf: isBuf,\n          callback: cb,\n          next: null\n        };\n        if (last) {\n          last.next = state.lastBufferedRequest;\n        } else {\n          state.bufferedRequest = state.lastBufferedRequest;\n        }\n        state.bufferedRequestCount += 1;\n      } else {\n        doWrite(stream, state, false, len, chunk, encoding, cb);\n      }\n      return ret;\n    }\n    function doWrite(stream, state, writev, len, chunk, encoding, cb) {\n      state.writelen = len;\n      state.writecb = cb;\n      state.writing = true;\n      state.sync = true;\n      if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n      state.sync = false;\n    }\n    function onwriteError(stream, state, sync, er, cb) {\n      --state.pendingcb;\n      if (sync) {\n        // defer the callback if we are being called synchronously\n        // to avoid piling up things on the stack\n        pna.nextTick(cb, er);\n        // this can emit finish, and it will always happen\n        // after error\n        pna.nextTick(finishMaybe, stream, state);\n        stream._writableState.errorEmitted = true;\n        stream.emit('error', er);\n      } else {\n        // the caller expect this to happen before if\n        // it is async\n        cb(er);\n        stream._writableState.errorEmitted = true;\n        stream.emit('error', er);\n        // this can emit finish, but finish must\n        // always follow error\n        finishMaybe(stream, state);\n      }\n    }\n    function onwriteStateUpdate(state) {\n      state.writing = false;\n      state.writecb = null;\n      state.length -= state.writelen;\n      state.writelen = 0;\n    }\n    function onwrite(stream, er) {\n      var state = stream._writableState;\n      var sync = state.sync;\n      var cb = state.writecb;\n      onwriteStateUpdate(state);\n      if (er) onwriteError(stream, state, sync, er, cb);else {\n        // Check if we're actually ready to finish, but don't emit yet\n        var finished = needFinish(state);\n        if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n          clearBuffer(stream, state);\n        }\n        if (sync) {\n          /*<replacement>*/\n          asyncWrite(afterWrite, stream, state, finished, cb);\n          /*</replacement>*/\n        } else {\n          afterWrite(stream, state, finished, cb);\n        }\n      }\n    }\n    function afterWrite(stream, state, finished, cb) {\n      if (!finished) onwriteDrain(stream, state);\n      state.pendingcb--;\n      cb();\n      finishMaybe(stream, state);\n    }\n\n    // Must force callback to be called on nextTick, so that we don't\n    // emit 'drain' before the write() consumer gets the 'false' return\n    // value, and has a chance to attach a 'drain' listener.\n    function onwriteDrain(stream, state) {\n      if (state.length === 0 && state.needDrain) {\n        state.needDrain = false;\n        stream.emit('drain');\n      }\n    }\n\n    // if there's something in the buffer waiting, then process it\n    function clearBuffer(stream, state) {\n      state.bufferProcessing = true;\n      var entry = state.bufferedRequest;\n      if (stream._writev && entry && entry.next) {\n        // Fast case, write everything using _writev()\n        var l = state.bufferedRequestCount;\n        var buffer = new Array(l);\n        var holder = state.corkedRequestsFree;\n        holder.entry = entry;\n        var count = 0;\n        var allBuffers = true;\n        while (entry) {\n          buffer[count] = entry;\n          if (!entry.isBuf) allBuffers = false;\n          entry = entry.next;\n          count += 1;\n        }\n        buffer.allBuffers = allBuffers;\n        doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n        // doWrite is almost always async, defer these to save a bit of time\n        // as the hot path ends with doWrite\n        state.pendingcb++;\n        state.lastBufferedRequest = null;\n        if (holder.next) {\n          state.corkedRequestsFree = holder.next;\n          holder.next = null;\n        } else {\n          state.corkedRequestsFree = new CorkedRequest(state);\n        }\n        state.bufferedRequestCount = 0;\n      } else {\n        // Slow case, write chunks one-by-one\n        while (entry) {\n          var chunk = entry.chunk;\n          var encoding = entry.encoding;\n          var cb = entry.callback;\n          var len = state.objectMode ? 1 : chunk.length;\n          doWrite(stream, state, false, len, chunk, encoding, cb);\n          entry = entry.next;\n          state.bufferedRequestCount--;\n          // if we didn't call the onwrite immediately, then\n          // it means that we need to wait until it does.\n          // also, that means that the chunk and cb are currently\n          // being processed, so move the buffer counter past them.\n          if (state.writing) {\n            break;\n          }\n        }\n        if (entry === null) state.lastBufferedRequest = null;\n      }\n      state.bufferedRequest = entry;\n      state.bufferProcessing = false;\n    }\n    Writable.prototype._write = function (chunk, encoding, cb) {\n      cb(new Error('_write() is not implemented'));\n    };\n    Writable.prototype._writev = null;\n    Writable.prototype.end = function (chunk, encoding, cb) {\n      var state = this._writableState;\n      if (typeof chunk === 'function') {\n        cb = chunk;\n        chunk = null;\n        encoding = null;\n      } else if (typeof encoding === 'function') {\n        cb = encoding;\n        encoding = null;\n      }\n      if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n      // .end() fully uncorks\n      if (state.corked) {\n        state.corked = 1;\n        this.uncork();\n      }\n\n      // ignore unnecessary end() calls.\n      if (!state.ending && !state.finished) endWritable(this, state, cb);\n    };\n    function needFinish(state) {\n      return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n    }\n    function callFinal(stream, state) {\n      stream._final(function (err) {\n        state.pendingcb--;\n        if (err) {\n          stream.emit('error', err);\n        }\n        state.prefinished = true;\n        stream.emit('prefinish');\n        finishMaybe(stream, state);\n      });\n    }\n    function prefinish(stream, state) {\n      if (!state.prefinished && !state.finalCalled) {\n        if (typeof stream._final === 'function') {\n          state.pendingcb++;\n          state.finalCalled = true;\n          pna.nextTick(callFinal, stream, state);\n        } else {\n          state.prefinished = true;\n          stream.emit('prefinish');\n        }\n      }\n    }\n    function finishMaybe(stream, state) {\n      var need = needFinish(state);\n      if (need) {\n        prefinish(stream, state);\n        if (state.pendingcb === 0) {\n          state.finished = true;\n          stream.emit('finish');\n        }\n      }\n      return need;\n    }\n    function endWritable(stream, state, cb) {\n      state.ending = true;\n      finishMaybe(stream, state);\n      if (cb) {\n        if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n      }\n      state.ended = true;\n      stream.writable = false;\n    }\n    function onCorkedFinish(corkReq, state, err) {\n      var entry = corkReq.entry;\n      corkReq.entry = null;\n      while (entry) {\n        var cb = entry.callback;\n        state.pendingcb--;\n        cb(err);\n        entry = entry.next;\n      }\n      if (state.corkedRequestsFree) {\n        state.corkedRequestsFree.next = corkReq;\n      } else {\n        state.corkedRequestsFree = corkReq;\n      }\n    }\n    Object.defineProperty(Writable.prototype, 'destroyed', {\n      get: function get() {\n        if (this._writableState === undefined) {\n          return false;\n        }\n        return this._writableState.destroyed;\n      },\n      set: function set(value) {\n        // we ignore the value if the stream\n        // has not been initialized yet\n        if (!this._writableState) {\n          return;\n        }\n\n        // backward compatibility, the user is explicitly\n        // managing destroyed\n        this._writableState.destroyed = value;\n      }\n    });\n    Writable.prototype.destroy = destroyImpl.destroy;\n    Writable.prototype._undestroy = destroyImpl.undestroy;\n    Writable.prototype._destroy = function (err, cb) {\n      this.end();\n      cb(err);\n    };\n    /* WEBPACK VAR INJECTION */\n  }).call(this, __webpack_require__(19), __webpack_require__(49).setImmediate, __webpack_require__(13));\n\n  /***/\n}, /* 26 */\n/***/function (module, exports) {\n  module.exports = require(\"end-of-stream\");\n\n  /***/\n}, /* 27 */\n/***/function (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  /* WEBPACK VAR INJECTION */\n  (function (global, process) {\n    // Copyright Joyent, Inc. and other Node contributors.\n    //\n    // Permission is hereby granted, free of charge, to any person obtaining a\n    // copy of this software and associated documentation files (the\n    // \"Software\"), to deal in the Software without restriction, including\n    // without limitation the rights to use, copy, modify, merge, publish,\n    // distribute, sublicense, and/or sell copies of the Software, and to permit\n    // persons to whom the Software is furnished to do so, subject to the\n    // following conditions:\n    //\n    // The above copyright notice and this permission notice shall be included\n    // in all copies or substantial portions of the Software.\n    //\n    // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n    // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n    /*<replacement>*/\n\n    var pna = __webpack_require__(20);\n    /*</replacement>*/\n\n    module.exports = Readable;\n\n    /*<replacement>*/\n    var isArray = __webpack_require__(28);\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var Duplex;\n    /*</replacement>*/\n\n    Readable.ReadableState = ReadableState;\n\n    /*<replacement>*/\n    var EE = __webpack_require__(17).EventEmitter;\n    var EElistenerCount = function EElistenerCount(emitter, type) {\n      return emitter.listeners(type).length;\n    };\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var Stream = __webpack_require__(29);\n    /*</replacement>*/\n\n    /*<replacement>*/\n\n    var Buffer = __webpack_require__(24).Buffer;\n    var OurUint8Array = global.Uint8Array || function () {};\n    function _uint8ArrayToBuffer(chunk) {\n      return Buffer.from(chunk);\n    }\n    function _isUint8Array(obj) {\n      return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n    }\n\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var util = Object.create(__webpack_require__(16));\n    util.inherits = __webpack_require__(12);\n    /*</replacement>*/\n\n    /*<replacement>*/\n    var debugUtil = __webpack_require__(46);\n    var debug = void 0;\n    if (debugUtil && debugUtil.debuglog) {\n      debug = debugUtil.debuglog('stream');\n    } else {\n      debug = function debug() {};\n    }\n    /*</replacement>*/\n\n    var BufferList = __webpack_require__(47);\n    var destroyImpl = __webpack_require__(31);\n    var StringDecoder;\n    util.inherits(Readable, Stream);\n    var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n    function prependListener(emitter, event, fn) {\n      // Sadly this is not cacheable as some libraries bundle their own\n      // event emitter implementation with them.\n      if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n      // This is a hack to make sure that our error handler is attached before any\n      // userland ones.  NEVER DO THIS. This is here only because this code needs\n      // to continue to work with older versions of Node.js that do not include\n      // the prependListener() method. The goal is to eventually remove this hack.\n      if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n    }\n    function ReadableState(options, stream) {\n      Duplex = Duplex || __webpack_require__(11);\n      options = options || {};\n\n      // Duplex streams are both readable and writable, but share\n      // the same options object.\n      // However, some cases require setting options to different\n      // values for the readable and the writable sides of the duplex stream.\n      // These options can be provided separately as readableXXX and writableXXX.\n      var isDuplex = stream instanceof Duplex;\n\n      // object stream flag. Used to make read(n) ignore n and to\n      // make all the buffer merging and length checks go away\n      this.objectMode = !!options.objectMode;\n      if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n      // the point at which it stops calling _read() to fill the buffer\n      // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n      var hwm = options.highWaterMark;\n      var readableHwm = options.readableHighWaterMark;\n      var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n      if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n      // cast to ints.\n      this.highWaterMark = Math.floor(this.highWaterMark);\n\n      // A linked list is used to store data chunks instead of an array because the\n      // linked list can remove elements from the beginning faster than\n      // array.shift()\n      this.buffer = new BufferList();\n      this.length = 0;\n      this.pipes = null;\n      this.pipesCount = 0;\n      this.flowing = null;\n      this.ended = false;\n      this.endEmitted = false;\n      this.reading = false;\n\n      // a flag to be able to tell if the event 'readable'/'data' is emitted\n      // immediately, or on a later tick.  We set this to true at first, because\n      // any actions that shouldn't happen until \"later\" should generally also\n      // not happen before the first read call.\n      this.sync = true;\n\n      // whenever we return null, then we set a flag to say\n      // that we're awaiting a 'readable' event emission.\n      this.needReadable = false;\n      this.emittedReadable = false;\n      this.readableListening = false;\n      this.resumeScheduled = false;\n\n      // has it been destroyed\n      this.destroyed = false;\n\n      // Crypto is kind of old and crusty.  Historically, its default string\n      // encoding is 'binary' so we have to make this configurable.\n      // Everything else in the universe uses 'utf8', though.\n      this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n      // the number of writers that are awaiting a drain event in .pipe()s\n      this.awaitDrain = 0;\n\n      // if true, a maybeReadMore has been scheduled\n      this.readingMore = false;\n      this.decoder = null;\n      this.encoding = null;\n      if (options.encoding) {\n        if (!StringDecoder) StringDecoder = __webpack_require__(32).StringDecoder;\n        this.decoder = new StringDecoder(options.encoding);\n        this.encoding = options.encoding;\n      }\n    }\n    function Readable(options) {\n      Duplex = Duplex || __webpack_require__(11);\n      if (!(this instanceof Readable)) return new Readable(options);\n      this._readableState = new ReadableState(options, this);\n\n      // legacy\n      this.readable = true;\n      if (options) {\n        if (typeof options.read === 'function') this._read = options.read;\n        if (typeof options.destroy === 'function') this._destroy = options.destroy;\n      }\n      Stream.call(this);\n    }\n    Object.defineProperty(Readable.prototype, 'destroyed', {\n      get: function get() {\n        if (this._readableState === undefined) {\n          return false;\n        }\n        return this._readableState.destroyed;\n      },\n      set: function set(value) {\n        // we ignore the value if the stream\n        // has not been initialized yet\n        if (!this._readableState) {\n          return;\n        }\n\n        // backward compatibility, the user is explicitly\n        // managing destroyed\n        this._readableState.destroyed = value;\n      }\n    });\n    Readable.prototype.destroy = destroyImpl.destroy;\n    Readable.prototype._undestroy = destroyImpl.undestroy;\n    Readable.prototype._destroy = function (err, cb) {\n      this.push(null);\n      cb(err);\n    };\n\n    // Manually shove something into the read() buffer.\n    // This returns true if the highWaterMark has not been hit yet,\n    // similar to how Writable.write() returns true if you should\n    // write() some more.\n    Readable.prototype.push = function (chunk, encoding) {\n      var state = this._readableState;\n      var skipChunkCheck;\n      if (!state.objectMode) {\n        if (typeof chunk === 'string') {\n          encoding = encoding || state.defaultEncoding;\n          if (encoding !== state.encoding) {\n            chunk = Buffer.from(chunk, encoding);\n            encoding = '';\n          }\n          skipChunkCheck = true;\n        }\n      } else {\n        skipChunkCheck = true;\n      }\n      return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n    };\n\n    // Unshift should *always* be something directly out of read()\n    Readable.prototype.unshift = function (chunk) {\n      return readableAddChunk(this, chunk, null, true, false);\n    };\n    function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n      var state = stream._readableState;\n      if (chunk === null) {\n        state.reading = false;\n        onEofChunk(stream, state);\n      } else {\n        var er;\n        if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n        if (er) {\n          stream.emit('error', er);\n        } else if (state.objectMode || chunk && chunk.length > 0) {\n          if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n            chunk = _uint8ArrayToBuffer(chunk);\n          }\n          if (addToFront) {\n            if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n          } else if (state.ended) {\n            stream.emit('error', new Error('stream.push() after EOF'));\n          } else {\n            state.reading = false;\n            if (state.decoder && !encoding) {\n              chunk = state.decoder.write(chunk);\n              if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n            } else {\n              addChunk(stream, state, chunk, false);\n            }\n          }\n        } else if (!addToFront) {\n          state.reading = false;\n        }\n      }\n      return needMoreData(state);\n    }\n    function addChunk(stream, state, chunk, addToFront) {\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n        if (state.needReadable) emitReadable(stream);\n      }\n      maybeReadMore(stream, state);\n    }\n    function chunkInvalid(state, chunk) {\n      var er;\n      if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n        er = new TypeError('Invalid non-string/buffer chunk');\n      }\n      return er;\n    }\n\n    // if it's past the high water mark, we can push in some more.\n    // Also, if we have no data yet, we can stand some\n    // more bytes.  This is to work around cases where hwm=0,\n    // such as the repl.  Also, if the push() triggered a\n    // readable event, and the user called read(largeNumber) such that\n    // needReadable was set, then we ought to push more, so that another\n    // 'readable' event will be triggered.\n    function needMoreData(state) {\n      return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n    }\n    Readable.prototype.isPaused = function () {\n      return this._readableState.flowing === false;\n    };\n\n    // backwards compatibility.\n    Readable.prototype.setEncoding = function (enc) {\n      if (!StringDecoder) StringDecoder = __webpack_require__(32).StringDecoder;\n      this._readableState.decoder = new StringDecoder(enc);\n      this._readableState.encoding = enc;\n      return this;\n    };\n\n    // Don't raise the hwm > 8MB\n    var MAX_HWM = 0x800000;\n    function computeNewHighWaterMark(n) {\n      if (n >= MAX_HWM) {\n        n = MAX_HWM;\n      } else {\n        // Get the next highest power of 2 to prevent increasing hwm excessively in\n        // tiny amounts\n        n--;\n        n |= n >>> 1;\n        n |= n >>> 2;\n        n |= n >>> 4;\n        n |= n >>> 8;\n        n |= n >>> 16;\n        n++;\n      }\n      return n;\n    }\n\n    // This function is designed to be inlinable, so please take care when making\n    // changes to the function body.\n    function howMuchToRead(n, state) {\n      if (n <= 0 || state.length === 0 && state.ended) return 0;\n      if (state.objectMode) return 1;\n      if (n !== n) {\n        // Only flow one buffer at a time\n        if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n      }\n      // If we're asking for more than the current hwm, then raise the hwm.\n      if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n      if (n <= state.length) return n;\n      // Don't have enough\n      if (!state.ended) {\n        state.needReadable = true;\n        return 0;\n      }\n      return state.length;\n    }\n\n    // you can override either this method, or the async _read(n) below.\n    Readable.prototype.read = function (n) {\n      debug('read', n);\n      n = parseInt(n, 10);\n      var state = this._readableState;\n      var nOrig = n;\n      if (n !== 0) state.emittedReadable = false;\n\n      // if we're doing read(0) to trigger a readable event, but we\n      // already have a bunch of data in the buffer, then just trigger\n      // the 'readable' event and move on.\n      if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n        debug('read: emitReadable', state.length, state.ended);\n        if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n        return null;\n      }\n      n = howMuchToRead(n, state);\n\n      // if we've ended, and we're now clear, then finish it up.\n      if (n === 0 && state.ended) {\n        if (state.length === 0) endReadable(this);\n        return null;\n      }\n\n      // All the actual chunk generation logic needs to be\n      // *below* the call to _read.  The reason is that in certain\n      // synthetic stream cases, such as passthrough streams, _read\n      // may be a completely synchronous operation which may change\n      // the state of the read buffer, providing enough data when\n      // before there was *not* enough.\n      //\n      // So, the steps are:\n      // 1. Figure out what the state of things will be after we do\n      // a read from the buffer.\n      //\n      // 2. If that resulting state will trigger a _read, then call _read.\n      // Note that this may be asynchronous, or synchronous.  Yes, it is\n      // deeply ugly to write APIs this way, but that still doesn't mean\n      // that the Readable class should behave improperly, as streams are\n      // designed to be sync/async agnostic.\n      // Take note if the _read call is sync or async (ie, if the read call\n      // has returned yet), so that we know whether or not it's safe to emit\n      // 'readable' etc.\n      //\n      // 3. Actually pull the requested chunks out of the buffer and return.\n\n      // if we need a readable event, then we need to do some reading.\n      var doRead = state.needReadable;\n      debug('need readable', doRead);\n\n      // if we currently have less than the highWaterMark, then also read some\n      if (state.length === 0 || state.length - n < state.highWaterMark) {\n        doRead = true;\n        debug('length less than watermark', doRead);\n      }\n\n      // however, if we've ended, then there's no point, and if we're already\n      // reading, then it's unnecessary.\n      if (state.ended || state.reading) {\n        doRead = false;\n        debug('reading or ended', doRead);\n      } else if (doRead) {\n        debug('do read');\n        state.reading = true;\n        state.sync = true;\n        // if the length is currently zero, then we *need* a readable event.\n        if (state.length === 0) state.needReadable = true;\n        // call internal read method\n        this._read(state.highWaterMark);\n        state.sync = false;\n        // If _read pushed data synchronously, then `reading` will be false,\n        // and we need to re-evaluate how much data we can return to the user.\n        if (!state.reading) n = howMuchToRead(nOrig, state);\n      }\n      var ret;\n      if (n > 0) ret = fromList(n, state);else ret = null;\n      if (ret === null) {\n        state.needReadable = true;\n        n = 0;\n      } else {\n        state.length -= n;\n      }\n      if (state.length === 0) {\n        // If we have nothing in the buffer, then we want to know\n        // as soon as we *do* get something into the buffer.\n        if (!state.ended) state.needReadable = true;\n\n        // If we tried to read() past the EOF, then emit end on the next tick.\n        if (nOrig !== n && state.ended) endReadable(this);\n      }\n      if (ret !== null) this.emit('data', ret);\n      return ret;\n    };\n    function onEofChunk(stream, state) {\n      if (state.ended) return;\n      if (state.decoder) {\n        var chunk = state.decoder.end();\n        if (chunk && chunk.length) {\n          state.buffer.push(chunk);\n          state.length += state.objectMode ? 1 : chunk.length;\n        }\n      }\n      state.ended = true;\n\n      // emit 'readable' now to make sure it gets picked up.\n      emitReadable(stream);\n    }\n\n    // Don't emit readable right away in sync mode, because this can trigger\n    // another read() call => stack overflow.  This way, it might trigger\n    // a nextTick recursion warning, but that's not so bad.\n    function emitReadable(stream) {\n      var state = stream._readableState;\n      state.needReadable = false;\n      if (!state.emittedReadable) {\n        debug('emitReadable', state.flowing);\n        state.emittedReadable = true;\n        if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n      }\n    }\n    function emitReadable_(stream) {\n      debug('emit readable');\n      stream.emit('readable');\n      flow(stream);\n    }\n\n    // at this point, the user has presumably seen the 'readable' event,\n    // and called read() to consume some data.  that may have triggered\n    // in turn another _read(n) call, in which case reading = true if\n    // it's in progress.\n    // However, if we're not ended, or reading, and the length < hwm,\n    // then go ahead and try to read some more preemptively.\n    function maybeReadMore(stream, state) {\n      if (!state.readingMore) {\n        state.readingMore = true;\n        pna.nextTick(maybeReadMore_, stream, state);\n      }\n    }\n    function maybeReadMore_(stream, state) {\n      var len = state.length;\n      while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n        debug('maybeReadMore read 0');\n        stream.read(0);\n        if (len === state.length)\n          // didn't get any data, stop spinning.\n          break;else len = state.length;\n      }\n      state.readingMore = false;\n    }\n\n    // abstract method.  to be overridden in specific implementation classes.\n    // call cb(er, data) where data is <= n in length.\n    // for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n    // arbitrary, and perhaps not very meaningful.\n    Readable.prototype._read = function (n) {\n      this.emit('error', new Error('_read() is not implemented'));\n    };\n    Readable.prototype.pipe = function (dest, pipeOpts) {\n      var src = this;\n      var state = this._readableState;\n      switch (state.pipesCount) {\n        case 0:\n          state.pipes = dest;\n          break;\n        case 1:\n          state.pipes = [state.pipes, dest];\n          break;\n        default:\n          state.pipes.push(dest);\n          break;\n      }\n      state.pipesCount += 1;\n      debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n      var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n      var endFn = doEnd ? onend : unpipe;\n      if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n      dest.on('unpipe', onunpipe);\n      function onunpipe(readable, unpipeInfo) {\n        debug('onunpipe');\n        if (readable === src) {\n          if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n            unpipeInfo.hasUnpiped = true;\n            cleanup();\n          }\n        }\n      }\n      function onend() {\n        debug('onend');\n        dest.end();\n      }\n\n      // when the dest drains, it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow(), but adding and removing repeatedly is\n      // too slow.\n      var ondrain = pipeOnDrain(src);\n      dest.on('drain', ondrain);\n      var cleanedUp = false;\n      function cleanup() {\n        debug('cleanup');\n        // cleanup event handlers once the pipe is broken\n        dest.removeListener('close', onclose);\n        dest.removeListener('finish', onfinish);\n        dest.removeListener('drain', ondrain);\n        dest.removeListener('error', onerror);\n        dest.removeListener('unpipe', onunpipe);\n        src.removeListener('end', onend);\n        src.removeListener('end', unpipe);\n        src.removeListener('data', ondata);\n        cleanedUp = true;\n\n        // if the reader is waiting for a drain event from this\n        // specific writer, then it would cause it to never start\n        // flowing again.\n        // So, if this is awaiting a drain, then we just call it now.\n        // If we don't know, then assume that we are waiting for one.\n        if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n      }\n\n      // If the user pushes more data while we're writing to dest then we'll end up\n      // in ondata again. However, we only want to increase awaitDrain once because\n      // dest will only emit one 'drain' event for the multiple writes.\n      // => Introduce a guard on increasing awaitDrain.\n      var increasedAwaitDrain = false;\n      src.on('data', ondata);\n      function ondata(chunk) {\n        debug('ondata');\n        increasedAwaitDrain = false;\n        var ret = dest.write(chunk);\n        if (false === ret && !increasedAwaitDrain) {\n          // If the user unpiped during `dest.write()`, it is possible\n          // to get stuck in a permanently paused state if that write\n          // also returned false.\n          // => Check whether `dest` is still a piping destination.\n          if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n            debug('false write response, pause', src._readableState.awaitDrain);\n            src._readableState.awaitDrain++;\n            increasedAwaitDrain = true;\n          }\n          src.pause();\n        }\n      }\n\n      // if the dest has an error, then stop piping into it.\n      // however, don't suppress the throwing behavior for this.\n      function onerror(er) {\n        debug('onerror', er);\n        unpipe();\n        dest.removeListener('error', onerror);\n        if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n      }\n\n      // Make sure our error handler is attached before userland ones.\n      prependListener(dest, 'error', onerror);\n\n      // Both close and finish should trigger unpipe, but only once.\n      function onclose() {\n        dest.removeListener('finish', onfinish);\n        unpipe();\n      }\n      dest.once('close', onclose);\n      function onfinish() {\n        debug('onfinish');\n        dest.removeListener('close', onclose);\n        unpipe();\n      }\n      dest.once('finish', onfinish);\n      function unpipe() {\n        debug('unpipe');\n        src.unpipe(dest);\n      }\n\n      // tell the dest that it's being piped to\n      dest.emit('pipe', src);\n\n      // start the flow if it hasn't been started already.\n      if (!state.flowing) {\n        debug('pipe resume');\n        src.resume();\n      }\n      return dest;\n    };\n    function pipeOnDrain(src) {\n      return function () {\n        var state = src._readableState;\n        debug('pipeOnDrain', state.awaitDrain);\n        if (state.awaitDrain) state.awaitDrain--;\n        if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n          state.flowing = true;\n          flow(src);\n        }\n      };\n    }\n    Readable.prototype.unpipe = function (dest) {\n      var state = this._readableState;\n      var unpipeInfo = {\n        hasUnpiped: false\n      };\n\n      // if we're not piping anywhere, then do nothing.\n      if (state.pipesCount === 0) return this;\n\n      // just one destination.  most common case.\n      if (state.pipesCount === 1) {\n        // passed in one, but it's not the right one.\n        if (dest && dest !== state.pipes) return this;\n        if (!dest) dest = state.pipes;\n\n        // got a match.\n        state.pipes = null;\n        state.pipesCount = 0;\n        state.flowing = false;\n        if (dest) dest.emit('unpipe', this, unpipeInfo);\n        return this;\n      }\n\n      // slow case. multiple pipe destinations.\n\n      if (!dest) {\n        // remove all.\n        var dests = state.pipes;\n        var len = state.pipesCount;\n        state.pipes = null;\n        state.pipesCount = 0;\n        state.flowing = false;\n        for (var i = 0; i < len; i++) {\n          dests[i].emit('unpipe', this, unpipeInfo);\n        }\n        return this;\n      }\n\n      // try to find the right one.\n      var index = indexOf(state.pipes, dest);\n      if (index === -1) return this;\n      state.pipes.splice(index, 1);\n      state.pipesCount -= 1;\n      if (state.pipesCount === 1) state.pipes = state.pipes[0];\n      dest.emit('unpipe', this, unpipeInfo);\n      return this;\n    };\n\n    // set up data events if they are asked for\n    // Ensure readable listeners eventually get something\n    Readable.prototype.on = function (ev, fn) {\n      var res = Stream.prototype.on.call(this, ev, fn);\n      if (ev === 'data') {\n        // Start flowing on next tick if stream isn't explicitly paused\n        if (this._readableState.flowing !== false) this.resume();\n      } else if (ev === 'readable') {\n        var state = this._readableState;\n        if (!state.endEmitted && !state.readableListening) {\n          state.readableListening = state.needReadable = true;\n          state.emittedReadable = false;\n          if (!state.reading) {\n            pna.nextTick(nReadingNextTick, this);\n          } else if (state.length) {\n            emitReadable(this);\n          }\n        }\n      }\n      return res;\n    };\n    Readable.prototype.addListener = Readable.prototype.on;\n    function nReadingNextTick(self) {\n      debug('readable nexttick read 0');\n      self.read(0);\n    }\n\n    // pause() and resume() are remnants of the legacy readable stream API\n    // If the user uses them, then switch into old mode.\n    Readable.prototype.resume = function () {\n      var state = this._readableState;\n      if (!state.flowing) {\n        debug('resume');\n        state.flowing = true;\n        resume(this, state);\n      }\n      return this;\n    };\n    function resume(stream, state) {\n      if (!state.resumeScheduled) {\n        state.resumeScheduled = true;\n        pna.nextTick(resume_, stream, state);\n      }\n    }\n    function resume_(stream, state) {\n      if (!state.reading) {\n        debug('resume read 0');\n        stream.read(0);\n      }\n      state.resumeScheduled = false;\n      state.awaitDrain = 0;\n      stream.emit('resume');\n      flow(stream);\n      if (state.flowing && !state.reading) stream.read(0);\n    }\n    Readable.prototype.pause = function () {\n      debug('call pause flowing=%j', this._readableState.flowing);\n      if (false !== this._readableState.flowing) {\n        debug('pause');\n        this._readableState.flowing = false;\n        this.emit('pause');\n      }\n      return this;\n    };\n    function flow(stream) {\n      var state = stream._readableState;\n      debug('flow', state.flowing);\n      while (state.flowing && stream.read() !== null) {}\n    }\n\n    // wrap an old-style stream as the async data source.\n    // This is *not* part of the readable stream interface.\n    // It is an ugly unfortunate mess of history.\n    Readable.prototype.wrap = function (stream) {\n      var _this = this;\n      var state = this._readableState;\n      var paused = false;\n      stream.on('end', function () {\n        debug('wrapped end');\n        if (state.decoder && !state.ended) {\n          var chunk = state.decoder.end();\n          if (chunk && chunk.length) _this.push(chunk);\n        }\n        _this.push(null);\n      });\n      stream.on('data', function (chunk) {\n        debug('wrapped data');\n        if (state.decoder) chunk = state.decoder.write(chunk);\n\n        // don't skip over falsy values in objectMode\n        if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n        var ret = _this.push(chunk);\n        if (!ret) {\n          paused = true;\n          stream.pause();\n        }\n      });\n\n      // proxy all the other methods.\n      // important when wrapping filters and duplexes.\n      for (var i in stream) {\n        if (this[i] === undefined && typeof stream[i] === 'function') {\n          this[i] = function (method) {\n            return function () {\n              return stream[method].apply(stream, arguments);\n            };\n          }(i);\n        }\n      }\n\n      // proxy certain important events.\n      for (var n = 0; n < kProxyEvents.length; n++) {\n        stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n      }\n\n      // when we try to consume some more bytes, simply unpause the\n      // underlying stream.\n      this._read = function (n) {\n        debug('wrapped _read', n);\n        if (paused) {\n          paused = false;\n          stream.resume();\n        }\n      };\n      return this;\n    };\n    Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n      // making it explicit this property is not enumerable\n      // because otherwise some prototype manipulation in\n      // userland will fail\n      enumerable: false,\n      get: function get() {\n        return this._readableState.highWaterMark;\n      }\n    });\n\n    // exposed for testing purposes only.\n    Readable._fromList = fromList;\n\n    // Pluck off n bytes from an array of buffers.\n    // Length is the combined lengths of all the buffers in the list.\n    // This function is designed to be inlinable, so please take care when making\n    // changes to the function body.\n    function fromList(n, state) {\n      // nothing buffered\n      if (state.length === 0) return null;\n      var ret;\n      if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n        // read it all, truncate the list\n        if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n        state.buffer.clear();\n      } else {\n        // read part of list\n        ret = fromListPartial(n, state.buffer, state.decoder);\n      }\n      return ret;\n    }\n\n    // Extracts only enough buffered data to satisfy the amount requested.\n    // This function is designed to be inlinable, so please take care when making\n    // changes to the function body.\n    function fromListPartial(n, list, hasStrings) {\n      var ret;\n      if (n < list.head.data.length) {\n        // slice is the same for buffers and strings\n        ret = list.head.data.slice(0, n);\n        list.head.data = list.head.data.slice(n);\n      } else if (n === list.head.data.length) {\n        // first chunk is a perfect match\n        ret = list.shift();\n      } else {\n        // result spans more than one buffer\n        ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n      }\n      return ret;\n    }\n\n    // Copies a specified amount of characters from the list of buffered data\n    // chunks.\n    // This function is designed to be inlinable, so please take care when making\n    // changes to the function body.\n    function copyFromBufferString(n, list) {\n      var p = list.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) list.head = p.next;else list.head = list.tail = null;\n          } else {\n            list.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      list.length -= c;\n      return ret;\n    }\n\n    // Copies a specified amount of bytes from the list of buffered data chunks.\n    // This function is designed to be inlinable, so please take care when making\n    // changes to the function body.\n    function copyFromBuffer(n, list) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = list.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) list.head = p.next;else list.head = list.tail = null;\n          } else {\n            list.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      list.length -= c;\n      return ret;\n    }\n    function endReadable(stream) {\n      var state = stream._readableState;\n\n      // If we get here before consuming all the bytes, then that is a\n      // bug in node.  Should never happen.\n      if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n      if (!state.endEmitted) {\n        state.ended = true;\n        pna.nextTick(endReadableNT, state, stream);\n      }\n    }\n    function endReadableNT(state, stream) {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    }\n    function indexOf(xs, x) {\n      for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) return i;\n      }\n      return -1;\n    }\n    /* WEBPACK VAR INJECTION */\n  }).call(this, __webpack_require__(13), __webpack_require__(19));\n\n  /***/\n}, /* 28 */\n/***/function (module, exports) {\n  var toString = {}.toString;\n  module.exports = Array.isArray || function (arr) {\n    return toString.call(arr) == '[object Array]';\n  };\n\n  /***/\n}, /* 29 */\n/***/function (module, exports, __webpack_require__) {\n  module.exports = __webpack_require__(17).EventEmitter;\n\n  /***/\n}, /* 30 */\n/***/function (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  /* WEBPACK VAR INJECTION */\n  (function (global) {\n    /*!\n    * The buffer module from node.js, for the browser.\n    *\n    * @author   Feross Aboukhadijeh <http://feross.org>\n    * @license  MIT\n    */\n    /* eslint-disable no-proto */\n\n    var base64 = __webpack_require__(44);\n    var ieee754 = __webpack_require__(45);\n    var isArray = __webpack_require__(28);\n    exports.Buffer = Buffer;\n    exports.SlowBuffer = SlowBuffer;\n    exports.INSPECT_MAX_BYTES = 50;\n\n    /**\n     * If `Buffer.TYPED_ARRAY_SUPPORT`:\n     *   === true    Use Uint8Array implementation (fastest)\n     *   === false   Use Object implementation (most compatible, even IE6)\n     *\n     * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n     * Opera 11.6+, iOS 4.2+.\n     *\n     * Due to various browser bugs, sometimes the Object implementation will be used even\n     * when the browser supports typed arrays.\n     *\n     * Note:\n     *\n     *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n     *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n     *\n     *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n     *\n     *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n     *     incorrect length in some situations.\n    \n     * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n     * get the Object implementation, which is slower but behaves correctly.\n     */\n    Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n\n    /*\n     * Export kMaxLength after typed array support is determined.\n     */\n    exports.kMaxLength = kMaxLength();\n    function typedArraySupport() {\n      try {\n        var arr = new Uint8Array(1);\n        arr.__proto__ = {\n          __proto__: Uint8Array.prototype,\n          foo: function foo() {\n            return 42;\n          }\n        };\n        return arr.foo() === 42 &&\n        // typed array instances can be augmented\n        typeof arr.subarray === 'function' &&\n        // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n      } catch (e) {\n        return false;\n      }\n    }\n    function kMaxLength() {\n      return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n    }\n    function createBuffer(that, length) {\n      if (kMaxLength() < length) {\n        throw new RangeError('Invalid typed array length');\n      }\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        that = new Uint8Array(length);\n        that.__proto__ = Buffer.prototype;\n      } else {\n        // Fallback: Return an object instance of the Buffer class\n        if (that === null) {\n          that = new Buffer(length);\n        }\n        that.length = length;\n      }\n      return that;\n    }\n\n    /**\n     * The Buffer constructor returns instances of `Uint8Array` that have their\n     * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n     * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n     * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n     * returns a single octet.\n     *\n     * The `Uint8Array` prototype remains unmodified.\n     */\n\n    function Buffer(arg, encodingOrOffset, length) {\n      if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n        return new Buffer(arg, encodingOrOffset, length);\n      }\n\n      // Common case.\n      if (typeof arg === 'number') {\n        if (typeof encodingOrOffset === 'string') {\n          throw new Error('If encoding is specified then the first argument must be a string');\n        }\n        return allocUnsafe(this, arg);\n      }\n      return from(this, arg, encodingOrOffset, length);\n    }\n    Buffer.poolSize = 8192; // not used by this implementation\n\n    // TODO: Legacy, not needed anymore. Remove in next major version.\n    Buffer._augment = function (arr) {\n      arr.__proto__ = Buffer.prototype;\n      return arr;\n    };\n    function from(that, value, encodingOrOffset, length) {\n      if (typeof value === 'number') {\n        throw new TypeError('\"value\" argument must not be a number');\n      }\n      if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n        return fromArrayBuffer(that, value, encodingOrOffset, length);\n      }\n      if (typeof value === 'string') {\n        return fromString(that, value, encodingOrOffset);\n      }\n      return fromObject(that, value);\n    }\n\n    /**\n     * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n     * if value is a number.\n     * Buffer.from(str[, encoding])\n     * Buffer.from(array)\n     * Buffer.from(buffer)\n     * Buffer.from(arrayBuffer[, byteOffset[, length]])\n     **/\n    Buffer.from = function (value, encodingOrOffset, length) {\n      return from(null, value, encodingOrOffset, length);\n    };\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      Buffer.prototype.__proto__ = Uint8Array.prototype;\n      Buffer.__proto__ = Uint8Array;\n      if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n        // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n        Object.defineProperty(Buffer, Symbol.species, {\n          value: null,\n          configurable: true\n        });\n      }\n    }\n    function assertSize(size) {\n      if (typeof size !== 'number') {\n        throw new TypeError('\"size\" argument must be a number');\n      } else if (size < 0) {\n        throw new RangeError('\"size\" argument must not be negative');\n      }\n    }\n    function alloc(that, size, fill, encoding) {\n      assertSize(size);\n      if (size <= 0) {\n        return createBuffer(that, size);\n      }\n      if (fill !== undefined) {\n        // Only pay attention to encoding if it's a string. This\n        // prevents accidentally sending in a number that would\n        // be interpretted as a start offset.\n        return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n      }\n      return createBuffer(that, size);\n    }\n\n    /**\n     * Creates a new filled Buffer instance.\n     * alloc(size[, fill[, encoding]])\n     **/\n    Buffer.alloc = function (size, fill, encoding) {\n      return alloc(null, size, fill, encoding);\n    };\n    function allocUnsafe(that, size) {\n      assertSize(size);\n      that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n      if (!Buffer.TYPED_ARRAY_SUPPORT) {\n        for (var i = 0; i < size; ++i) {\n          that[i] = 0;\n        }\n      }\n      return that;\n    }\n\n    /**\n     * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n     * */\n    Buffer.allocUnsafe = function (size) {\n      return allocUnsafe(null, size);\n    };\n    /**\n     * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n     */\n    Buffer.allocUnsafeSlow = function (size) {\n      return allocUnsafe(null, size);\n    };\n    function fromString(that, string, encoding) {\n      if (typeof encoding !== 'string' || encoding === '') {\n        encoding = 'utf8';\n      }\n      if (!Buffer.isEncoding(encoding)) {\n        throw new TypeError('\"encoding\" must be a valid string encoding');\n      }\n      var length = byteLength(string, encoding) | 0;\n      that = createBuffer(that, length);\n      var actual = that.write(string, encoding);\n      if (actual !== length) {\n        // Writing a hex string, for example, that contains invalid characters will\n        // cause everything after the first invalid character to be ignored. (e.g.\n        // 'abxxcd' will be treated as 'ab')\n        that = that.slice(0, actual);\n      }\n      return that;\n    }\n    function fromArrayLike(that, array) {\n      var length = array.length < 0 ? 0 : checked(array.length) | 0;\n      that = createBuffer(that, length);\n      for (var i = 0; i < length; i += 1) {\n        that[i] = array[i] & 255;\n      }\n      return that;\n    }\n    function fromArrayBuffer(that, array, byteOffset, length) {\n      array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n      if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError('\\'offset\\' is out of bounds');\n      }\n      if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError('\\'length\\' is out of bounds');\n      }\n      if (byteOffset === undefined && length === undefined) {\n        array = new Uint8Array(array);\n      } else if (length === undefined) {\n        array = new Uint8Array(array, byteOffset);\n      } else {\n        array = new Uint8Array(array, byteOffset, length);\n      }\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        that = array;\n        that.__proto__ = Buffer.prototype;\n      } else {\n        // Fallback: Return an object instance of the Buffer class\n        that = fromArrayLike(that, array);\n      }\n      return that;\n    }\n    function fromObject(that, obj) {\n      if (Buffer.isBuffer(obj)) {\n        var len = checked(obj.length) | 0;\n        that = createBuffer(that, len);\n        if (that.length === 0) {\n          return that;\n        }\n        obj.copy(that, 0, 0, len);\n        return that;\n      }\n      if (obj) {\n        if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n          if (typeof obj.length !== 'number' || isnan(obj.length)) {\n            return createBuffer(that, 0);\n          }\n          return fromArrayLike(that, obj);\n        }\n        if (obj.type === 'Buffer' && isArray(obj.data)) {\n          return fromArrayLike(that, obj.data);\n        }\n      }\n      throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n    }\n    function checked(length) {\n      // Note: cannot use `length < kMaxLength()` here because that fails when\n      // length is NaN (which is otherwise coerced to zero.)\n      if (length >= kMaxLength()) {\n        throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n      }\n      return length | 0;\n    }\n    function SlowBuffer(length) {\n      if (+length != length) {\n        // eslint-disable-line eqeqeq\n        length = 0;\n      }\n      return Buffer.alloc(+length);\n    }\n    Buffer.isBuffer = function isBuffer(b) {\n      return !!(b != null && b._isBuffer);\n    };\n    Buffer.compare = function compare(a, b) {\n      if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n        throw new TypeError('Arguments must be Buffers');\n      }\n      if (a === b) return 0;\n      var x = a.length;\n      var y = b.length;\n      for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n        if (a[i] !== b[i]) {\n          x = a[i];\n          y = b[i];\n          break;\n        }\n      }\n      if (x < y) return -1;\n      if (y < x) return 1;\n      return 0;\n    };\n    Buffer.isEncoding = function isEncoding(encoding) {\n      switch (String(encoding).toLowerCase()) {\n        case 'hex':\n        case 'utf8':\n        case 'utf-8':\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n        case 'base64':\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return true;\n        default:\n          return false;\n      }\n    };\n    Buffer.concat = function concat(list, length) {\n      if (!isArray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      }\n      if (list.length === 0) {\n        return Buffer.alloc(0);\n      }\n      var i;\n      if (length === undefined) {\n        length = 0;\n        for (i = 0; i < list.length; ++i) {\n          length += list[i].length;\n        }\n      }\n      var buffer = Buffer.allocUnsafe(length);\n      var pos = 0;\n      for (i = 0; i < list.length; ++i) {\n        var buf = list[i];\n        if (!Buffer.isBuffer(buf)) {\n          throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n        buf.copy(buffer, pos);\n        pos += buf.length;\n      }\n      return buffer;\n    };\n    function byteLength(string, encoding) {\n      if (Buffer.isBuffer(string)) {\n        return string.length;\n      }\n      if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n        return string.byteLength;\n      }\n      if (typeof string !== 'string') {\n        string = '' + string;\n      }\n      var len = string.length;\n      if (len === 0) return 0;\n\n      // Use a for loop to avoid recursion\n      var loweredCase = false;\n      for (;;) {\n        switch (encoding) {\n          case 'ascii':\n          case 'latin1':\n          case 'binary':\n            return len;\n          case 'utf8':\n          case 'utf-8':\n          case undefined:\n            return utf8ToBytes(string).length;\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return len * 2;\n          case 'hex':\n            return len >>> 1;\n          case 'base64':\n            return base64ToBytes(string).length;\n          default:\n            if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n    Buffer.byteLength = byteLength;\n    function slowToString(encoding, start, end) {\n      var loweredCase = false;\n\n      // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n      // property of a typed array.\n\n      // This behaves neither like String nor Uint8Array in that we set start/end\n      // to their upper/lower bounds if the value passed is out of range.\n      // undefined is handled specially as per ECMA-262 6th Edition,\n      // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n      if (start === undefined || start < 0) {\n        start = 0;\n      }\n      // Return early if start > this.length. Done here to prevent potential uint32\n      // coercion fail below.\n      if (start > this.length) {\n        return '';\n      }\n      if (end === undefined || end > this.length) {\n        end = this.length;\n      }\n      if (end <= 0) {\n        return '';\n      }\n\n      // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n      end >>>= 0;\n      start >>>= 0;\n      if (end <= start) {\n        return '';\n      }\n      if (!encoding) encoding = 'utf8';\n      while (true) {\n        switch (encoding) {\n          case 'hex':\n            return hexSlice(this, start, end);\n          case 'utf8':\n          case 'utf-8':\n            return utf8Slice(this, start, end);\n          case 'ascii':\n            return asciiSlice(this, start, end);\n          case 'latin1':\n          case 'binary':\n            return latin1Slice(this, start, end);\n          case 'base64':\n            return base64Slice(this, start, end);\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return utf16leSlice(this, start, end);\n          default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = (encoding + '').toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n\n    // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n    // Buffer instances.\n    Buffer.prototype._isBuffer = true;\n    function swap(b, n, m) {\n      var i = b[n];\n      b[n] = b[m];\n      b[m] = i;\n    }\n    Buffer.prototype.swap16 = function swap16() {\n      var len = this.length;\n      if (len % 2 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 16-bits');\n      }\n      for (var i = 0; i < len; i += 2) {\n        swap(this, i, i + 1);\n      }\n      return this;\n    };\n    Buffer.prototype.swap32 = function swap32() {\n      var len = this.length;\n      if (len % 4 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 32-bits');\n      }\n      for (var i = 0; i < len; i += 4) {\n        swap(this, i, i + 3);\n        swap(this, i + 1, i + 2);\n      }\n      return this;\n    };\n    Buffer.prototype.swap64 = function swap64() {\n      var len = this.length;\n      if (len % 8 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 64-bits');\n      }\n      for (var i = 0; i < len; i += 8) {\n        swap(this, i, i + 7);\n        swap(this, i + 1, i + 6);\n        swap(this, i + 2, i + 5);\n        swap(this, i + 3, i + 4);\n      }\n      return this;\n    };\n    Buffer.prototype.toString = function toString() {\n      var length = this.length | 0;\n      if (length === 0) return '';\n      if (arguments.length === 0) return utf8Slice(this, 0, length);\n      return slowToString.apply(this, arguments);\n    };\n    Buffer.prototype.equals = function equals(b) {\n      if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n      if (this === b) return true;\n      return Buffer.compare(this, b) === 0;\n    };\n    Buffer.prototype.inspect = function inspect() {\n      var str = '';\n      var max = exports.INSPECT_MAX_BYTES;\n      if (this.length > 0) {\n        str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n        if (this.length > max) str += ' ... ';\n      }\n      return '<Buffer ' + str + '>';\n    };\n    Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n      if (!Buffer.isBuffer(target)) {\n        throw new TypeError('Argument must be a Buffer');\n      }\n      if (start === undefined) {\n        start = 0;\n      }\n      if (end === undefined) {\n        end = target ? target.length : 0;\n      }\n      if (thisStart === undefined) {\n        thisStart = 0;\n      }\n      if (thisEnd === undefined) {\n        thisEnd = this.length;\n      }\n      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n        throw new RangeError('out of range index');\n      }\n      if (thisStart >= thisEnd && start >= end) {\n        return 0;\n      }\n      if (thisStart >= thisEnd) {\n        return -1;\n      }\n      if (start >= end) {\n        return 1;\n      }\n      start >>>= 0;\n      end >>>= 0;\n      thisStart >>>= 0;\n      thisEnd >>>= 0;\n      if (this === target) return 0;\n      var x = thisEnd - thisStart;\n      var y = end - start;\n      var len = Math.min(x, y);\n      var thisCopy = this.slice(thisStart, thisEnd);\n      var targetCopy = target.slice(start, end);\n      for (var i = 0; i < len; ++i) {\n        if (thisCopy[i] !== targetCopy[i]) {\n          x = thisCopy[i];\n          y = targetCopy[i];\n          break;\n        }\n      }\n      if (x < y) return -1;\n      if (y < x) return 1;\n      return 0;\n    };\n\n    // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n    // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n    //\n    // Arguments:\n    // - buffer - a Buffer to search\n    // - val - a string, Buffer, or number\n    // - byteOffset - an index into `buffer`; will be clamped to an int32\n    // - encoding - an optional encoding, relevant is val is a string\n    // - dir - true for indexOf, false for lastIndexOf\n    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n      // Empty buffer means no match\n      if (buffer.length === 0) return -1;\n\n      // Normalize byteOffset\n      if (typeof byteOffset === 'string') {\n        encoding = byteOffset;\n        byteOffset = 0;\n      } else if (byteOffset > 0x7fffffff) {\n        byteOffset = 0x7fffffff;\n      } else if (byteOffset < -0x80000000) {\n        byteOffset = -0x80000000;\n      }\n      byteOffset = +byteOffset; // Coerce to Number.\n      if (isNaN(byteOffset)) {\n        // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n        byteOffset = dir ? 0 : buffer.length - 1;\n      }\n\n      // Normalize byteOffset: negative offsets start from the end of the buffer\n      if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n      if (byteOffset >= buffer.length) {\n        if (dir) return -1;else byteOffset = buffer.length - 1;\n      } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;else return -1;\n      }\n\n      // Normalize val\n      if (typeof val === 'string') {\n        val = Buffer.from(val, encoding);\n      }\n\n      // Finally, search either indexOf (if dir is true) or lastIndexOf\n      if (Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) {\n          return -1;\n        }\n        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n      } else if (typeof val === 'number') {\n        val = val & 0xFF; // Search for a byte value [0-255]\n        if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n          if (dir) {\n            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n          } else {\n            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n          }\n        }\n        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n      }\n      throw new TypeError('val must be string, number or Buffer');\n    }\n    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n      var indexSize = 1;\n      var arrLength = arr.length;\n      var valLength = val.length;\n      if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n          if (arr.length < 2 || val.length < 2) {\n            return -1;\n          }\n          indexSize = 2;\n          arrLength /= 2;\n          valLength /= 2;\n          byteOffset /= 2;\n        }\n      }\n      function read(buf, i) {\n        if (indexSize === 1) {\n          return buf[i];\n        } else {\n          return buf.readUInt16BE(i * indexSize);\n        }\n      }\n      var i;\n      if (dir) {\n        var foundIndex = -1;\n        for (i = byteOffset; i < arrLength; i++) {\n          if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n          } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n          }\n        }\n      } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for (i = byteOffset; i >= 0; i--) {\n          var found = true;\n          for (var j = 0; j < valLength; j++) {\n            if (read(arr, i + j) !== read(val, j)) {\n              found = false;\n              break;\n            }\n          }\n          if (found) return i;\n        }\n      }\n      return -1;\n    }\n    Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n      return this.indexOf(val, byteOffset, encoding) !== -1;\n    };\n    Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n    };\n    Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n    };\n    function hexWrite(buf, string, offset, length) {\n      offset = Number(offset) || 0;\n      var remaining = buf.length - offset;\n      if (!length) {\n        length = remaining;\n      } else {\n        length = Number(length);\n        if (length > remaining) {\n          length = remaining;\n        }\n      }\n\n      // must be an even number of digits\n      var strLen = string.length;\n      if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n      if (length > strLen / 2) {\n        length = strLen / 2;\n      }\n      for (var i = 0; i < length; ++i) {\n        var parsed = parseInt(string.substr(i * 2, 2), 16);\n        if (isNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n      }\n      return i;\n    }\n    function utf8Write(buf, string, offset, length) {\n      return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n    }\n    function asciiWrite(buf, string, offset, length) {\n      return blitBuffer(asciiToBytes(string), buf, offset, length);\n    }\n    function latin1Write(buf, string, offset, length) {\n      return asciiWrite(buf, string, offset, length);\n    }\n    function base64Write(buf, string, offset, length) {\n      return blitBuffer(base64ToBytes(string), buf, offset, length);\n    }\n    function ucs2Write(buf, string, offset, length) {\n      return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n    }\n    Buffer.prototype.write = function write(string, offset, length, encoding) {\n      // Buffer#write(string)\n      if (offset === undefined) {\n        encoding = 'utf8';\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, encoding)\n      } else if (length === undefined && typeof offset === 'string') {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, offset[, length][, encoding])\n      } else if (isFinite(offset)) {\n        offset = offset | 0;\n        if (isFinite(length)) {\n          length = length | 0;\n          if (encoding === undefined) encoding = 'utf8';\n        } else {\n          encoding = length;\n          length = undefined;\n        }\n        // legacy write(string, encoding, offset, length) - remove in v0.13\n      } else {\n        throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n      }\n      var remaining = this.length - offset;\n      if (length === undefined || length > remaining) length = remaining;\n      if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n        throw new RangeError('Attempt to write outside buffer bounds');\n      }\n      if (!encoding) encoding = 'utf8';\n      var loweredCase = false;\n      for (;;) {\n        switch (encoding) {\n          case 'hex':\n            return hexWrite(this, string, offset, length);\n          case 'utf8':\n          case 'utf-8':\n            return utf8Write(this, string, offset, length);\n          case 'ascii':\n            return asciiWrite(this, string, offset, length);\n          case 'latin1':\n          case 'binary':\n            return latin1Write(this, string, offset, length);\n          case 'base64':\n            // Warning: maxLength not taken into account in base64Write\n            return base64Write(this, string, offset, length);\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return ucs2Write(this, string, offset, length);\n          default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    };\n    Buffer.prototype.toJSON = function toJSON() {\n      return {\n        type: 'Buffer',\n        data: Array.prototype.slice.call(this._arr || this, 0)\n      };\n    };\n    function base64Slice(buf, start, end) {\n      if (start === 0 && end === buf.length) {\n        return base64.fromByteArray(buf);\n      } else {\n        return base64.fromByteArray(buf.slice(start, end));\n      }\n    }\n    function utf8Slice(buf, start, end) {\n      end = Math.min(buf.length, end);\n      var res = [];\n      var i = start;\n      while (i < end) {\n        var firstByte = buf[i];\n        var codePoint = null;\n        var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n        if (i + bytesPerSequence <= end) {\n          var secondByte, thirdByte, fourthByte, tempCodePoint;\n          switch (bytesPerSequence) {\n            case 1:\n              if (firstByte < 0x80) {\n                codePoint = firstByte;\n              }\n              break;\n            case 2:\n              secondByte = buf[i + 1];\n              if ((secondByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                if (tempCodePoint > 0x7F) {\n                  codePoint = tempCodePoint;\n                }\n              }\n              break;\n            case 3:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                  codePoint = tempCodePoint;\n                }\n              }\n              break;\n            case 4:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              fourthByte = buf[i + 3];\n              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                  codePoint = tempCodePoint;\n                }\n              }\n          }\n        }\n        if (codePoint === null) {\n          // we did not generate a valid codePoint so insert a\n          // replacement char (U+FFFD) and advance only 1 byte\n          codePoint = 0xFFFD;\n          bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n          // encode to utf16 (surrogate pair dance)\n          codePoint -= 0x10000;\n          res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n          codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n        res.push(codePoint);\n        i += bytesPerSequence;\n      }\n      return decodeCodePointsArray(res);\n    }\n\n    // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n    // the lowest limit is Chrome, with 0x10000 args.\n    // We go 1 magnitude less, for safety\n    var MAX_ARGUMENTS_LENGTH = 0x1000;\n    function decodeCodePointsArray(codePoints) {\n      var len = codePoints.length;\n      if (len <= MAX_ARGUMENTS_LENGTH) {\n        return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n      }\n\n      // Decode in chunks to avoid \"call stack size exceeded\".\n      var res = '';\n      var i = 0;\n      while (i < len) {\n        res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n      }\n      return res;\n    }\n    function asciiSlice(buf, start, end) {\n      var ret = '';\n      end = Math.min(buf.length, end);\n      for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i] & 0x7F);\n      }\n      return ret;\n    }\n    function latin1Slice(buf, start, end) {\n      var ret = '';\n      end = Math.min(buf.length, end);\n      for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i]);\n      }\n      return ret;\n    }\n    function hexSlice(buf, start, end) {\n      var len = buf.length;\n      if (!start || start < 0) start = 0;\n      if (!end || end < 0 || end > len) end = len;\n      var out = '';\n      for (var i = start; i < end; ++i) {\n        out += toHex(buf[i]);\n      }\n      return out;\n    }\n    function utf16leSlice(buf, start, end) {\n      var bytes = buf.slice(start, end);\n      var res = '';\n      for (var i = 0; i < bytes.length; i += 2) {\n        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n      }\n      return res;\n    }\n    Buffer.prototype.slice = function slice(start, end) {\n      var len = this.length;\n      start = ~~start;\n      end = end === undefined ? len : ~~end;\n      if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n      } else if (start > len) {\n        start = len;\n      }\n      if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n      } else if (end > len) {\n        end = len;\n      }\n      if (end < start) end = start;\n      var newBuf;\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        newBuf = this.subarray(start, end);\n        newBuf.__proto__ = Buffer.prototype;\n      } else {\n        var sliceLen = end - start;\n        newBuf = new Buffer(sliceLen, undefined);\n        for (var i = 0; i < sliceLen; ++i) {\n          newBuf[i] = this[i + start];\n        }\n      }\n      return newBuf;\n    };\n\n    /*\n     * Need to make sure that buffer isn't trying to write out of bounds.\n     */\n    function checkOffset(offset, ext, length) {\n      if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n      if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n    }\n    Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n      var val = this[offset];\n      var mul = 1;\n      var i = 0;\n      while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul;\n      }\n      return val;\n    };\n    Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) {\n        checkOffset(offset, byteLength, this.length);\n      }\n      var val = this[offset + --byteLength];\n      var mul = 1;\n      while (byteLength > 0 && (mul *= 0x100)) {\n        val += this[offset + --byteLength] * mul;\n      }\n      return val;\n    };\n    Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 1, this.length);\n      return this[offset];\n    };\n    Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      return this[offset] | this[offset + 1] << 8;\n    };\n    Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      return this[offset] << 8 | this[offset + 1];\n    };\n    Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n    };\n    Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n    };\n    Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n      var val = this[offset];\n      var mul = 1;\n      var i = 0;\n      while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul;\n      }\n      mul *= 0x80;\n      if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n      return val;\n    };\n    Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n      var i = byteLength;\n      var mul = 1;\n      var val = this[offset + --i];\n      while (i > 0 && (mul *= 0x100)) {\n        val += this[offset + --i] * mul;\n      }\n      mul *= 0x80;\n      if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n      return val;\n    };\n    Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 1, this.length);\n      if (!(this[offset] & 0x80)) return this[offset];\n      return (0xff - this[offset] + 1) * -1;\n    };\n    Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      var val = this[offset] | this[offset + 1] << 8;\n      return val & 0x8000 ? val | 0xFFFF0000 : val;\n    };\n    Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      var val = this[offset + 1] | this[offset] << 8;\n      return val & 0x8000 ? val | 0xFFFF0000 : val;\n    };\n    Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n    };\n    Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n    };\n    Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, true, 23, 4);\n    };\n    Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, false, 23, 4);\n    };\n    Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, true, 52, 8);\n    };\n    Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n      if (!noAssert) checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, false, 52, 8);\n    };\n    function checkInt(buf, value, offset, ext, max, min) {\n      if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n      if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n      if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    }\n    Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        checkInt(this, value, offset, byteLength, maxBytes, 0);\n      }\n      var mul = 1;\n      var i = 0;\n      this[offset] = value & 0xFF;\n      while (++i < byteLength && (mul *= 0x100)) {\n        this[offset + i] = value / mul & 0xFF;\n      }\n      return offset + byteLength;\n    };\n    Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      byteLength = byteLength | 0;\n      if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        checkInt(this, value, offset, byteLength, maxBytes, 0);\n      }\n      var i = byteLength - 1;\n      var mul = 1;\n      this[offset + i] = value & 0xFF;\n      while (--i >= 0 && (mul *= 0x100)) {\n        this[offset + i] = value / mul & 0xFF;\n      }\n      return offset + byteLength;\n    };\n    Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n      if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n      this[offset] = value & 0xff;\n      return offset + 1;\n    };\n    function objectWriteUInt16(buf, value, offset, littleEndian) {\n      if (value < 0) value = 0xffff + value + 1;\n      for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n        buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n      }\n    }\n    Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff;\n        this[offset + 1] = value >>> 8;\n      } else {\n        objectWriteUInt16(this, value, offset, true);\n      }\n      return offset + 2;\n    };\n    Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 8;\n        this[offset + 1] = value & 0xff;\n      } else {\n        objectWriteUInt16(this, value, offset, false);\n      }\n      return offset + 2;\n    };\n    function objectWriteUInt32(buf, value, offset, littleEndian) {\n      if (value < 0) value = 0xffffffff + value + 1;\n      for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n        buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n      }\n    }\n    Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset + 3] = value >>> 24;\n        this[offset + 2] = value >>> 16;\n        this[offset + 1] = value >>> 8;\n        this[offset] = value & 0xff;\n      } else {\n        objectWriteUInt32(this, value, offset, true);\n      }\n      return offset + 4;\n    };\n    Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 24;\n        this[offset + 1] = value >>> 16;\n        this[offset + 2] = value >>> 8;\n        this[offset + 3] = value & 0xff;\n      } else {\n        objectWriteUInt32(this, value, offset, false);\n      }\n      return offset + 4;\n    };\n    Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n        checkInt(this, value, offset, byteLength, limit - 1, -limit);\n      }\n      var i = 0;\n      var mul = 1;\n      var sub = 0;\n      this[offset] = value & 0xFF;\n      while (++i < byteLength && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n          sub = 1;\n        }\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n      }\n      return offset + byteLength;\n    };\n    Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n        checkInt(this, value, offset, byteLength, limit - 1, -limit);\n      }\n      var i = byteLength - 1;\n      var mul = 1;\n      var sub = 0;\n      this[offset + i] = value & 0xFF;\n      while (--i >= 0 && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n          sub = 1;\n        }\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n      }\n      return offset + byteLength;\n    };\n    Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n      if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n      if (value < 0) value = 0xff + value + 1;\n      this[offset] = value & 0xff;\n      return offset + 1;\n    };\n    Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff;\n        this[offset + 1] = value >>> 8;\n      } else {\n        objectWriteUInt16(this, value, offset, true);\n      }\n      return offset + 2;\n    };\n    Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 8;\n        this[offset + 1] = value & 0xff;\n      } else {\n        objectWriteUInt16(this, value, offset, false);\n      }\n      return offset + 2;\n    };\n    Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff;\n        this[offset + 1] = value >>> 8;\n        this[offset + 2] = value >>> 16;\n        this[offset + 3] = value >>> 24;\n      } else {\n        objectWriteUInt32(this, value, offset, true);\n      }\n      return offset + 4;\n    };\n    Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset | 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n      if (value < 0) value = 0xffffffff + value + 1;\n      if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 24;\n        this[offset + 1] = value >>> 16;\n        this[offset + 2] = value >>> 8;\n        this[offset + 3] = value & 0xff;\n      } else {\n        objectWriteUInt32(this, value, offset, false);\n      }\n      return offset + 4;\n    };\n    function checkIEEE754(buf, value, offset, ext, max, min) {\n      if (offset + ext > buf.length) throw new RangeError('Index out of range');\n      if (offset < 0) throw new RangeError('Index out of range');\n    }\n    function writeFloat(buf, value, offset, littleEndian, noAssert) {\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n      }\n      ieee754.write(buf, value, offset, littleEndian, 23, 4);\n      return offset + 4;\n    }\n    Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, true, noAssert);\n    };\n    Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, false, noAssert);\n    };\n    function writeDouble(buf, value, offset, littleEndian, noAssert) {\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n      }\n      ieee754.write(buf, value, offset, littleEndian, 52, 8);\n      return offset + 8;\n    }\n    Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, true, noAssert);\n    };\n    Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, false, noAssert);\n    };\n\n    // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n    Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n      if (!start) start = 0;\n      if (!end && end !== 0) end = this.length;\n      if (targetStart >= target.length) targetStart = target.length;\n      if (!targetStart) targetStart = 0;\n      if (end > 0 && end < start) end = start;\n\n      // Copy 0 bytes; we're done\n      if (end === start) return 0;\n      if (target.length === 0 || this.length === 0) return 0;\n\n      // Fatal error conditions\n      if (targetStart < 0) {\n        throw new RangeError('targetStart out of bounds');\n      }\n      if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n      if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n      // Are we oob?\n      if (end > this.length) end = this.length;\n      if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start;\n      }\n      var len = end - start;\n      var i;\n      if (this === target && start < targetStart && targetStart < end) {\n        // descending copy from end\n        for (i = len - 1; i >= 0; --i) {\n          target[i + targetStart] = this[i + start];\n        }\n      } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n        // ascending copy from start\n        for (i = 0; i < len; ++i) {\n          target[i + targetStart] = this[i + start];\n        }\n      } else {\n        Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n      }\n      return len;\n    };\n\n    // Usage:\n    //    buffer.fill(number[, offset[, end]])\n    //    buffer.fill(buffer[, offset[, end]])\n    //    buffer.fill(string[, offset[, end]][, encoding])\n    Buffer.prototype.fill = function fill(val, start, end, encoding) {\n      // Handle string cases:\n      if (typeof val === 'string') {\n        if (typeof start === 'string') {\n          encoding = start;\n          start = 0;\n          end = this.length;\n        } else if (typeof end === 'string') {\n          encoding = end;\n          end = this.length;\n        }\n        if (val.length === 1) {\n          var code = val.charCodeAt(0);\n          if (code < 256) {\n            val = code;\n          }\n        }\n        if (encoding !== undefined && typeof encoding !== 'string') {\n          throw new TypeError('encoding must be a string');\n        }\n        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n          throw new TypeError('Unknown encoding: ' + encoding);\n        }\n      } else if (typeof val === 'number') {\n        val = val & 255;\n      }\n\n      // Invalid ranges are not set to a default, so can range check early.\n      if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError('Out of range index');\n      }\n      if (end <= start) {\n        return this;\n      }\n      start = start >>> 0;\n      end = end === undefined ? this.length : end >>> 0;\n      if (!val) val = 0;\n      var i;\n      if (typeof val === 'number') {\n        for (i = start; i < end; ++i) {\n          this[i] = val;\n        }\n      } else {\n        var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n        var len = bytes.length;\n        for (i = 0; i < end - start; ++i) {\n          this[i + start] = bytes[i % len];\n        }\n      }\n      return this;\n    };\n\n    // HELPER FUNCTIONS\n    // ================\n\n    var INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n    function base64clean(str) {\n      // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n      str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n      // Node converts strings with length < 2 to ''\n      if (str.length < 2) return '';\n      // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n      while (str.length % 4 !== 0) {\n        str = str + '=';\n      }\n      return str;\n    }\n    function stringtrim(str) {\n      if (str.trim) return str.trim();\n      return str.replace(/^\\s+|\\s+$/g, '');\n    }\n    function toHex(n) {\n      if (n < 16) return '0' + n.toString(16);\n      return n.toString(16);\n    }\n    function utf8ToBytes(string, units) {\n      units = units || Infinity;\n      var codePoint;\n      var length = string.length;\n      var leadSurrogate = null;\n      var bytes = [];\n      for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i);\n\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n          // last char was a lead\n          if (!leadSurrogate) {\n            // no lead yet\n            if (codePoint > 0xDBFF) {\n              // unexpected trail\n              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n              continue;\n            } else if (i + 1 === length) {\n              // unpaired lead\n              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n              continue;\n            }\n\n            // valid lead\n            leadSurrogate = codePoint;\n            continue;\n          }\n\n          // 2 leads in a row\n          if (codePoint < 0xDC00) {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            leadSurrogate = codePoint;\n            continue;\n          }\n\n          // valid surrogate pair\n          codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) {\n          // valid bmp char, but last char was a lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n\n        // encode utf8\n        if (codePoint < 0x80) {\n          if ((units -= 1) < 0) break;\n          bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n          if ((units -= 2) < 0) break;\n          bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n          if ((units -= 3) < 0) break;\n          bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n          if ((units -= 4) < 0) break;\n          bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else {\n          throw new Error('Invalid code point');\n        }\n      }\n      return bytes;\n    }\n    function asciiToBytes(str) {\n      var byteArray = [];\n      for (var i = 0; i < str.length; ++i) {\n        // Node's code seems to be doing this and not & 0x7F..\n        byteArray.push(str.charCodeAt(i) & 0xFF);\n      }\n      return byteArray;\n    }\n    function utf16leToBytes(str, units) {\n      var c, hi, lo;\n      var byteArray = [];\n      for (var i = 0; i < str.length; ++i) {\n        if ((units -= 2) < 0) break;\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n      }\n      return byteArray;\n    }\n    function base64ToBytes(str) {\n      return base64.toByteArray(base64clean(str));\n    }\n    function blitBuffer(src, dst, offset, length) {\n      for (var i = 0; i < length; ++i) {\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n      }\n      return i;\n    }\n    function isnan(val) {\n      return val !== val; // eslint-disable-line no-self-compare\n    }\n\n    /* WEBPACK VAR INJECTION */\n  }).call(this, __webpack_require__(13));\n\n  /***/\n}, /* 31 */\n/***/function (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  /*<replacement>*/\n  var pna = __webpack_require__(20);\n  /*</replacement>*/\n\n  // undocumented cb() API, needed for core, not for public API\n  function destroy(err, cb) {\n    var _this = this;\n    var readableDestroyed = this._readableState && this._readableState.destroyed;\n    var writableDestroyed = this._writableState && this._writableState.destroyed;\n    if (readableDestroyed || writableDestroyed) {\n      if (cb) {\n        cb(err);\n      } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n        pna.nextTick(emitErrorNT, this, err);\n      }\n      return this;\n    }\n\n    // we set destroyed to true before firing error callbacks in order\n    // to make it re-entrance safe in case destroy() is called within callbacks\n\n    if (this._readableState) {\n      this._readableState.destroyed = true;\n    }\n\n    // if this is a duplex stream mark the writable part as destroyed as well\n    if (this._writableState) {\n      this._writableState.destroyed = true;\n    }\n    this._destroy(err || null, function (err) {\n      if (!cb && err) {\n        pna.nextTick(emitErrorNT, _this, err);\n        if (_this._writableState) {\n          _this._writableState.errorEmitted = true;\n        }\n      } else if (cb) {\n        cb(err);\n      }\n    });\n    return this;\n  }\n  function undestroy() {\n    if (this._readableState) {\n      this._readableState.destroyed = false;\n      this._readableState.reading = false;\n      this._readableState.ended = false;\n      this._readableState.endEmitted = false;\n    }\n    if (this._writableState) {\n      this._writableState.destroyed = false;\n      this._writableState.ended = false;\n      this._writableState.ending = false;\n      this._writableState.finished = false;\n      this._writableState.errorEmitted = false;\n    }\n  }\n  function emitErrorNT(self, err) {\n    self.emit('error', err);\n  }\n  module.exports = {\n    destroy: destroy,\n    undestroy: undestroy\n  };\n\n  /***/\n}, /* 32 */\n/***/function (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  /*<replacement>*/\n  var Buffer = __webpack_require__(52).Buffer;\n  /*</replacement>*/\n\n  var isEncoding = Buffer.isEncoding || function (encoding) {\n    encoding = '' + encoding;\n    switch (encoding && encoding.toLowerCase()) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n      case 'raw':\n        return true;\n      default:\n        return false;\n    }\n  };\n  function _normalizeEncoding(enc) {\n    if (!enc) return 'utf8';\n    var retried;\n    while (true) {\n      switch (enc) {\n        case 'utf8':\n        case 'utf-8':\n          return 'utf8';\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return 'utf16le';\n        case 'latin1':\n        case 'binary':\n          return 'latin1';\n        case 'base64':\n        case 'ascii':\n        case 'hex':\n          return enc;\n        default:\n          if (retried) return; // undefined\n          enc = ('' + enc).toLowerCase();\n          retried = true;\n      }\n    }\n  }\n  ;\n\n  // Do not cache `Buffer.isEncoding` when checking encoding names as some\n  // modules monkey-patch it to support additional encodings\n  function normalizeEncoding(enc) {\n    var nenc = _normalizeEncoding(enc);\n    if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n    return nenc || enc;\n  }\n\n  // StringDecoder provides an interface for efficiently splitting a series of\n  // buffers into a series of JS strings without breaking apart multi-byte\n  // characters.\n  exports.StringDecoder = StringDecoder;\n  function StringDecoder(encoding) {\n    this.encoding = normalizeEncoding(encoding);\n    var nb;\n    switch (this.encoding) {\n      case 'utf16le':\n        this.text = utf16Text;\n        this.end = utf16End;\n        nb = 4;\n        break;\n      case 'utf8':\n        this.fillLast = utf8FillLast;\n        nb = 4;\n        break;\n      case 'base64':\n        this.text = base64Text;\n        this.end = base64End;\n        nb = 3;\n        break;\n      default:\n        this.write = simpleWrite;\n        this.end = simpleEnd;\n        return;\n    }\n    this.lastNeed = 0;\n    this.lastTotal = 0;\n    this.lastChar = Buffer.allocUnsafe(nb);\n  }\n  StringDecoder.prototype.write = function (buf) {\n    if (buf.length === 0) return '';\n    var r;\n    var i;\n    if (this.lastNeed) {\n      r = this.fillLast(buf);\n      if (r === undefined) return '';\n      i = this.lastNeed;\n      this.lastNeed = 0;\n    } else {\n      i = 0;\n    }\n    if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n    return r || '';\n  };\n  StringDecoder.prototype.end = utf8End;\n\n  // Returns only complete characters in a Buffer\n  StringDecoder.prototype.text = utf8Text;\n\n  // Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\n  StringDecoder.prototype.fillLast = function (buf) {\n    if (this.lastNeed <= buf.length) {\n      buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n      return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n    }\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n    this.lastNeed -= buf.length;\n  };\n\n  // Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n  // continuation byte. If an invalid byte is detected, -2 is returned.\n  function utf8CheckByte(byte) {\n    if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n    return byte >> 6 === 0x02 ? -1 : -2;\n  }\n\n  // Checks at most 3 bytes at the end of a Buffer in order to detect an\n  // incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n  // needed to complete the UTF-8 character (if applicable) are returned.\n  function utf8CheckIncomplete(self, buf, i) {\n    var j = buf.length - 1;\n    if (j < i) return 0;\n    var nb = utf8CheckByte(buf[j]);\n    if (nb >= 0) {\n      if (nb > 0) self.lastNeed = nb - 1;\n      return nb;\n    }\n    if (--j < i || nb === -2) return 0;\n    nb = utf8CheckByte(buf[j]);\n    if (nb >= 0) {\n      if (nb > 0) self.lastNeed = nb - 2;\n      return nb;\n    }\n    if (--j < i || nb === -2) return 0;\n    nb = utf8CheckByte(buf[j]);\n    if (nb >= 0) {\n      if (nb > 0) {\n        if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n      }\n      return nb;\n    }\n    return 0;\n  }\n\n  // Validates as many continuation bytes for a multi-byte UTF-8 character as\n  // needed or are available. If we see a non-continuation byte where we expect\n  // one, we \"replace\" the validated continuation bytes we've seen so far with\n  // a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n  // behavior. The continuation byte check is included three times in the case\n  // where all of the continuation bytes for a character exist in the same buffer.\n  // It is also done this way as a slight performance increase instead of using a\n  // loop.\n  function utf8CheckExtraBytes(self, buf, p) {\n    if ((buf[0] & 0xC0) !== 0x80) {\n      self.lastNeed = 0;\n      return \"\\uFFFD\";\n    }\n    if (self.lastNeed > 1 && buf.length > 1) {\n      if ((buf[1] & 0xC0) !== 0x80) {\n        self.lastNeed = 1;\n        return \"\\uFFFD\";\n      }\n      if (self.lastNeed > 2 && buf.length > 2) {\n        if ((buf[2] & 0xC0) !== 0x80) {\n          self.lastNeed = 2;\n          return \"\\uFFFD\";\n        }\n      }\n    }\n  }\n\n  // Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\n  function utf8FillLast(buf) {\n    var p = this.lastTotal - this.lastNeed;\n    var r = utf8CheckExtraBytes(this, buf, p);\n    if (r !== undefined) return r;\n    if (this.lastNeed <= buf.length) {\n      buf.copy(this.lastChar, p, 0, this.lastNeed);\n      return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n    }\n    buf.copy(this.lastChar, p, 0, buf.length);\n    this.lastNeed -= buf.length;\n  }\n\n  // Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n  // partial character, the character's bytes are buffered until the required\n  // number of bytes are available.\n  function utf8Text(buf, i) {\n    var total = utf8CheckIncomplete(this, buf, i);\n    if (!this.lastNeed) return buf.toString('utf8', i);\n    this.lastTotal = total;\n    var end = buf.length - (total - this.lastNeed);\n    buf.copy(this.lastChar, 0, end);\n    return buf.toString('utf8', i, end);\n  }\n\n  // For UTF-8, a replacement character is added when ending on a partial\n  // character.\n  function utf8End(buf) {\n    var r = buf && buf.length ? this.write(buf) : '';\n    if (this.lastNeed) return r + \"\\uFFFD\";\n    return r;\n  }\n\n  // UTF-16LE typically needs two bytes per character, but even if we have an even\n  // number of bytes available, we need to check if we end on a leading/high\n  // surrogate. In that case, we need to wait for the next two bytes in order to\n  // decode the last character properly.\n  function utf16Text(buf, i) {\n    if ((buf.length - i) % 2 === 0) {\n      var r = buf.toString('utf16le', i);\n      if (r) {\n        var c = r.charCodeAt(r.length - 1);\n        if (c >= 0xD800 && c <= 0xDBFF) {\n          this.lastNeed = 2;\n          this.lastTotal = 4;\n          this.lastChar[0] = buf[buf.length - 2];\n          this.lastChar[1] = buf[buf.length - 1];\n          return r.slice(0, -1);\n        }\n      }\n      return r;\n    }\n    this.lastNeed = 1;\n    this.lastTotal = 2;\n    this.lastChar[0] = buf[buf.length - 1];\n    return buf.toString('utf16le', i, buf.length - 1);\n  }\n\n  // For UTF-16LE we do not explicitly append special replacement characters if we\n  // end on a partial character, we simply let v8 handle that.\n  function utf16End(buf) {\n    var r = buf && buf.length ? this.write(buf) : '';\n    if (this.lastNeed) {\n      var end = this.lastTotal - this.lastNeed;\n      return r + this.lastChar.toString('utf16le', 0, end);\n    }\n    return r;\n  }\n  function base64Text(buf, i) {\n    var n = (buf.length - i) % 3;\n    if (n === 0) return buf.toString('base64', i);\n    this.lastNeed = 3 - n;\n    this.lastTotal = 3;\n    if (n === 1) {\n      this.lastChar[0] = buf[buf.length - 1];\n    } else {\n      this.lastChar[0] = buf[buf.length - 2];\n      this.lastChar[1] = buf[buf.length - 1];\n    }\n    return buf.toString('base64', i, buf.length - n);\n  }\n  function base64End(buf) {\n    var r = buf && buf.length ? this.write(buf) : '';\n    if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n    return r;\n  }\n\n  // Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\n  function simpleWrite(buf) {\n    return buf.toString(this.encoding);\n  }\n  function simpleEnd(buf) {\n    return buf && buf.length ? this.write(buf) : '';\n  }\n\n  /***/\n}, /* 33 */\n/***/function (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  // a transform stream is a readable/writable stream where you do\n  // something with the data.  Sometimes it's called a \"filter\",\n  // but that's not a great name for it, since that implies a thing where\n  // some bits pass through, and others are simply ignored.  (That would\n  // be a valid example of a transform, of course.)\n  //\n  // While the output is causally related to the input, it's not a\n  // necessarily symmetric or synchronous transformation.  For example,\n  // a zlib stream might take multiple plain-text writes(), and then\n  // emit a single compressed chunk some time in the future.\n  //\n  // Here's how this works:\n  //\n  // The Transform stream has all the aspects of the readable and writable\n  // stream classes.  When you write(chunk), that calls _write(chunk,cb)\n  // internally, and returns false if there's a lot of pending writes\n  // buffered up.  When you call read(), that calls _read(n) until\n  // there's enough pending readable data buffered up.\n  //\n  // In a transform stream, the written data is placed in a buffer.  When\n  // _read(n) is called, it transforms the queued up data, calling the\n  // buffered _write cb's as it consumes chunks.  If consuming a single\n  // written chunk would result in multiple output chunks, then the first\n  // outputted bit calls the readcb, and subsequent chunks just go into\n  // the read buffer, and will cause it to emit 'readable' if necessary.\n  //\n  // This way, back-pressure is actually determined by the reading side,\n  // since _read has to be called to start processing a new chunk.  However,\n  // a pathological inflate type of transform can cause excessive buffering\n  // here.  For example, imagine a stream where every byte of input is\n  // interpreted as an integer from 0-255, and then results in that many\n  // bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n  // 1kb of data being output.  In this case, you could write a very small\n  // amount of input, and end up with a very large amount of output.  In\n  // such a pathological inflating mechanism, there'd be no way to tell\n  // the system to stop doing the transform.  A single 4MB write could\n  // cause the system to run out of memory.\n  //\n  // However, even in such a pathological case, only a single written chunk\n  // would be consumed, and then the rest would wait (un-transformed) until\n  // the results of the previous transformed chunk were consumed.\n  module.exports = Transform;\n  var Duplex = __webpack_require__(11);\n\n  /*<replacement>*/\n  var util = Object.create(__webpack_require__(16));\n  util.inherits = __webpack_require__(12);\n  /*</replacement>*/\n\n  util.inherits(Transform, Duplex);\n  function afterTransform(er, data) {\n    var ts = this._transformState;\n    ts.transforming = false;\n    var cb = ts.writecb;\n    if (!cb) {\n      return this.emit('error', new Error('write callback called multiple times'));\n    }\n    ts.writechunk = null;\n    ts.writecb = null;\n    if (data != null)\n      // single equals check for both `null` and `undefined`\n      this.push(data);\n    cb(er);\n    var rs = this._readableState;\n    rs.reading = false;\n    if (rs.needReadable || rs.length < rs.highWaterMark) {\n      this._read(rs.highWaterMark);\n    }\n  }\n  function Transform(options) {\n    if (!(this instanceof Transform)) return new Transform(options);\n    Duplex.call(this, options);\n    this._transformState = {\n      afterTransform: afterTransform.bind(this),\n      needTransform: false,\n      transforming: false,\n      writecb: null,\n      writechunk: null,\n      writeencoding: null\n    };\n\n    // start out asking for a readable event once data is transformed.\n    this._readableState.needReadable = true;\n\n    // we have implemented the _read method, and done the other things\n    // that Readable wants before the first _read call, so unset the\n    // sync guard flag.\n    this._readableState.sync = false;\n    if (options) {\n      if (typeof options.transform === 'function') this._transform = options.transform;\n      if (typeof options.flush === 'function') this._flush = options.flush;\n    }\n\n    // When the writable side finishes, then flush out anything remaining.\n    this.on('prefinish', prefinish);\n  }\n  function prefinish() {\n    var _this = this;\n    if (typeof this._flush === 'function') {\n      this._flush(function (er, data) {\n        done(_this, er, data);\n      });\n    } else {\n      done(this, null, null);\n    }\n  }\n  Transform.prototype.push = function (chunk, encoding) {\n    this._transformState.needTransform = false;\n    return Duplex.prototype.push.call(this, chunk, encoding);\n  };\n\n  // This is the part where you do stuff!\n  // override this function in implementation classes.\n  // 'chunk' is an input chunk.\n  //\n  // Call `push(newChunk)` to pass along transformed output\n  // to the readable side.  You may call 'push' zero or more times.\n  //\n  // Call `cb(err)` when you are done with this chunk.  If you pass\n  // an error, then that'll put the hurt on the whole operation.  If you\n  // never call cb(), then you'll never get another chunk.\n  Transform.prototype._transform = function (chunk, encoding, cb) {\n    throw new Error('_transform() is not implemented');\n  };\n  Transform.prototype._write = function (chunk, encoding, cb) {\n    var ts = this._transformState;\n    ts.writecb = cb;\n    ts.writechunk = chunk;\n    ts.writeencoding = encoding;\n    if (!ts.transforming) {\n      var rs = this._readableState;\n      if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n    }\n  };\n\n  // Doesn't matter what the args are here.\n  // _transform does all the work.\n  // That we got here means that the readable side wants more data.\n  Transform.prototype._read = function (n) {\n    var ts = this._transformState;\n    if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n      ts.transforming = true;\n      this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n    } else {\n      // mark that we need a transform, so that any data that comes in\n      // will get processed, now that we've asked for it.\n      ts.needTransform = true;\n    }\n  };\n  Transform.prototype._destroy = function (err, cb) {\n    var _this2 = this;\n    Duplex.prototype._destroy.call(this, err, function (err2) {\n      cb(err2);\n      _this2.emit('close');\n    });\n  };\n  function done(stream, er, data) {\n    if (er) return stream.emit('error', er);\n    if (data != null)\n      // single equals check for both `null` and `undefined`\n      stream.push(data);\n\n    // if there's nothing in the write buffer, then that means\n    // that nothing more will ever be provided\n    if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n    if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n    return stream.push(null);\n  }\n\n  /***/\n}, /* 34 */\n/***/function (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"a\", function () {\n    return JRPCEngine;\n  });\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"c\", function () {\n    return mergeMiddleware;\n  });\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"b\", function () {\n    return createEngineStream;\n  });\n  /* harmony import */\n  var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n  /* harmony import */\n  var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);\n  /* harmony import */\n  var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(22);\n  /* harmony import */\n  var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__);\n  /* harmony import */\n  var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9);\n  /* harmony import */\n  var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__);\n  /* harmony import */\n  var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(4);\n  /* harmony import */\n  var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__);\n  /* harmony import */\n  var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5);\n  /* harmony import */\n  var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__);\n  /* harmony import */\n  var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2);\n  /* harmony import */\n  var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__);\n  /* harmony import */\n  var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(6);\n  /* harmony import */\n  var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__);\n  /* harmony import */\n  var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(7);\n  /* harmony import */\n  var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__);\n  /* harmony import */\n  var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(3);\n  /* harmony import */\n  var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__);\n  /* harmony import */\n  var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(0);\n  /* harmony import */\n  var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__);\n  /* harmony import */\n  var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(1);\n  /* harmony import */\n  var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10__);\n  /* harmony import */\n  var stream__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(10);\n  /* harmony import */\n  var stream__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_11__);\n  /* harmony import */\n  var _jrpc__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(18);\n  /* harmony import */\n  var _safeEventEmitter__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(14);\n  /* harmony import */\n  var _serializableError__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(8);\n  function _createForOfIteratorHelper(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (!it) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        var F = function F() {};\n        return {\n          s: F,\n          n: function n() {\n            if (i >= o.length) return {\n              done: true\n            };\n            return {\n              done: false,\n              value: o[i++]\n            };\n          },\n          e: function e(_e) {\n            throw _e;\n          },\n          f: F\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var normalCompletion = true,\n      didErr = false,\n      err;\n    return {\n      s: function s() {\n        it = it.call(o);\n      },\n      n: function n() {\n        var step = it.next();\n        normalCompletion = step.done;\n        return step;\n      },\n      e: function e(_e2) {\n        didErr = true;\n        err = _e2;\n      },\n      f: function f() {\n        try {\n          if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n        } finally {\n          if (didErr) throw err;\n        }\n      }\n    };\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n      keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n    return target;\n  }\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(Derived),\n        result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7___default()(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * A JSON-RPC request and response processor.\n   * Give it a stack of middleware, pass it requests, and get back responses.\n   */\n\n  var JRPCEngine = /*#__PURE__*/function (_SafeEventEmitter) {\n    _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default()(JRPCEngine, _SafeEventEmitter);\n    var _super = _createSuper(JRPCEngine);\n    function JRPCEngine() {\n      var _this;\n      _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default()(this, JRPCEngine);\n      _this = _super.call(this);\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default()(_this), \"_middleware\", void 0);\n      _this._middleware = [];\n      return _this;\n    }\n    /**\n     * Add a middleware function to the engine's middleware stack.\n     *\n     * @param middleware - The middleware function to add.\n     */\n\n    _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(JRPCEngine, [{\n      key: \"push\",\n      value: function push(middleware) {\n        this._middleware.push(middleware);\n      }\n      /**\n       * Handle a JSON-RPC request, and return a response.\n       *\n       * @param request - The request to handle.\n       * @param callback - An error-first callback that will receive the response.\n       */\n    }, {\n      key: \"handle\",\n      value: function handle(req, cb) {\n        if (cb && typeof cb !== \"function\") {\n          throw new Error('\"callback\" must be a function if provided.');\n        }\n        if (Array.isArray(req)) {\n          if (cb) {\n            return this._handleBatch(req, cb);\n          }\n          return this._handleBatch(req);\n        }\n        if (cb) {\n          return this._handle(req, cb);\n        }\n        return this._promiseHandle(req);\n      }\n      /**\n       * Returns this engine as a middleware function that can be pushed to other\n       * engines.\n       *\n       * @returns This engine as a middleware function.\n       */\n    }, {\n      key: \"asMiddleware\",\n      value: function asMiddleware() {\n        var _this2 = this;\n        return /*#__PURE__*/function () {\n          var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.mark(function _callee2(req, res, next, end) {\n            var _yield$JRPCEngine$_ru, _yield$JRPCEngine$_ru2, middlewareError, isComplete, returnHandlers;\n            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.prev = 0;\n                    _context2.next = 3;\n                    return JRPCEngine._runAllMiddleware(req, res, _this2._middleware);\n                  case 3:\n                    _yield$JRPCEngine$_ru = _context2.sent;\n                    _yield$JRPCEngine$_ru2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(_yield$JRPCEngine$_ru, 3);\n                    middlewareError = _yield$JRPCEngine$_ru2[0];\n                    isComplete = _yield$JRPCEngine$_ru2[1];\n                    returnHandlers = _yield$JRPCEngine$_ru2[2];\n                    if (!isComplete) {\n                      _context2.next = 12;\n                      break;\n                    }\n                    _context2.next = 11;\n                    return JRPCEngine._runReturnHandlers(returnHandlers);\n                  case 11:\n                    return _context2.abrupt(\"return\", end(middlewareError));\n                  case 12:\n                    return _context2.abrupt(\"return\", next( /*#__PURE__*/function () {\n                      var _ref2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.mark(function _callee(handlerCallback) {\n                        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.wrap(function _callee$(_context) {\n                          while (1) {\n                            switch (_context.prev = _context.next) {\n                              case 0:\n                                _context.prev = 0;\n                                _context.next = 3;\n                                return JRPCEngine._runReturnHandlers(returnHandlers);\n                              case 3:\n                                _context.next = 8;\n                                break;\n                              case 5:\n                                _context.prev = 5;\n                                _context.t0 = _context[\"catch\"](0);\n                                return _context.abrupt(\"return\", handlerCallback(_context.t0));\n                              case 8:\n                                return _context.abrupt(\"return\", handlerCallback());\n                              case 9:\n                              case \"end\":\n                                return _context.stop();\n                            }\n                          }\n                        }, _callee, null, [[0, 5]]);\n                      }));\n                      return function (_x5) {\n                        return _ref2.apply(this, arguments);\n                      };\n                    }()));\n                  case 15:\n                    _context2.prev = 15;\n                    _context2.t0 = _context2[\"catch\"](0);\n                    return _context2.abrupt(\"return\", end(_context2.t0));\n                  case 18:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, null, [[0, 15]]);\n          }));\n          return function (_x, _x2, _x3, _x4) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n      }\n      /**\n       * Like _handle, but for batch requests.\n       */\n    }, {\n      key: \"_handleBatch\",\n      value: function () {\n        var _handleBatch2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.mark(function _callee3(reqs, cb) {\n          var _responses;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.prev = 0;\n                  _context3.next = 3;\n                  return Promise.all(\n                  // 1. Begin executing each request in the order received\n                  reqs.map(this._promiseHandle.bind(this)));\n                case 3:\n                  _responses = _context3.sent;\n                  if (!cb) {\n                    _context3.next = 6;\n                    break;\n                  }\n                  return _context3.abrupt(\"return\", cb(null, _responses));\n                case 6:\n                  return _context3.abrupt(\"return\", _responses);\n                case 9:\n                  _context3.prev = 9;\n                  _context3.t0 = _context3[\"catch\"](0);\n                  if (!cb) {\n                    _context3.next = 13;\n                    break;\n                  }\n                  return _context3.abrupt(\"return\", cb(_context3.t0));\n                case 13:\n                  throw _context3.t0;\n                case 14:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this, [[0, 9]]);\n        }));\n        function _handleBatch(_x6, _x7) {\n          return _handleBatch2.apply(this, arguments);\n        }\n        return _handleBatch;\n      }()\n      /**\n       * A promise-wrapped _handle.\n       */\n    }, {\n      key: \"_promiseHandle\",\n      value: function _promiseHandle(req) {\n        var _this3 = this;\n        return new Promise(function (resolve) {\n          _this3._handle(req, function (_err, res) {\n            // There will always be a response, and it will always have any error\n            // that is caught and propagated.\n            resolve(res);\n          });\n        });\n      }\n      /**\n       * Ensures that the request object is valid, processes it, and passes any\n       * error and the response object to the given callback.\n       *\n       * Does not reject.\n       */\n    }, {\n      key: \"_handle\",\n      value: function () {\n        var _handle2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.mark(function _callee4(callerReq, cb) {\n          var _error2, _error3, req, res, error;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  if (!(!callerReq || Array.isArray(callerReq) || _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(callerReq) !== \"object\")) {\n                    _context4.next = 3;\n                    break;\n                  }\n                  _error2 = new _serializableError__WEBPACK_IMPORTED_MODULE_14__[/* default */\"a\"]({\n                    code: -32603,\n                    message: \"request must be plain object\"\n                  });\n                  return _context4.abrupt(\"return\", cb(_error2, {\n                    id: undefined,\n                    jsonrpc: \"2.0\",\n                    error: _error2\n                  }));\n                case 3:\n                  if (!(typeof callerReq.method !== \"string\")) {\n                    _context4.next = 6;\n                    break;\n                  }\n                  _error3 = new _serializableError__WEBPACK_IMPORTED_MODULE_14__[/* default */\"a\"]({\n                    code: -32603,\n                    message: \"method must be string\"\n                  });\n                  return _context4.abrupt(\"return\", cb(_error3, {\n                    id: callerReq.id,\n                    jsonrpc: \"2.0\",\n                    error: _error3\n                  }));\n                case 6:\n                  req = _objectSpread({}, callerReq);\n                  res = {\n                    id: req.id,\n                    jsonrpc: req.jsonrpc\n                  };\n                  error = null;\n                  _context4.prev = 9;\n                  _context4.next = 12;\n                  return this._processRequest(req, res);\n                case 12:\n                  _context4.next = 17;\n                  break;\n                case 14:\n                  _context4.prev = 14;\n                  _context4.t0 = _context4[\"catch\"](9);\n                  // A request handler error, a re-thrown middleware error, or something\n                  // unexpected.\n                  error = _context4.t0;\n                case 17:\n                  if (error) {\n                    // Ensure no result is present on an errored response\n                    delete res.result;\n                    if (!res.error) {\n                      res.error = Object(_jrpc__WEBPACK_IMPORTED_MODULE_12__[/* serializeError */\"h\"])(error);\n                    }\n                  }\n                  return _context4.abrupt(\"return\", cb(error, res));\n                case 19:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this, [[9, 14]]);\n        }));\n        function _handle(_x8, _x9) {\n          return _handle2.apply(this, arguments);\n        }\n        return _handle;\n      }()\n      /**\n       * For the given request and response, runs all middleware and their return\n       * handlers, if any, and ensures that internal request processing semantics\n       * are satisfied.\n       */\n    }, {\n      key: \"_processRequest\",\n      value: function () {\n        var _processRequest2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.mark(function _callee5(req, res) {\n          var _yield$JRPCEngine$_ru3, _yield$JRPCEngine$_ru4, error, isComplete, returnHandlers;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return JRPCEngine._runAllMiddleware(req, res, this._middleware);\n                case 2:\n                  _yield$JRPCEngine$_ru3 = _context5.sent;\n                  _yield$JRPCEngine$_ru4 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(_yield$JRPCEngine$_ru3, 3);\n                  error = _yield$JRPCEngine$_ru4[0];\n                  isComplete = _yield$JRPCEngine$_ru4[1];\n                  returnHandlers = _yield$JRPCEngine$_ru4[2];\n\n                  // Throw if \"end\" was not called, or if the response has neither a result\n                  // nor an error.\n                  JRPCEngine._checkForCompletion(req, res, isComplete); // The return handlers should run even if an error was encountered during\n                  // middleware processing.\n\n                  _context5.next = 10;\n                  return JRPCEngine._runReturnHandlers(returnHandlers);\n                case 10:\n                  if (!error) {\n                    _context5.next = 12;\n                    break;\n                  }\n                  throw error;\n                case 12:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n        function _processRequest(_x10, _x11) {\n          return _processRequest2.apply(this, arguments);\n        }\n        return _processRequest;\n      }()\n      /**\n       * Serially executes the given stack of middleware.\n       *\n       * @returns An array of any error encountered during middleware execution,\n       * a boolean indicating whether the request was completed, and an array of\n       * middleware-defined return handlers.\n       */\n    }], [{\n      key: \"_runAllMiddleware\",\n      value: function () {\n        var _runAllMiddleware2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.mark(function _callee6(req, res, middlewareStack) {\n          var returnHandlers, error, isComplete, _iterator, _step, middleware, _yield$JRPCEngine$_ru5, _yield$JRPCEngine$_ru6;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  returnHandlers = [];\n                  error = null;\n                  isComplete = false; // Go down stack of middleware, call and collect optional returnHandlers\n\n                  _iterator = _createForOfIteratorHelper(middlewareStack);\n                  _context6.prev = 4;\n                  _iterator.s();\n                case 6:\n                  if ((_step = _iterator.n()).done) {\n                    _context6.next = 18;\n                    break;\n                  }\n                  middleware = _step.value;\n                  _context6.next = 10;\n                  return JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n                case 10:\n                  _yield$JRPCEngine$_ru5 = _context6.sent;\n                  _yield$JRPCEngine$_ru6 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(_yield$JRPCEngine$_ru5, 2);\n                  error = _yield$JRPCEngine$_ru6[0];\n                  isComplete = _yield$JRPCEngine$_ru6[1];\n                  if (!isComplete) {\n                    _context6.next = 16;\n                    break;\n                  }\n                  return _context6.abrupt(\"break\", 18);\n                case 16:\n                  _context6.next = 6;\n                  break;\n                case 18:\n                  _context6.next = 23;\n                  break;\n                case 20:\n                  _context6.prev = 20;\n                  _context6.t0 = _context6[\"catch\"](4);\n                  _iterator.e(_context6.t0);\n                case 23:\n                  _context6.prev = 23;\n                  _iterator.f();\n                  return _context6.finish(23);\n                case 26:\n                  return _context6.abrupt(\"return\", [error, isComplete, returnHandlers.reverse()]);\n                case 27:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, null, [[4, 20, 23, 26]]);\n        }));\n        function _runAllMiddleware(_x12, _x13, _x14) {\n          return _runAllMiddleware2.apply(this, arguments);\n        }\n        return _runAllMiddleware;\n      }()\n      /**\n       * Runs an individual middleware.\n       *\n       * @returns An array of any error encountered during middleware exection,\n       * and a boolean indicating whether the request should end.\n       */\n    }, {\n      key: \"_runMiddleware\",\n      value: function _runMiddleware(req, res, middleware, returnHandlers) {\n        return new Promise(function (resolve) {\n          var end = function end(err) {\n            var error = err || res.error;\n            if (error) {\n              res.error = Object(_jrpc__WEBPACK_IMPORTED_MODULE_12__[/* serializeError */\"h\"])(error);\n            } // True indicates that the request should end\n\n            resolve([error, true]);\n          };\n          var next = function next(returnHandler) {\n            if (res.error) {\n              end(res.error);\n            } else {\n              if (returnHandler) {\n                if (typeof returnHandler !== \"function\") {\n                  end(new _serializableError__WEBPACK_IMPORTED_MODULE_14__[/* default */\"a\"]({\n                    code: -32603,\n                    message: \"JRPCEngine: 'next' return handlers must be functions\"\n                  }));\n                }\n                returnHandlers.push(returnHandler);\n              } // False indicates that the request should not end\n\n              resolve([null, false]);\n            }\n          };\n          try {\n            middleware(req, res, next, end);\n          } catch (error) {\n            end(error);\n          }\n        });\n      }\n      /**\n       * Serially executes array of return handlers. The request and response are\n       * assumed to be in their scope.\n       */\n    }, {\n      key: \"_runReturnHandlers\",\n      value: function () {\n        var _runReturnHandlers2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.mark(function _callee7(handlers) {\n          var _iterator2, _step2, _loop;\n          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.wrap(function _callee7$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _iterator2 = _createForOfIteratorHelper(handlers);\n                  _context8.prev = 1;\n                  _loop = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.mark(function _loop() {\n                    var handler;\n                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default.a.wrap(function _loop$(_context7) {\n                      while (1) {\n                        switch (_context7.prev = _context7.next) {\n                          case 0:\n                            handler = _step2.value;\n                            _context7.next = 3;\n                            return new Promise(function (resolve, reject) {\n                              handler(function (err) {\n                                return err ? reject(err) : resolve();\n                              });\n                            });\n                          case 3:\n                          case \"end\":\n                            return _context7.stop();\n                        }\n                      }\n                    }, _loop);\n                  });\n                  _iterator2.s();\n                case 4:\n                  if ((_step2 = _iterator2.n()).done) {\n                    _context8.next = 8;\n                    break;\n                  }\n                  return _context8.delegateYield(_loop(), \"t0\", 6);\n                case 6:\n                  _context8.next = 4;\n                  break;\n                case 8:\n                  _context8.next = 13;\n                  break;\n                case 10:\n                  _context8.prev = 10;\n                  _context8.t1 = _context8[\"catch\"](1);\n                  _iterator2.e(_context8.t1);\n                case 13:\n                  _context8.prev = 13;\n                  _iterator2.f();\n                  return _context8.finish(13);\n                case 16:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee7, null, [[1, 10, 13, 16]]);\n        }));\n        function _runReturnHandlers(_x15) {\n          return _runReturnHandlers2.apply(this, arguments);\n        }\n        return _runReturnHandlers;\n      }()\n      /**\n       * Throws an error if the response has neither a result nor an error, or if\n       * the \"isComplete\" flag is falsy.\n       */\n    }, {\n      key: \"_checkForCompletion\",\n      value: function _checkForCompletion(req, res, isComplete) {\n        if (!(\"result\" in res) && !(\"error\" in res)) {\n          throw new _serializableError__WEBPACK_IMPORTED_MODULE_14__[/* default */\"a\"]({\n            code: -32603,\n            message: \"Response has no error or result for request\"\n          });\n        }\n        if (!isComplete) {\n          throw new _serializableError__WEBPACK_IMPORTED_MODULE_14__[/* default */\"a\"]({\n            code: -32603,\n            message: \"Nothing ended request\"\n          });\n        }\n      }\n    }]);\n    return JRPCEngine;\n  }(_safeEventEmitter__WEBPACK_IMPORTED_MODULE_13__[/* default */\"a\"]);\n  function mergeMiddleware(middlewareStack) {\n    var engine = new JRPCEngine();\n    middlewareStack.forEach(function (middleware) {\n      return engine.push(middleware);\n    });\n    return engine.asMiddleware();\n  }\n  function createEngineStream(opts) {\n    if (!opts || !opts.engine) {\n      throw new Error(\"Missing engine parameter!\");\n    }\n    var engine = opts.engine; // eslint-disable-next-line prefer-const\n\n    var stream;\n    function read() {\n      return undefined;\n    }\n    function write(req, _encoding, cb) {\n      engine.handle(req, function (_err, res) {\n        stream.push(res);\n      });\n      cb();\n    }\n    stream = new stream__WEBPACK_IMPORTED_MODULE_11__[\"Duplex\"]({\n      objectMode: true,\n      read: read,\n      write: write\n    }); // forward notifications\n\n    if (engine.on) {\n      engine.on(\"notification\", function (message) {\n        stream.push(message);\n      });\n    }\n    return stream;\n  }\n\n  /***/\n}, /* 35 */\n/***/function (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"a\", function () {\n    return IGNORE_SUBSTREAM;\n  });\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"b\", function () {\n    return ObjectMultiplex;\n  });\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"c\", function () {\n    return setupMultiplex;\n  });\n  /* harmony import */\n  var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n  /* harmony import */\n  var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n  /* harmony import */\n  var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);\n  /* harmony import */\n  var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n  /* harmony import */\n  var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);\n  /* harmony import */\n  var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__);\n  /* harmony import */\n  var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);\n  /* harmony import */\n  var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);\n  /* harmony import */\n  var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7);\n  /* harmony import */\n  var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);\n  /* harmony import */\n  var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(3);\n  /* harmony import */\n  var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);\n  /* harmony import */\n  var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(0);\n  /* harmony import */\n  var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__);\n  /* harmony import */\n  var end_of_stream__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(26);\n  /* harmony import */\n  var end_of_stream__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(end_of_stream__WEBPACK_IMPORTED_MODULE_7__);\n  /* harmony import */\n  var once__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(41);\n  /* harmony import */\n  var once__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(once__WEBPACK_IMPORTED_MODULE_8__);\n  /* harmony import */\n  var pump__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(42);\n  /* harmony import */\n  var pump__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(pump__WEBPACK_IMPORTED_MODULE_9__);\n  /* harmony import */\n  var stream__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(10);\n  /* harmony import */\n  var stream__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_10__);\n  /* harmony import */\n  var _substream__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(21);\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n      keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n    return target;\n  }\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Derived),\n        result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  var IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n  var ObjectMultiplex = /*#__PURE__*/function (_Duplex) {\n    _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(ObjectMultiplex, _Duplex);\n    var _super = _createSuper(ObjectMultiplex);\n    function ObjectMultiplex() {\n      var _this;\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ObjectMultiplex);\n      _this = _super.call(this, _objectSpread(_objectSpread({}, opts), {}, {\n        objectMode: true\n      }));\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(_this), \"_substreams\", void 0);\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(_this), \"getStream\", void 0);\n      _this._substreams = {};\n      return _this;\n    }\n    _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ObjectMultiplex, [{\n      key: \"createStream\",\n      value: function createStream(name) {\n        // validate name\n        if (!name) {\n          throw new Error(\"ObjectMultiplex - name must not be empty\");\n        }\n        if (this._substreams[name]) {\n          throw new Error(\"ObjectMultiplex - Substream for name \\\"\".concat(name, \"\\\" already exists\"));\n        } // create substream\n\n        var substream = new _substream__WEBPACK_IMPORTED_MODULE_11__[/* default */\"a\"]({\n          parent: this,\n          name: name\n        });\n        this._substreams[name] = substream; // listen for parent stream to end\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n        anyStreamEnd(this, function (_error) {\n          return substream.destroy(_error || undefined);\n        });\n        return substream;\n      } // ignore streams (dont display orphaned data warning)\n    }, {\n      key: \"ignoreStream\",\n      value: function ignoreStream(name) {\n        // validate name\n        if (!name) {\n          throw new Error(\"ObjectMultiplex - name must not be empty\");\n        }\n        if (this._substreams[name]) {\n          throw new Error(\"ObjectMultiplex - Substream for name \\\"\".concat(name, \"\\\" already exists\"));\n        } // set\n\n        this._substreams[name] = IGNORE_SUBSTREAM;\n      } // eslint-disable-next-line class-methods-use-this\n    }, {\n      key: \"_read\",\n      value: function _read() {\n        return undefined;\n      }\n    }, {\n      key: \"_write\",\n      value: function _write(chunk, _encoding, callback) {\n        var name = chunk.name,\n          data = chunk.data;\n        if (!name) {\n          window.console.warn(\"ObjectMultiplex - malformed chunk without name \\\"\".concat(chunk, \"\\\"\"));\n          return callback();\n        } // get corresponding substream\n\n        var substream = this._substreams[name];\n        if (!substream) {\n          window.console.warn(\"ObjectMultiplex - orphaned data for stream \\\"\".concat(name, \"\\\"\"));\n          return callback();\n        } // push data into substream\n\n        if (substream !== IGNORE_SUBSTREAM) {\n          substream.push(data);\n        }\n        return callback();\n      }\n    }]);\n    return ObjectMultiplex;\n  }(stream__WEBPACK_IMPORTED_MODULE_10__[\"Duplex\"]); // util\n\n  function anyStreamEnd(stream, _cb) {\n    var cb = once__WEBPACK_IMPORTED_MODULE_8___default()(_cb);\n    end_of_stream__WEBPACK_IMPORTED_MODULE_7___default()(stream, {\n      readable: false\n    }, cb);\n    end_of_stream__WEBPACK_IMPORTED_MODULE_7___default()(stream, {\n      writable: false\n    }, cb);\n  }\n  function setupMultiplex(stream) {\n    var mux = new ObjectMultiplex();\n    mux.getStream = function streamHelper(name) {\n      if (this._substreams[name]) {\n        return this._substreams[name];\n      }\n      return this.createStream(name);\n    };\n    pump__WEBPACK_IMPORTED_MODULE_9___default()(stream, mux, stream, function (err) {\n      if (err) window.console.error(err);\n    });\n    return mux;\n  }\n\n  /***/\n}, /* 36 */\n/***/function (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  /* harmony export (binding) */\n  __webpack_require__.d(__webpack_exports__, \"a\", function () {\n    return PostMessageStream;\n  });\n  /* harmony import */\n  var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n  /* harmony import */\n  var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);\n  /* harmony import */\n  var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);\n  /* harmony import */\n  var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);\n  /* harmony import */\n  var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);\n  /* harmony import */\n  var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);\n  /* harmony import */\n  var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2);\n  /* harmony import */\n  var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__);\n  /* harmony import */\n  var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6);\n  /* harmony import */\n  var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);\n  /* harmony import */\n  var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(7);\n  /* harmony import */\n  var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__);\n  /* harmony import */\n  var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(3);\n  /* harmony import */\n  var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__);\n  /* harmony import */\n  var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(0);\n  /* harmony import */\n  var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__);\n  /* harmony import */\n  var stream__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(10);\n  /* harmony import */\n  var stream__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_8__);\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(Derived),\n        result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default()(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  function noop() {\n    return undefined;\n  }\n  var SYN = \"SYN\";\n  var ACK = \"ACK\";\n  var BRK = \"BRK\";\n  var PostMessageStream = /*#__PURE__*/function (_Duplex) {\n    _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(PostMessageStream, _Duplex);\n    var _super = _createSuper(PostMessageStream);\n    function PostMessageStream(_ref) {\n      var _this;\n      var name = _ref.name,\n        target = _ref.target,\n        targetWindow = _ref.targetWindow;\n      _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, PostMessageStream);\n      _this = _super.call(this, {\n        objectMode: true\n      });\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this), \"_init\", void 0);\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this), \"_haveSyn\", void 0);\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this), \"_name\", void 0);\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this), \"_target\", void 0);\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this), \"_targetWindow\", void 0);\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this), \"_origin\", void 0);\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this), \"_onMessage\", void 0);\n      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this), \"_synIntervalId\", void 0);\n      _this._init = false;\n      _this._haveSyn = false;\n      _this._name = name;\n      _this._target = target; // target origin\n\n      _this._targetWindow = targetWindow || window;\n      _this._origin = targetWindow ? \"*\" : window.location.origin;\n      _this._onMessage = _this.onMessage.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this));\n      _this._synIntervalId = null;\n      window.addEventListener(\"message\", _this._onMessage, false);\n      _this._handShake();\n      return _this;\n    }\n    _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(PostMessageStream, [{\n      key: \"_break\",\n      value: function _break() {\n        this.cork();\n        this._write(BRK, null, noop);\n        this._haveSyn = false;\n        this._init = false;\n      }\n    }, {\n      key: \"_handShake\",\n      value: function _handShake() {\n        this._write(SYN, null, noop);\n        this.cork();\n      }\n    }, {\n      key: \"_onData\",\n      value: function _onData(data) {\n        if (!this._init) {\n          // listen for handshake\n          if (data === SYN) {\n            this._haveSyn = true;\n            this._write(ACK, null, noop);\n          } else if (data === ACK) {\n            this._init = true;\n            if (!this._haveSyn) {\n              this._write(ACK, null, noop);\n            }\n            this.uncork();\n          }\n        } else if (data === BRK) {\n          this._break();\n        } else {\n          // forward message\n          try {\n            this.push(data);\n          } catch (err) {\n            this.emit(\"error\", err);\n          }\n        }\n      }\n    }, {\n      key: \"_postMessage\",\n      value: function _postMessage(data) {\n        var originConstraint = this._origin;\n        if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(data) === \"object\") {\n          var dataObj = data;\n          if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(dataObj.data) === \"object\") {\n            var dataObjData = dataObj.data;\n            if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {\n              var dataObjDataParam = dataObjData.params[0];\n              if (dataObjDataParam._origin) {\n                originConstraint = dataObjDataParam._origin;\n              } // add a constraint for the response\n\n              dataObjDataParam._origin = window.location.origin;\n            }\n          }\n        }\n        this._targetWindow.postMessage({\n          target: this._target,\n          data: data\n        }, originConstraint);\n      }\n    }, {\n      key: \"onMessage\",\n      value: function onMessage(event) {\n        var message = event.data; // validate message\n\n        if (this._origin !== \"*\" && event.origin !== this._origin || event.source !== this._targetWindow || _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(message) !== \"object\" || message.target !== this._name || !message.data) {\n          return;\n        }\n        this._onData(message.data);\n      } // eslint-disable-next-line class-methods-use-this\n    }, {\n      key: \"_read\",\n      value: function _read() {\n        return undefined;\n      }\n    }, {\n      key: \"_write\",\n      value: function _write(data, _, cb) {\n        this._postMessage(data);\n        cb();\n      }\n    }]);\n    return PostMessageStream;\n  }(stream__WEBPACK_IMPORTED_MODULE_8__[\"Duplex\"]);\n\n  /***/\n}, /* 37 */\n/***/function (module, exports) {\n\n  /***/}, /* 38 */\n/***/function (module, exports) {\n  module.exports = require(\"@toruslabs/openlogin-utils\");\n\n  /***/\n}, /* 39 */\n/***/function (module, exports) {\n  module.exports = require(\"@babel/runtime/helpers/wrapNativeSuper\");\n\n  /***/\n}, /* 40 */\n/***/function (module, exports) {\n  module.exports = require(\"fast-safe-stringify\");\n\n  /***/\n}, /* 41 */\n/***/function (module, exports) {\n  module.exports = require(\"once\");\n\n  /***/\n}, /* 42 */\n/***/function (module, exports) {\n  module.exports = require(\"pump\");\n\n  /***/\n}, /* 43 */\n/***/function (module, __webpack_exports__, __webpack_require__) {\n  \"use strict\";\n\n  __webpack_require__.r(__webpack_exports__);\n  /* harmony import */\n  var _src_jrpc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"serializeError\", function () {\n    return _src_jrpc__WEBPACK_IMPORTED_MODULE_0__[\"h\"];\n  });\n\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"getRpcPromiseCallback\", function () {\n    return _src_jrpc__WEBPACK_IMPORTED_MODULE_0__[\"g\"];\n  });\n\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"createErrorMiddleware\", function () {\n    return _src_jrpc__WEBPACK_IMPORTED_MODULE_0__[\"b\"];\n  });\n\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"createStreamMiddleware\", function () {\n    return _src_jrpc__WEBPACK_IMPORTED_MODULE_0__[\"f\"];\n  });\n\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"createScaffoldMiddleware\", function () {\n    return _src_jrpc__WEBPACK_IMPORTED_MODULE_0__[\"e\"];\n  });\n\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"createIdRemapMiddleware\", function () {\n    return _src_jrpc__WEBPACK_IMPORTED_MODULE_0__[\"c\"];\n  });\n\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"createLoggerMiddleware\", function () {\n    return _src_jrpc__WEBPACK_IMPORTED_MODULE_0__[\"d\"];\n  });\n\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"createAsyncMiddleware\", function () {\n    return _src_jrpc__WEBPACK_IMPORTED_MODULE_0__[\"a\"];\n  });\n\n  /* harmony import */\n  var _src_jrpcEngine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(34);\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"JRPCEngine\", function () {\n    return _src_jrpcEngine__WEBPACK_IMPORTED_MODULE_1__[\"a\"];\n  });\n\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"mergeMiddleware\", function () {\n    return _src_jrpcEngine__WEBPACK_IMPORTED_MODULE_1__[\"c\"];\n  });\n\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"createEngineStream\", function () {\n    return _src_jrpcEngine__WEBPACK_IMPORTED_MODULE_1__[\"b\"];\n  });\n\n  /* harmony import */\n  var _src_mux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(35);\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"IGNORE_SUBSTREAM\", function () {\n    return _src_mux__WEBPACK_IMPORTED_MODULE_2__[\"a\"];\n  });\n\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"ObjectMultiplex\", function () {\n    return _src_mux__WEBPACK_IMPORTED_MODULE_2__[\"b\"];\n  });\n\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"setupMultiplex\", function () {\n    return _src_mux__WEBPACK_IMPORTED_MODULE_2__[\"c\"];\n  });\n\n  /* harmony import */\n  var _src_postMessageStream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(36);\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"PostMessageStream\", function () {\n    return _src_postMessageStream__WEBPACK_IMPORTED_MODULE_3__[\"a\"];\n  });\n\n  /* harmony import */\n  var _src_safeEventEmitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(14);\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"SafeEventEmitter\", function () {\n    return _src_safeEventEmitter__WEBPACK_IMPORTED_MODULE_4__[\"a\"];\n  });\n\n  /* harmony import */\n  var _src_serializableError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8);\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"SerializableError\", function () {\n    return _src_serializableError__WEBPACK_IMPORTED_MODULE_5__[\"a\"];\n  });\n\n  /* harmony import */\n  var _src_substream__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(21);\n  /* harmony reexport (safe) */\n  __webpack_require__.d(__webpack_exports__, \"Substream\", function () {\n    return _src_substream__WEBPACK_IMPORTED_MODULE_6__[\"a\"];\n  });\n\n  /* harmony import */\n  var _src_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(37);\n  /* harmony import */\n  var _src_utils__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_src_utils__WEBPACK_IMPORTED_MODULE_7__);\n  /* harmony reexport (unknown) */\n  for (var __WEBPACK_IMPORT_KEY__ in _src_utils__WEBPACK_IMPORTED_MODULE_7__) if ([\"default\", \"PostMessageStream\", \"SafeEventEmitter\", \"SerializableError\", \"Substream\", \"serializeError\", \"getRpcPromiseCallback\", \"createErrorMiddleware\", \"createStreamMiddleware\", \"createScaffoldMiddleware\", \"createIdRemapMiddleware\", \"createLoggerMiddleware\", \"createAsyncMiddleware\", \"JRPCEngine\", \"mergeMiddleware\", \"createEngineStream\", \"IGNORE_SUBSTREAM\", \"ObjectMultiplex\", \"setupMultiplex\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {\n    __webpack_require__.d(__webpack_exports__, key, function () {\n      return _src_utils__WEBPACK_IMPORTED_MODULE_7__[key];\n    });\n  })(__WEBPACK_IMPORT_KEY__);\n\n  /***/\n}, /* 44 */\n/***/function (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  exports.byteLength = byteLength;\n  exports.toByteArray = toByteArray;\n  exports.fromByteArray = fromByteArray;\n  var lookup = [];\n  var revLookup = [];\n  var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  // Support decoding URL-safe base64 strings, as Node.js does.\n  // See: https://en.wikipedia.org/wiki/Base64#URL_applications\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n  function getLens(b64) {\n    var len = b64.length;\n    if (len % 4 > 0) {\n      throw new Error('Invalid string. Length must be a multiple of 4');\n    }\n\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf('=');\n    if (validLen === -1) validLen = len;\n    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [validLen, placeHoldersLen];\n  }\n\n  // base64 is 4/3 + up to two characters of the original data\n  function byteLength(b64) {\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n  }\n  function _byteLength(b64, validLen, placeHoldersLen) {\n    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n  }\n  function toByteArray(b64) {\n    var tmp;\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n    var curByte = 0;\n\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n    var i;\n    for (i = 0; i < len; i += 4) {\n      tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n      arr[curByte++] = tmp >> 16 & 0xFF;\n      arr[curByte++] = tmp >> 8 & 0xFF;\n      arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 2) {\n      tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n      arr[curByte++] = tmp & 0xFF;\n    }\n    if (placeHoldersLen === 1) {\n      tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n      arr[curByte++] = tmp >> 8 & 0xFF;\n      arr[curByte++] = tmp & 0xFF;\n    }\n    return arr;\n  }\n  function tripletToBase64(num) {\n    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n  }\n  function encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for (var i = start; i < end; i += 3) {\n      tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n      output.push(tripletToBase64(tmp));\n    }\n    return output.join('');\n  }\n  function fromByteArray(uint8) {\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n    var parts = [];\n    var maxChunkLength = 16383; // must be multiple of 3\n\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n      parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n    }\n\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n      tmp = uint8[len - 1];\n      parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n    } else if (extraBytes === 2) {\n      tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n      parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n    }\n    return parts.join('');\n  }\n\n  /***/\n}, /* 45 */\n/***/function (module, exports) {\n  /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n  exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? nBytes - 1 : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n    i += d;\n    e = s & (1 << -nBits) - 1;\n    s >>= -nBits;\n    nBits += eLen;\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n    m = e & (1 << -nBits) - 1;\n    e >>= -nBits;\n    nBits += mLen;\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n    if (e === 0) {\n      e = 1 - eBias;\n    } else if (e === eMax) {\n      return m ? NaN : (s ? -1 : 1) * Infinity;\n    } else {\n      m = m + Math.pow(2, mLen);\n      e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n  };\n  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    var i = isLE ? 0 : nBytes - 1;\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n      m = isNaN(value) ? 1 : 0;\n      e = eMax;\n    } else {\n      e = Math.floor(Math.log(value) / Math.LN2);\n      if (value * (c = Math.pow(2, -e)) < 1) {\n        e--;\n        c *= 2;\n      }\n      if (e + eBias >= 1) {\n        value += rt / c;\n      } else {\n        value += rt * Math.pow(2, 1 - eBias);\n      }\n      if (value * c >= 2) {\n        e++;\n        c /= 2;\n      }\n      if (e + eBias >= eMax) {\n        m = 0;\n        e = eMax;\n      } else if (e + eBias >= 1) {\n        m = (value * c - 1) * Math.pow(2, mLen);\n        e = e + eBias;\n      } else {\n        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n        e = 0;\n      }\n    }\n    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n    e = e << mLen | m;\n    eLen += mLen;\n    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n    buffer[offset + i - d] |= s * 128;\n  };\n\n  /***/\n}, /* 46 */\n/***/function (module, exports) {\n\n  /* (ignored) */\n\n  /***/}, /* 47 */\n/***/function (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var Buffer = __webpack_require__(24).Buffer;\n  var util = __webpack_require__(48);\n  function copyBuffer(src, target, offset) {\n    src.copy(target, offset);\n  }\n  module.exports = function () {\n    function BufferList() {\n      _classCallCheck(this, BufferList);\n      this.head = null;\n      this.tail = null;\n      this.length = 0;\n    }\n    BufferList.prototype.push = function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    };\n    BufferList.prototype.unshift = function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    };\n    BufferList.prototype.shift = function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    };\n    BufferList.prototype.clear = function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    };\n    BufferList.prototype.join = function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n      return ret;\n    };\n    BufferList.prototype.concat = function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      if (this.length === 1) return this.head.data;\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    };\n    return BufferList;\n  }();\n  if (util && util.inspect && util.inspect.custom) {\n    module.exports.prototype[util.inspect.custom] = function () {\n      var obj = util.inspect({\n        length: this.length\n      });\n      return this.constructor.name + ' ' + obj;\n    };\n  }\n\n  /***/\n}, /* 48 */\n/***/function (module, exports) {\n\n  /* (ignored) */\n\n  /***/}, /* 49 */\n/***/function (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */(function (global) {\n    var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\n    var apply = Function.prototype.apply;\n\n    // DOM APIs, for completeness\n\n    exports.setTimeout = function () {\n      return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n    };\n    exports.setInterval = function () {\n      return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n    };\n    exports.clearTimeout = exports.clearInterval = function (timeout) {\n      if (timeout) {\n        timeout.close();\n      }\n    };\n    function Timeout(id, clearFn) {\n      this._id = id;\n      this._clearFn = clearFn;\n    }\n    Timeout.prototype.unref = Timeout.prototype.ref = function () {};\n    Timeout.prototype.close = function () {\n      this._clearFn.call(scope, this._id);\n    };\n\n    // Does not start the time, just sets up the members needed.\n    exports.enroll = function (item, msecs) {\n      clearTimeout(item._idleTimeoutId);\n      item._idleTimeout = msecs;\n    };\n    exports.unenroll = function (item) {\n      clearTimeout(item._idleTimeoutId);\n      item._idleTimeout = -1;\n    };\n    exports._unrefActive = exports.active = function (item) {\n      clearTimeout(item._idleTimeoutId);\n      var msecs = item._idleTimeout;\n      if (msecs >= 0) {\n        item._idleTimeoutId = setTimeout(function onTimeout() {\n          if (item._onTimeout) item._onTimeout();\n        }, msecs);\n      }\n    };\n\n    // setimmediate attaches itself to the global object\n    __webpack_require__(50);\n    // On some exotic environments, it's not clear which object `setimmediate` was\n    // able to install onto.  Search each possibility in the same order as the\n    // `setimmediate` library.\n    exports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\n    exports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;\n\n    /* WEBPACK VAR INJECTION */\n  }).call(this, __webpack_require__(13));\n\n  /***/\n}, /* 50 */\n/***/function (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */(function (global, process) {\n    (function (global, undefined) {\n      \"use strict\";\n\n      if (global.setImmediate) {\n        return;\n      }\n      var nextHandle = 1; // Spec says greater than zero\n      var tasksByHandle = {};\n      var currentlyRunningATask = false;\n      var doc = global.document;\n      var registerImmediate;\n      function setImmediate(callback) {\n        // Callback can either be a function or a string\n        if (typeof callback !== \"function\") {\n          callback = new Function(\"\" + callback);\n        }\n        // Copy function arguments\n        var args = new Array(arguments.length - 1);\n        for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n        }\n        // Store and register the task\n        var task = {\n          callback: callback,\n          args: args\n        };\n        tasksByHandle[nextHandle] = task;\n        registerImmediate(nextHandle);\n        return nextHandle++;\n      }\n      function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n      }\n      function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n          case 0:\n            callback();\n            break;\n          case 1:\n            callback(args[0]);\n            break;\n          case 2:\n            callback(args[0], args[1]);\n            break;\n          case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n          default:\n            callback.apply(undefined, args);\n            break;\n        }\n      }\n      function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n          // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n          // \"too much recursion\" error.\n          setTimeout(runIfPresent, 0, handle);\n        } else {\n          var task = tasksByHandle[handle];\n          if (task) {\n            currentlyRunningATask = true;\n            try {\n              run(task);\n            } finally {\n              clearImmediate(handle);\n              currentlyRunningATask = false;\n            }\n          }\n        }\n      }\n      function installNextTickImplementation() {\n        registerImmediate = function registerImmediate(handle) {\n          process.nextTick(function () {\n            runIfPresent(handle);\n          });\n        };\n      }\n      function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n          var postMessageIsAsynchronous = true;\n          var oldOnMessage = global.onmessage;\n          global.onmessage = function () {\n            postMessageIsAsynchronous = false;\n          };\n          global.postMessage(\"\", \"*\");\n          global.onmessage = oldOnMessage;\n          return postMessageIsAsynchronous;\n        }\n      }\n      function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function onGlobalMessage(event) {\n          if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n            runIfPresent(+event.data.slice(messagePrefix.length));\n          }\n        };\n        if (global.addEventListener) {\n          global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n          global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n        registerImmediate = function registerImmediate(handle) {\n          global.postMessage(messagePrefix + handle, \"*\");\n        };\n      }\n      function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function (event) {\n          var handle = event.data;\n          runIfPresent(handle);\n        };\n        registerImmediate = function registerImmediate(handle) {\n          channel.port2.postMessage(handle);\n        };\n      }\n      function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function registerImmediate(handle) {\n          // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n          // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n          var script = doc.createElement(\"script\");\n          script.onreadystatechange = function () {\n            runIfPresent(handle);\n            script.onreadystatechange = null;\n            html.removeChild(script);\n            script = null;\n          };\n          html.appendChild(script);\n        };\n      }\n      function installSetTimeoutImplementation() {\n        registerImmediate = function registerImmediate(handle) {\n          setTimeout(runIfPresent, 0, handle);\n        };\n      }\n\n      // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n      var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n      attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n      // Don't get fooled by e.g. browserify environments.\n      if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n      } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n      } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n      } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n      } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n      }\n      attachTo.setImmediate = setImmediate;\n      attachTo.clearImmediate = clearImmediate;\n    })(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);\n\n    /* WEBPACK VAR INJECTION */\n  }).call(this, __webpack_require__(13), __webpack_require__(19));\n\n  /***/\n}, /* 51 */\n/***/function (module, exports, __webpack_require__) {\n  /* WEBPACK VAR INJECTION */(function (global) {\n    /**\n     * Module exports.\n     */\n\n    module.exports = deprecate;\n\n    /**\n     * Mark that a method should not be used.\n     * Returns a modified function which warns once by default.\n     *\n     * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n     *\n     * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n     * will throw an Error when invoked.\n     *\n     * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n     * will invoke `console.trace()` instead of `console.error()`.\n     *\n     * @param {Function} fn - the function to deprecate\n     * @param {String} msg - the string to print to the console when `fn` is invoked\n     * @returns {Function} a new \"deprecated\" version of `fn`\n     * @api public\n     */\n\n    function deprecate(fn, msg) {\n      if (config('noDeprecation')) {\n        return fn;\n      }\n      var warned = false;\n      function deprecated() {\n        if (!warned) {\n          if (config('throwDeprecation')) {\n            throw new Error(msg);\n          } else if (config('traceDeprecation')) {\n            console.trace(msg);\n          } else {\n            console.warn(msg);\n          }\n          warned = true;\n        }\n        return fn.apply(this, arguments);\n      }\n      return deprecated;\n    }\n\n    /**\n     * Checks `localStorage` for boolean values for the given `name`.\n     *\n     * @param {String} name\n     * @returns {Boolean}\n     * @api private\n     */\n\n    function config(name) {\n      // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n      try {\n        if (!global.localStorage) return false;\n      } catch (_) {\n        return false;\n      }\n      var val = global.localStorage[name];\n      if (null == val) return false;\n      return String(val).toLowerCase() === 'true';\n    }\n\n    /* WEBPACK VAR INJECTION */\n  }).call(this, __webpack_require__(13));\n\n  /***/\n}, /* 52 */\n/***/function (module, exports, __webpack_require__) {\n  /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n  /* eslint-disable node/no-deprecated-api */\n  var buffer = __webpack_require__(30);\n  var Buffer = buffer.Buffer;\n\n  // alternative to using Object.keys for old browsers\n  function copyProps(src, dst) {\n    for (var key in src) {\n      dst[key] = src[key];\n    }\n  }\n  if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n    module.exports = buffer;\n  } else {\n    // Copy properties from require('buffer')\n    copyProps(buffer, exports);\n    exports.Buffer = SafeBuffer;\n  }\n  function SafeBuffer(arg, encodingOrOffset, length) {\n    return Buffer(arg, encodingOrOffset, length);\n  }\n  SafeBuffer.prototype = Object.create(Buffer.prototype);\n\n  // Copy static methods from Buffer\n  copyProps(Buffer, SafeBuffer);\n  SafeBuffer.from = function (arg, encodingOrOffset, length) {\n    if (typeof arg === 'number') {\n      throw new TypeError('Argument must not be a number');\n    }\n    return Buffer(arg, encodingOrOffset, length);\n  };\n  SafeBuffer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    var buf = Buffer(size);\n    if (fill !== undefined) {\n      if (typeof encoding === 'string') {\n        buf.fill(fill, encoding);\n      } else {\n        buf.fill(fill);\n      }\n    } else {\n      buf.fill(0);\n    }\n    return buf;\n  };\n  SafeBuffer.allocUnsafe = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    return Buffer(size);\n  };\n  SafeBuffer.allocUnsafeSlow = function (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('Argument must be a number');\n    }\n    return buffer.SlowBuffer(size);\n  };\n\n  /***/\n}, /* 53 */\n/***/function (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  // a passthrough stream.\n  // basically just the most minimal sort of Transform stream.\n  // Every written chunk gets output as-is.\n  module.exports = PassThrough;\n  var Transform = __webpack_require__(33);\n\n  /*<replacement>*/\n  var util = Object.create(__webpack_require__(16));\n  util.inherits = __webpack_require__(12);\n  /*</replacement>*/\n\n  util.inherits(PassThrough, Transform);\n  function PassThrough(options) {\n    if (!(this instanceof PassThrough)) return new PassThrough(options);\n    Transform.call(this, options);\n  }\n  PassThrough.prototype._transform = function (chunk, encoding, cb) {\n    cb(null, chunk);\n  };\n\n  /***/\n}, /* 54 */\n/***/function (module, exports, __webpack_require__) {\n  module.exports = __webpack_require__(25);\n\n  /***/\n}, /* 55 */\n/***/function (module, exports, __webpack_require__) {\n  module.exports = __webpack_require__(11);\n\n  /***/\n}, /* 56 */\n/***/function (module, exports, __webpack_require__) {\n  module.exports = __webpack_require__(23).Transform;\n\n  /***/\n}, /* 57 */\n/***/function (module, exports, __webpack_require__) {\n  module.exports = __webpack_require__(23).PassThrough;\n\n  /***/\n}\n/******/]);","map":null,"metadata":{},"sourceType":"script"}