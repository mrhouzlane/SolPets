{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\solana-boilerplate\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { ChakraProvider, Box, Flex, Text, VStack, Grid, Button, useToast, Code, HStack, Heading, theme as baseTheme, Input, SimpleGrid, Img, Container, Stack, extendTheme } from '@chakra-ui/react';\nimport * as web3 from '@solana/web3.js';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { getPhantomWallet, getSolflareWallet, getSolletWallet, getSolletExtensionWallet, getLedgerWallet } from '@solana/wallet-adapter-wallets';\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\nimport Home from './components/home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\nfunction App() {\n  _s();\n\n  const network = 'devnet';\n  const endpoint = web3.clusterApiUrl(network);\n  const wallets = useMemo(() => [getPhantomWallet(), getSolflareWallet(), getSolletWallet({\n    network\n  }), getSolletExtensionWallet({\n    network\n  }), getLedgerWallet()], [network]);\n  const theme = extendTheme({\n    fonts: {\n      heading: 'Montserrat',\n      Body: 'Inter'\n    },\n    colors: {\n      brand: {\n        100: \"linear-gradient(144deg, #242038 20%, #522DA9 80%, #432C87)\",\n        // ...\n        900: \"#1a202c\"\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n        endpoint: endpoint,\n        children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n          wallets: wallets,\n          autoConnect: true,\n          children: /*#__PURE__*/_jsxDEV(WalletModalProvider, {\n            children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"W9IgGN+f7P4ScyFu7AdMyjvnXHI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Public/Web3/Github/solana-boilerplate/src/App.js"],"names":["React","useCallback","useEffect","useState","useMemo","ChakraProvider","Box","Flex","Text","VStack","Grid","Button","useToast","Code","HStack","Heading","theme","baseTheme","Input","SimpleGrid","Img","Container","Stack","extendTheme","web3","ConnectionProvider","WalletProvider","getPhantomWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","getLedgerWallet","WalletModalProvider","Home","require","App","network","endpoint","clusterApiUrl","wallets","fonts","heading","Body","colors","brand"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,EAAkDC,OAAlD,QAAiE,OAAjE;AACA,SACEC,cADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,IANF,EAOEC,MAPF,EAQEC,QARF,EASEC,IATF,EAUEC,MAVF,EAWEC,OAXF,EAYEC,KAAK,IAAIC,SAZX,EAaEC,KAbF,EAcEC,UAdF,EAeEC,GAfF,EAgBEC,SAhBF,EAiBEC,KAjBF,EAkBEC,WAlBF,QAmBO,kBAnBP;AAsBA,OAAO,KAAKC,IAAZ,MAAsB,iBAAtB;AACA,SACEC,kBADF,EAEEC,cAFF,QAGO,8BAHP;AAIA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,wBAJF,EAKEC,eALF,QAMO,gCANP;AAOA,SACEC,mBADF,QAEO,iCAFP;AAKA,OAAOC,IAAP,MAAiB,mBAAjB;;;;AAEAC,OAAO,CAAC,4CAAD,CAAP;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,OAAO,GAAG,QAAhB;AACA,QAAMC,QAAQ,GAAGb,IAAI,CAACc,aAAL,CAAmBF,OAAnB,CAAjB;AACA,QAAMG,OAAO,GAAGnC,OAAO,CACrB,MAAM,CACJuB,gBAAgB,EADZ,EAEJC,iBAAiB,EAFb,EAGJC,eAAe,CAAC;AAAEO,IAAAA;AAAF,GAAD,CAHX,EAIJN,wBAAwB,CAAC;AAAEM,IAAAA;AAAF,GAAD,CAJpB,EAKJL,eAAe,EALX,CADe,EAQrB,CAACK,OAAD,CARqB,CAAvB;AAWA,QAAMpB,KAAK,GAAGO,WAAW,CAAC;AACxBiB,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAC,YADH;AAELC,MAAAA,IAAI,EAAE;AAFD,KADiB;AAKxBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE;AACL,aAAK,4DADA;AAEL;AACA,aAAK;AAHA;AADD;AALgB,GAAD,CAAzB;AAcA,sBACE;AAAA,2BACA,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAE5B,KAAvB;AAAA,6BACE,QAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAEqB,QAA9B;AAAA,+BACE,QAAC,cAAD;AAAgB,UAAA,OAAO,EAAEE,OAAzB;AAAkC,UAAA,WAAW,MAA7C;AAAA,iCACE,QAAC,mBAAD;AAAA,mCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAaD;;GAzCQJ,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React, { useCallback, useEffect, useState, useMemo } from 'react';\r\nimport {\r\n  ChakraProvider,\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  VStack,\r\n  Grid,\r\n  Button,\r\n  useToast,\r\n  Code,\r\n  HStack,\r\n  Heading,\r\n  theme as baseTheme,\r\n  Input,\r\n  SimpleGrid,\r\n  Img,\r\n  Container,\r\n  Stack,\r\n  extendTheme,\r\n} from '@chakra-ui/react';\r\n\r\n\r\nimport * as web3 from '@solana/web3.js';\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\nimport {\r\n  getPhantomWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getSolletExtensionWallet,\r\n  getLedgerWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\nimport {\r\n  WalletModalProvider,\r\n} from '@solana/wallet-adapter-react-ui';\r\n\r\n\r\nimport Home from './components/home'\r\n\r\nrequire('@solana/wallet-adapter-react-ui/styles.css');\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const network = 'devnet';\r\n  const endpoint = web3.clusterApiUrl(network);\r\n  const wallets = useMemo(\r\n    () => [\r\n      getPhantomWallet(),\r\n      getSolflareWallet(),\r\n      getSolletWallet({ network }),\r\n      getSolletExtensionWallet({ network }),\r\n      getLedgerWallet(),\r\n    ],\r\n    [network]\r\n  );\r\n  \r\n  const theme = extendTheme({\r\n    fonts: {\r\n      heading:'Montserrat',\r\n      Body: 'Inter',\r\n    },\r\n    colors: {\r\n      brand: {\r\n        100: \"linear-gradient(144deg, #242038 20%, #522DA9 80%, #432C87)\",\r\n        // ...\r\n        900: \"#1a202c\",\r\n      },\r\n    },\r\n  })\r\n\r\n  return (\r\n    <>\r\n    <ChakraProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletModalProvider>\r\n            <Home></Home>\r\n          </WalletModalProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ChakraProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}