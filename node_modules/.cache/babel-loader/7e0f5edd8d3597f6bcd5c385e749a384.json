{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Public\\\\Web3\\\\Github\\\\SolPets\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { sortNodes, isElement, getNextIndex, getPrevIndex } from \"./utils\";\n\n/**\n * @internal\n *\n * Class to manage descendants and their relative indices in the DOM.\n * It uses `node.compareDocumentPosition(...)` under the hood\n */\nexport var DescendantsManager = function DescendantsManager() {\n  var _this2 = this;\n  _classCallCheck(this, DescendantsManager);\n  var _this = this;\n  _defineProperty(this, \"descendants\", new Map());\n  _defineProperty(this, \"register\", function (nodeOrOptions) {\n    if (nodeOrOptions == null) return;\n    if (isElement(nodeOrOptions)) {\n      return _this2.registerNode(nodeOrOptions);\n    }\n    return function (node) {\n      _this2.registerNode(node, nodeOrOptions);\n    };\n  });\n  _defineProperty(this, \"unregister\", function (node) {\n    _this2.descendants.delete(node);\n    var sorted = sortNodes(Array.from(_this2.descendants.keys()));\n    _this2.assignIndex(sorted);\n  });\n  _defineProperty(this, \"destroy\", function () {\n    _this2.descendants.clear();\n  });\n  _defineProperty(this, \"assignIndex\", function (descendants) {\n    _this2.descendants.forEach(function (descendant) {\n      var index = descendants.indexOf(descendant.node);\n      descendant.index = index;\n      descendant.node.dataset.index = descendant.index.toString();\n    });\n  });\n  _defineProperty(this, \"count\", function () {\n    return _this2.descendants.size;\n  });\n  _defineProperty(this, \"enabledCount\", function () {\n    return _this2.enabledValues().length;\n  });\n  _defineProperty(this, \"values\", function () {\n    var values = Array.from(_this2.descendants.values());\n    return values.sort(function (a, b) {\n      return a.index - b.index;\n    });\n  });\n  _defineProperty(this, \"enabledValues\", function () {\n    return _this2.values().filter(function (descendant) {\n      return !descendant.disabled;\n    });\n  });\n  _defineProperty(this, \"item\", function (index) {\n    if (_this2.count() === 0) return undefined;\n    return _this2.values()[index];\n  });\n  _defineProperty(this, \"enabledItem\", function (index) {\n    if (_this2.enabledCount() === 0) return undefined;\n    return _this2.enabledValues()[index];\n  });\n  _defineProperty(this, \"first\", function () {\n    return _this2.item(0);\n  });\n  _defineProperty(this, \"firstEnabled\", function () {\n    return _this2.enabledItem(0);\n  });\n  _defineProperty(this, \"last\", function () {\n    return _this2.item(_this2.descendants.size - 1);\n  });\n  _defineProperty(this, \"lastEnabled\", function () {\n    var lastIndex = _this2.enabledValues().length - 1;\n    return _this2.enabledItem(lastIndex);\n  });\n  _defineProperty(this, \"indexOf\", function (node) {\n    var _this$descendants$get, _this$descendants$get2;\n    if (!node) return -1;\n    return (_this$descendants$get = (_this$descendants$get2 = _this2.descendants.get(node)) == null ? void 0 : _this$descendants$get2.index) != null ? _this$descendants$get : -1;\n  });\n  _defineProperty(this, \"enabledIndexOf\", function (node) {\n    if (node == null) return -1;\n    return _this2.enabledValues().findIndex(function (i) {\n      return i.node.isSameNode(node);\n    });\n  });\n  _defineProperty(this, \"next\", function (index, loop) {\n    if (loop === void 0) {\n      loop = true;\n    }\n    var next = getNextIndex(index, _this.count(), loop);\n    return _this.item(next);\n  });\n  _defineProperty(this, \"nextEnabled\", function (index, loop) {\n    if (loop === void 0) {\n      loop = true;\n    }\n    var item = _this.item(index);\n    if (!item) return;\n    var enabledIndex = _this.enabledIndexOf(item.node);\n    var nextEnabledIndex = getNextIndex(enabledIndex, _this.enabledCount(), loop);\n    return _this.enabledItem(nextEnabledIndex);\n  });\n  _defineProperty(this, \"prev\", function (index, loop) {\n    if (loop === void 0) {\n      loop = true;\n    }\n    var prev = getPrevIndex(index, _this.count() - 1, loop);\n    return _this.item(prev);\n  });\n  _defineProperty(this, \"prevEnabled\", function (index, loop) {\n    if (loop === void 0) {\n      loop = true;\n    }\n    var item = _this.item(index);\n    if (!item) return;\n    var enabledIndex = _this.enabledIndexOf(item.node);\n    var prevEnabledIndex = getPrevIndex(enabledIndex, _this.enabledCount() - 1, loop);\n    return _this.enabledItem(prevEnabledIndex);\n  });\n  _defineProperty(this, \"registerNode\", function (node, options) {\n    if (!node || _this2.descendants.has(node)) return;\n    var keys = Array.from(_this2.descendants.keys()).concat(node);\n    var sorted = sortNodes(keys);\n    if (options != null && options.disabled) {\n      options.disabled = !!options.disabled;\n    }\n    var descendant = _extends({\n      node: node,\n      index: -1\n    }, options);\n    _this2.descendants.set(node, descendant);\n    _this2.assignIndex(sorted);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}