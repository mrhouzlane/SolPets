{"ast":null,"code":"import { runIfFn } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useCallbackRef } from \"./use-callback-ref\";\n\n/**\n * React hook to manage browser event listeners\n *\n * @param event the event name\n * @param handler the event handler function to execute\n * @param doc the dom environment to execute against (defaults to `document`)\n * @param options the event listener options\n *\n * @internal\n */\nexport function useEventListener(event, handler, env, options) {\n  var listener = useCallbackRef(handler);\n  React.useEffect(function () {\n    var _runIfFn;\n    var node = (_runIfFn = runIfFn(env)) != null ? _runIfFn : document;\n    node.addEventListener(event, listener, options);\n    return function () {\n      node.removeEventListener(event, listener, options);\n    };\n  }, [event, env, options, listener]);\n  return function () {\n    var _runIfFn2;\n    var node = (_runIfFn2 = runIfFn(env)) != null ? _runIfFn2 : document;\n    node.removeEventListener(event, listener, options);\n  };\n}","map":null,"metadata":{},"sourceType":"module"}